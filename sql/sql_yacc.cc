/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa.h"
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 531 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_VAR_LIB_PB2_SB_1_4617039_1632834178_1_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_VAR_LIB_PB2_SB_1_4617039_1632834178_1_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    AUTHENTICATION_SYM = 1191,
    FACTOR_SYM = 1192,
    FINISH_SYM = 1193,
    INITIATE_SYM = 1194,
    REGISTRATION_SYM = 1195,
    UNREGISTER_SYM = 1196,
    INITIAL_SYM = 1197,
    CHALLENGE_RESPONSE_SYM = 1198,
    GTID_ONLY_SYM = 1199,
    KEYWORD_USED_AS_IDENT = 1201,
    KEYWORD_USED_AS_KEYWORD = 1202,
    CONDITIONLESS_JOIN = 1203,
    SUBQUERY_AS_EXPR = 1204,
    EMPTY_FROM_CLAUSE = 1205
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define KEYWORD_USED_AS_IDENT 1201
#define KEYWORD_USED_AS_KEYWORD 1202
#define CONDITIONLESS_JOIN 1203
#define SUBQUERY_AS_EXPR 1204
#define EMPTY_FROM_CLAUSE 1205

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_VAR_LIB_PB2_SB_1_4617039_1632834178_1_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2186 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1137
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   89576

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  818
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1018
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3221
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5556

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1205

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   815,     2,     2,     2,   803,   798,     2,
     807,   808,   801,   800,   812,   799,   813,   802,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   814,   810,
       2,     2,     2,     2,   811,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   804,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   816,   797,   817,   805,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       2,   794,   795,   796,   806,   809
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2177,  2177,  2178,  2183,  2193,  2211,  2215,  2223,  2236,
    2235,  2260,  2267,  2269,  2273,  2274,  2279,  2280,  2281,  2282,
    2283,  2284,  2285,  2286,  2287,  2288,  2289,  2290,  2291,  2292,
    2293,  2294,  2295,  2296,  2297,  2298,  2299,  2300,  2301,  2302,
    2303,  2304,  2305,  2306,  2307,  2308,  2309,  2310,  2311,  2312,
    2313,  2314,  2315,  2316,  2317,  2318,  2319,  2320,  2321,  2322,
    2323,  2324,  2325,  2326,  2327,  2328,  2329,  2330,  2331,  2332,
    2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,  2342,
    2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,  2352,
    2353,  2354,  2355,  2356,  2357,  2358,  2359,  2360,  2361,  2362,
    2363,  2364,  2365,  2366,  2367,  2368,  2369,  2370,  2371,  2372,
    2373,  2374,  2375,  2376,  2377,  2378,  2379,  2380,  2381,  2382,
    2383,  2384,  2385,  2386,  2387,  2388,  2389,  2390,  2391,  2392,
    2393,  2394,  2395,  2396,  2397,  2398,  2399,  2400,  2401,  2402,
    2403,  2404,  2405,  2406,  2407,  2408,  2409,  2410,  2411,  2412,
    2413,  2417,  2427,  2428,  2432,  2452,  2459,  2470,  2469,  2480,
    2482,  2486,  2487,  2491,  2504,  2503,  2522,  2527,  2532,  2531,
    2548,  2547,  2565,  2566,  2569,  2576,  2583,  2590,  2597,  2604,
    2612,  2621,  2627,  2634,  2641,  2649,  2658,  2664,  2670,  2678,
    2686,  2692,  2699,  2706,  2714,  2726,  2732,  2739,  2746,  2754,
    2764,  2765,  2769,  2775,  2779,  2784,  2788,  2794,  2798,  2803,
    2807,  2812,  2816,  2821,  2825,  2830,  2834,  2839,  2843,  2848,
    2852,  2857,  2861,  2866,  2870,  2875,  2879,  2884,  2888,  2893,
    2897,  2902,  2906,  2911,  2915,  2920,  2924,  2929,  2933,  2938,
    2942,  2947,  2951,  2956,  2960,  2965,  2969,  2974,  2978,  2983,
    2987,  2992,  2996,  3000,  3004,  3008,  3012,  3022,  3026,  3030,
    3035,  3046,  3051,  3055,  3059,  3063,  3064,  3068,  3072,  3076,
    3081,  3085,  3089,  3093,  3099,  3133,  3137,  3141,  3145,  3151,
    3152,  3168,  3169,  3185,  3186,  3203,  3206,  3208,  3209,  3213,
    3219,  3225,  3234,  3238,  3242,  3249,  3253,  3257,  3271,  3276,
    3284,  3289,  3293,  3298,  3302,  3306,  3322,  3326,  3337,  3338,
    3343,  3353,  3363,  3368,  3376,  3383,  3396,  3395,  3410,  3412,
    3425,  3445,  3464,  3484,  3501,  3506,  3515,  3520,  3532,  3544,
    3558,  3574,  3578,  3585,  3594,  3602,  3613,  3614,  3618,  3622,
    3626,  3630,  3634,  3639,  3643,  3651,  3650,  3682,  3681,  3690,
    3699,  3700,  3706,  3712,  3722,  3728,  3736,  3738,  3747,  3748,
    3752,  3758,  3767,  3768,  3776,  3776,  3834,  3835,  3836,  3837,
    3838,  3839,  3840,  3841,  3842,  3843,  3844,  3845,  3846,  3850,
    3864,  3883,  3884,  3888,  3889,  3894,  3896,  3898,  3900,  3902,
    3904,  3906,  3912,  3913,  3914,  3918,  3922,  3929,  3936,  3937,
    3944,  3946,  3950,  3951,  3955,  4006,  4008,  4012,  4013,  4017,
    4067,  4068,  4069,  4070,  4074,  4075,  4079,  4080,  4085,  4088,
    4112,  4211,  4229,  4228,  4307,  4303,  4380,  4381,  4386,  4388,
    4393,  4416,  4427,  4431,  4453,  4454,  4458,  4462,  4475,  4481,
    4487,  4496,  4509,  4535,  4541,  4542,  4548,  4549,  4554,  4560,
    4573,  4575,  4595,  4601,  4603,  4605,  4607,  4609,  4611,  4613,
    4615,  4617,  4619,  4621,  4623,  4628,  4642,  4659,  4660,  4662,
    4667,  4673,  4682,  4688,  4697,  4705,  4733,  4741,  4743,  4752,
    4757,  4763,  4772,  4780,  4782,  4784,  4786,  4788,  4790,  4792,
    4794,  4796,  4798,  4800,  4802,  4804,  4809,  4829,  4853,  4857,
    4865,  4866,  4867,  4868,  4869,  4870,  4871,  4872,  4873,  4874,
    4875,  4876,  4877,  4882,  4881,  4892,  4892,  4957,  4956,  5013,
    5013,  5035,  5092,  5139,  5163,  5162,  5187,  5209,  5211,  5212,
    5216,  5234,  5255,  5263,  5301,  5255,  5329,  5331,  5332,  5336,
    5337,  5342,  5352,  5341,  5404,  5403,  5417,  5418,  5422,  5423,
    5428,  5436,  5427,  5486,  5494,  5485,  5540,  5553,  5558,  5557,
    5595,  5596,  5601,  5600,  5634,  5634,  5653,  5652,  5700,  5715,
    5723,  5714,  5781,  5789,  5778,  5831,  5833,  5838,  5840,  5842,
    5857,  5858,  5865,  5866,  5873,  5874,  5878,  5884,  5893,  5894,
    5895,  5896,  5897,  5898,  5899,  5900,  5901,  5902,  5903,  5907,
    5908,  5912,  5918,  5927,  5928,  5929,  5930,  5931,  5932,  5933,
    5937,  5938,  5942,  5948,  5957,  5961,  5962,  5966,  5972,  5981,
    5982,  5983,  5984,  5985,  5986,  5987,  5991,  5992,  5996,  6002,
    6011,  6012,  6013,  6017,  6021,  6022,  6026,  6030,  6037,  6044,
    6048,  6055,  6062,  6069,  6076,  6083,  6090,  6097,  6104,  6108,
    6115,  6122,  6129,  6130,  6205,  6211,  6215,  6220,  6225,  6231,
    6239,  6249,  6250,  6264,  6272,  6276,  6280,  6284,  6288,  6292,
    6299,  6300,  6305,  6306,  6324,  6325,  6337,  6338,  6343,  6352,
    6353,  6358,  6364,  6374,  6375,  6387,  6388,  6392,  6398,  6407,
    6416,  6419,  6424,  6432,  6433,  6437,  6441,  6448,  6455,  6465,
    6464,  6482,  6488,  6497,  6498,  6503,  6504,  6508,  6514,  6523,
    6530,  6531,  6535,  6541,  6550,  6552,  6554,  6556,  6558,  6560,
    6562,  6564,  6573,  6574,  6578,  6579,  6600,  6601,  6605,  6606,
    6610,  6615,  6620,  6635,  6636,  6640,  6646,  6655,  6661,  6669,
    6671,  6675,  6679,  6683,  6687,  6691,  6695,  6708,  6712,  6716,
    6720,  6724,  6728,  6732,  6736,  6740,  6758,  6762,  6766,  6770,
    6774,  6778,  6782,  6786,  6790,  6794,  6798,  6802,  6806,  6810,
    6814,  6818,  6832,  6836,  6840,  6844,  6851,  6865,  6869,  6873,
    6877,  6881,  6882,  6883,  6884,  6885,  6886,  6890,  6891,  6892,
    6896,  6897,  6898,  6899,  6903,  6909,  6918,  6919,  6923,  6930,
    6931,  6939,  6945,  6951,  6956,  6966,  6974,  6982,  6986,  6987,
    6991,  6992,  6996,  6997,  7001,  7005,  7009,  7030,  7032,  7036,
    7037,  7038,  7042,  7046,  7050,  7054,  7058,  7062,  7066,  7070,
    7075,  7080,  7089,  7098,  7102,  7106,  7111,  7120,  7124,  7147,
    7151,  7155,  7159,  7163,  7167,  7171,  7172,  7176,  7180,  7184,
    7189,  7194,  7199,  7204,  7209,  7213,  7217,  7222,  7226,  7233,
    7235,  7237,  7239,  7241,  7243,  7245,  7247,  7252,  7253,  7257,
    7258,  7262,  7263,  7264,  7265,  7266,  7270,  7271,  7272,  7273,
    7274,  7278,  7283,  7287,  7289,  7293,  7294,  7295,  7296,  7301,
    7305,  7314,  7318,  7323,  7327,  7336,  7337,  7341,  7342,  7343,
    7351,  7352,  7356,  7360,  7364,  7365,  7366,  7375,  7376,  7377,
    7378,  7381,  7382,  7387,  7391,  7395,  7396,  7400,  7419,  7438,
    7442,  7446,  7450,  7454,  7458,  7462,  7466,  7470,  7474,  7478,
    7482,  7486,  7490,  7494,  7498,  7507,  7512,  7525,  7529,  7533,
    7540,  7541,  7542,  7546,  7547,  7548,  7552,  7558,  7562,  7566,
    7567,  7571,  7580,  7584,  7585,  7589,  7598,  7602,  7603,  7607,
    7613,  7617,  7618,  7622,  7623,  7628,  7629,  7633,  7640,  7648,
    7654,  7664,  7668,  7673,  7678,  7683,  7690,  7696,  7707,  7708,
    7716,  7715,  7727,  7729,  7733,  7748,  7749,  7753,  7760,  7770,
    7771,  7772,  7773,  7778,  7782,  7787,  7792,  7798,  7807,  7808,
    7809,  7810,  7811,  7815,  7816,  7820,  7821,  7825,  7826,  7830,
    7831,  7832,  7836,  7837,  7841,  7842,  7846,  7852,  7861,  7862,
    7876,  7877,  7881,  7887,  7896,  7900,  7901,  7905,  7911,  7920,
    7921,  7926,  7927,  7931,  7935,  7939,  7963,  7964,  7965,  7969,
    7970,  7974,  7975,  7979,  7980,  7984,  7985,  7986,  7990,  7996,
    8006,  8012,  8027,  8033,  8043,  8044,  8053,  8054,  8058,  8059,
    8063,  8069,  8081,  8091,  8105,  8104,  8125,  8124,  8146,  8145,
    8167,  8166,  8185,  8179,  8202,  8201,  8237,  8259,  8278,  8298,
    8306,  8328,  8352,  8363,  8366,  8378,  8390,  8395,  8407,  8419,
    8430,  8437,  8445,  8446,  8450,  8460,  8470,  8475,  8482,  8491,
    8492,  8496,  8497,  8501,  8507,  8513,  8521,  8536,  8544,  8552,
    8559,  8566,  8573,  8580,  8586,  8592,  8598,  8610,  8622,  8631,
    8632,  8636,  8637,  8641,  8647,  8653,  8659,  8668,  8681,  8682,
    8683,  8684,  8688,  8689,  8701,  8702,  8706,  8707,  8711,  8712,
    8727,  8732,  8740,  8744,  8752,  8756,  8761,  8762,  8771,  8775,
    8786,  8790,  8794,  8798,  8802,  8807,  8812,  8817,  8822,  8829,
    8833,  8837,  8841,  8846,  8851,  8856,  8861,  8865,  8872,  8873,
    8877,  8881,  8888,  8889,  8897,  8904,  8909,  8913,  8918,  8929,
    8930,  8938,  8942,  8946,  8950,  8954,  8958,  8963,  8967,  8971,
    8975,  8979,  8983,  8987,  8991,  8995,  8999,  9004,  9008,  9012,
    9016,  9020,  9024,  9028,  9032,  9036,  9042,  9046,  9053,  9058,
    9063,  9071,  9072,  9077,  9082,  9088,  9097,  9101,  9105,  9122,
    9126,  9130,  9146,  9148,  9152,  9153,  9157,  9158,  9159,  9163,
    9164,  9165,  9169,  9170,  9171,  9172,  9176,  9177,  9185,  9193,
    9195,  9199,  9200,  9204,  9205,  9206,  9210,  9222,  9235,  9242,
    9243,  9247,  9262,  9277,  9261,  9301,  9318,  9321,  9328,  9332,
    9339,  9343,  9347,  9354,  9357,  9364,  9367,  9374,  9377,  9384,
    9387,  9395,  9398,  9405,  9409,  9416,  9420,  9428,  9432,  9457,
    9458,  9459,  9464,  9469,  9476,  9490,  9491,  9492,  9496,  9505,
    9506,  9510,  9511,  9519,  9520,  9521,  9525,  9535,  9536,  9555,
    9560,  9567,  9577,  9585,  9593,  9594,  9598,  9599,  9607,  9609,
    9611,  9613,  9615,  9617,  9622,  9629,  9630,  9631,  9636,  9635,
    9641,  9648,  9653,  9661,  9662,  9666,  9679,  9683,  9692,  9698,
    9707,  9714,  9715,  9719,  9724,  9731,  9737,  9746,  9753,  9760,
    9761,  9771,  9772,  9776,  9780,  9785,  9789,  9825,  9829,  9833,
    9837,  9841,  9880,  9886,  9893,  9899,  9906,  9911,  9917,  9925,
    9929,  9933,  9937,  9941,  9949,  9950,  9951,  9958,  9963,  9967,
    9979, 10001, 10025, 10026, 10030, 10034, 10035, 10039, 10045, 10054,
   10061, 10073, 10076, 10080, 10085, 10089, 10093, 10102, 10108, 10117,
   10121, 10125, 10132, 10133, 10137, 10141, 10142, 10146, 10147, 10151,
   10157, 10163, 10173, 10174, 10182, 10183, 10184, 10185, 10186, 10190,
   10191, 10196, 10202, 10207, 10213, 10217, 10221, 10225, 10229, 10233,
   10237, 10241, 10245, 10249, 10253, 10257, 10270, 10274, 10278, 10283,
   10287, 10294, 10298, 10307, 10311, 10315, 10319, 10327, 10331, 10335,
   10340, 10345, 10353, 10361, 10365, 10366, 10370, 10374, 10378, 10382,
   10386, 10390, 10394, 10398, 10402, 10406, 10410, 10414, 10418, 10422,
   10426, 10430, 10431, 10435, 10436, 10443, 10444, 10448, 10449, 10453,
   10454, 10455, 10456, 10457, 10458, 10459, 10463, 10464, 10468, 10469,
   10470, 10471, 10472, 10473, 10477, 10478, 10479, 10480, 10481, 10482,
   10486, 10490, 10494, 10498, 10502, 10506, 10507, 10511, 10515, 10519,
   10523, 10527, 10532, 10536, 10540, 10548, 10552, 10556, 10560, 10564,
   10568, 10573, 10580, 10591, 10592, 10602, 10606, 10610, 10614, 10618,
   10622, 10626, 10630, 10634, 10638, 10645, 10649, 10653, 10657, 10661,
   10665, 10669, 10673, 10677, 10682, 10687, 10692, 10696, 10700, 10704,
   10708, 10713, 10717, 10736, 10740, 10744, 10748, 10752, 10757, 10762,
   10766, 10770, 10775, 10779, 10783, 10787, 10791, 10795, 10799, 10803,
   10808, 10812, 10816, 10820, 10824, 10835, 10838, 10849, 10853, 10857,
   10861, 10865, 10869, 10873, 10877, 10881, 10885, 10889, 10893, 10897,
   10901, 10905, 10909, 10913, 10917, 10921, 10925, 10929, 10933, 10937,
   10941, 10947, 10953, 10959, 10965, 10971, 10975, 10993, 10997, 11004,
   11006, 11019, 11020, 11024, 11025, 11029, 11030, 11034, 11040, 11049,
   11056, 11057, 11061, 11065, 11069, 11073, 11077, 11087, 11097, 11101,
   11105, 11109, 11113, 11117, 11121, 11130, 11134, 11138, 11142, 11146,
   11150, 11154, 11158, 11162, 11166, 11176, 11180, 11184, 11188, 11192,
   11196, 11200, 11211, 11222, 11226, 11230, 11243, 11247, 11259, 11260,
   11264, 11265, 11266, 11271, 11274, 11282, 11285, 11289, 11298, 11301,
   11305, 11313, 11316, 11323, 11330, 11334, 11341, 11348, 11355, 11376,
   11379, 11387, 11390, 11398, 11401, 11409, 11412, 11421, 11426, 11433,
   11437, 11441, 11445, 11449, 11456, 11463, 11467, 11471, 11475, 11479,
   11487, 11490, 11494, 11498, 11502, 11508, 11509, 11510, 11514, 11521,
   11525, 11532, 11536, 11543, 11544, 11549, 11554, 11558, 11559, 11563,
   11568, 11578, 11585, 11592, 11611, 11619, 11626, 11633, 11640, 11647,
   11654, 11661, 11668, 11675, 11682, 11689, 11697, 11704, 11711, 11718,
   11725, 11732, 11739, 11746, 11756, 11757, 11761, 11767, 11776, 11777,
   11781, 11787, 11796, 11797, 11801, 11802, 11806, 11814, 11823, 11824,
   11825, 11838, 11839, 11920, 11924, 11929, 11933, 11937, 11947, 11954,
   11955, 11956, 11960, 11961, 11962, 11963, 11966, 11967, 11970, 11972,
   11975, 11977, 11985, 11986, 11990, 12019, 12020, 12021, 12022, 12024,
   12026, 12030, 12031, 12040, 12041, 12045, 12052, 12053, 12057, 12070,
   12081, 12097, 12104, 12110, 12119, 12123, 12133, 12140, 12143, 12154,
   12158, 12163, 12168, 12177, 12178, 12189, 12192, 12195, 12199, 12203,
   12211, 12214, 12215, 12216, 12220, 12221, 12225, 12231, 12240, 12241,
   12249, 12250, 12254, 12259, 12265, 12269, 12275, 12284, 12290, 12298,
   12302, 12311, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 12330,
   12331, 12332, 12333, 12334, 12338, 12339, 12340, 12341, 12342, 12343,
   12344, 12345, 12346, 12350, 12351, 12352, 12353, 12356, 12358, 12362,
   12363, 12366, 12368, 12372, 12373, 12377, 12381, 12382, 12389, 12393,
   12400, 12405, 12414, 12431, 12439, 12446, 12452, 12462, 12465, 12472,
   12478, 12487, 12501, 12502, 12509, 12514, 12525, 12526, 12541, 12546,
   12556, 12563, 12564, 12568, 12575, 12580, 12590, 12591, 12595, 12596,
   12600, 12601, 12605, 12612, 12618, 12624, 12633, 12637, 12641, 12645,
   12649, 12656, 12657, 12661, 12662, 12663, 12664, 12665, 12666, 12670,
   12671, 12672, 12673, 12674, 12678, 12679, 12680, 12681, 12682, 12686,
   12687, 12688, 12689, 12690, 12694, 12699, 12700, 12704, 12710, 12719,
   12723, 12730, 12737, 12743, 12747, 12755, 12768, 12784, 12793, 12803,
   12826, 12861, 12868, 12883, 12893, 12908, 12917, 12928, 12948, 12970,
   12993, 13001, 13008, 13015, 13021, 13030, 13036, 13045, 13046, 13050,
   13051, 13055, 13056, 13060, 13066, 13075, 13076, 13083, 13103, 13123,
   13141, 13154, 13171, 13187, 13188, 13189, 13198, 13202, 13203, 13214,
   13216, 13220, 13225, 13230, 13238, 13243, 13248, 13256, 13262, 13271,
   13278, 13279, 13283, 13287, 13288, 13292, 13297, 13307, 13312, 13321,
   13322, 13325, 13327, 13331, 13335, 13340, 13345, 13349, 13355, 13364,
   13365, 13373, 13377, 13391, 13395, 13404, 13421, 13422, 13426, 13433,
   13445, 13453, 13454, 13460, 13473, 13483, 13496, 13498, 13502, 13503,
   13507, 13508, 13509, 13513, 13519, 13521, 13525, 13526, 13530, 13531,
   13535, 13536, 13537, 13538, 13539, 13540, 13541, 13542, 13543, 13547,
   13548, 13560, 13566, 13573, 13580, 13587, 13594, 13601, 13608, 13615,
   13622, 13629, 13646, 13653, 13660, 13667, 13674, 13682, 13699, 13706,
   13713, 13720, 13727, 13734, 13745, 13752, 13759, 13766, 13773, 13780,
   13787, 13794, 13798, 13802, 13809, 13816, 13823, 13830, 13837, 13846,
   13853, 13860, 13867, 13874, 13881, 13888, 13895, 13902, 13909, 13910,
   13914, 13915, 13918, 13920, 13924, 13925, 13929, 13930, 13934, 13935,
   13939, 13940, 13941, 13942, 13946, 13947, 13951, 13952, 13956, 13957,
   13961, 13962, 13963, 13968, 13975, 13982, 13983, 13984, 13985, 13986,
   13987, 13994, 13995, 14000, 14003, 14019, 14037, 14047, 14048, 14053,
   14061, 14060, 14073, 14072, 14086, 14090, 14091, 14104, 14103, 14126,
   14127, 14132, 14134, 14136, 14138, 14140, 14142, 14148, 14150, 14152,
   14154, 14156, 14158, 14163, 14164, 14169, 14168, 14175, 14185, 14186,
   14191, 14196, 14206, 14205, 14217, 14216, 14224, 14223, 14243, 14244,
   14248, 14249, 14264, 14263, 14274, 14278, 14282, 14296, 14308, 14309,
   14310, 14316, 14327, 14366, 14367, 14371, 14372, 14376, 14377, 14378,
   14382, 14383, 14387, 14388, 14392, 14393, 14397, 14402, 14406, 14411,
   14417, 14422, 14430, 14431, 14435, 14440, 14444, 14449, 14457, 14458,
   14462, 14463, 14467, 14468, 14472, 14473, 14474, 14478, 14484, 14493,
   14494, 14501, 14502, 14506, 14514, 14534, 14555, 14560, 14566, 14571,
   14579, 14586, 14593, 14603, 14622, 14623, 14624, 14634, 14635, 14639,
   14654, 14655, 14656, 14657, 14661, 14665, 14669, 14673, 14677, 14684,
   14685, 14689, 14690, 14694, 14705, 14706, 14707, 14712, 14716, 14720,
   14727, 14728, 14737, 14738, 14742, 14746, 14756, 14763, 14770, 14774,
   14778, 14782, 14786, 14790, 14799, 14805, 14816, 14822, 14833, 14834,
   14864, 14877, 14890, 14906, 14922, 14939, 14943, 14944, 14951, 14967,
   14968, 14979, 14980, 14990, 14991, 15002, 15003, 15013, 15014, 15015,
   15019, 15020, 15021, 15025, 15030, 15038, 15042, 15055, 15060, 15068,
   15092, 15093, 15094, 15095, 15096, 15103, 15104, 15105, 15112, 15113,
   15114, 15115, 15116, 15117, 15118, 15119, 15120, 15121, 15122, 15123,
   15124, 15125, 15126, 15127, 15128, 15129, 15130, 15131, 15132, 15133,
   15134, 15135, 15136, 15137, 15138, 15139, 15140, 15141, 15142, 15143,
   15144, 15145, 15146, 15161, 15162, 15163, 15170, 15171, 15172, 15173,
   15174, 15175, 15176, 15177, 15178, 15186, 15187, 15188, 15189, 15190,
   15191, 15192, 15193, 15194, 15195, 15196, 15197, 15198, 15199, 15200,
   15201, 15202, 15203, 15204, 15205, 15206, 15207, 15208, 15209, 15210,
   15211, 15212, 15213, 15214, 15215, 15216, 15217, 15218, 15219, 15220,
   15221, 15222, 15223, 15224, 15225, 15226, 15227, 15228, 15229, 15230,
   15231, 15232, 15233, 15234, 15235, 15236, 15237, 15238, 15239, 15240,
   15241, 15242, 15243, 15244, 15245, 15246, 15247, 15248, 15249, 15250,
   15251, 15252, 15253, 15254, 15255, 15256, 15257, 15258, 15259, 15260,
   15261, 15262, 15263, 15264, 15265, 15266, 15267, 15268, 15269, 15270,
   15271, 15272, 15273, 15274, 15275, 15276, 15277, 15278, 15279, 15280,
   15281, 15282, 15283, 15284, 15285, 15286, 15287, 15288, 15289, 15290,
   15291, 15292, 15293, 15294, 15295, 15296, 15297, 15298, 15299, 15300,
   15301, 15302, 15303, 15304, 15305, 15306, 15307, 15308, 15309, 15310,
   15311, 15312, 15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320,
   15321, 15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330,
   15331, 15332, 15333, 15334, 15335, 15336, 15337, 15338, 15339, 15340,
   15341, 15342, 15343, 15344, 15345, 15346, 15347, 15348, 15349, 15350,
   15351, 15352, 15353, 15354, 15355, 15356, 15357, 15358, 15359, 15360,
   15361, 15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370,
   15371, 15372, 15373, 15374, 15375, 15376, 15377, 15378, 15379, 15380,
   15381, 15382, 15383, 15384, 15385, 15386, 15387, 15388, 15389, 15390,
   15391, 15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399, 15400,
   15401, 15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409, 15410,
   15411, 15412, 15413, 15414, 15415, 15416, 15417, 15418, 15419, 15420,
   15421, 15422, 15423, 15424, 15425, 15426, 15427, 15428, 15429, 15430,
   15431, 15432, 15433, 15434, 15435, 15436, 15437, 15438, 15439, 15440,
   15441, 15442, 15443, 15444, 15445, 15446, 15447, 15448, 15449, 15450,
   15451, 15452, 15453, 15454, 15455, 15456, 15457, 15458, 15459, 15460,
   15461, 15462, 15463, 15464, 15465, 15466, 15467, 15468, 15469, 15470,
   15471, 15472, 15473, 15474, 15475, 15476, 15477, 15478, 15479, 15480,
   15481, 15482, 15483, 15484, 15485, 15486, 15487, 15488, 15489, 15490,
   15491, 15492, 15493, 15494, 15495, 15496, 15497, 15498, 15499, 15500,
   15501, 15502, 15503, 15504, 15505, 15506, 15507, 15508, 15509, 15510,
   15511, 15512, 15513, 15514, 15515, 15516, 15517, 15518, 15519, 15520,
   15521, 15522, 15523, 15524, 15525, 15526, 15527, 15528, 15529, 15530,
   15531, 15532, 15533, 15534, 15535, 15536, 15537, 15538, 15539, 15540,
   15541, 15542, 15543, 15544, 15545, 15546, 15547, 15548, 15549, 15550,
   15551, 15552, 15553, 15554, 15555, 15556, 15557, 15558, 15559, 15560,
   15561, 15562, 15563, 15564, 15565, 15566, 15567, 15568, 15569, 15570,
   15571, 15572, 15573, 15574, 15575, 15576, 15577, 15578, 15579, 15580,
   15581, 15582, 15583, 15584, 15585, 15586, 15587, 15588, 15589, 15590,
   15591, 15592, 15593, 15594, 15595, 15596, 15597, 15598, 15599, 15600,
   15601, 15602, 15603, 15604, 15605, 15606, 15607, 15608, 15609, 15621,
   15622, 15623, 15635, 15636, 15637, 15638, 15647, 15648, 15649, 15650,
   15651, 15662, 15671, 15675, 15679, 15683, 15690, 15698, 15706, 15718,
   15722, 15727, 15732, 15737, 15742, 15747, 15755, 15756, 15760, 15764,
   15771, 15777, 15786, 15791, 15798, 15808, 15809, 15814, 15818, 15826,
   15830, 15834, 15835, 15836, 15837, 15838, 15842, 15843, 15844, 15845,
   15849, 15850, 15851, 15852, 15856, 15857, 15858, 15859, 15860, 15861,
   15866, 15874, 15880, 15884, 15889, 15893, 15900, 15904, 15911, 15915,
   15919, 15926, 15930, 15937, 15944, 15945, 15949, 15956, 15957, 15961,
   15962, 15966, 15967, 15968, 15969, 15973, 15974, 15975, 15979, 15983,
   15987, 15991, 16001, 16000, 16013, 16023, 16024, 16028, 16029, 16033,
   16061, 16062, 16063, 16068, 16073, 16072, 16085, 16096, 16104, 16111,
   16118, 16134, 16138, 16142, 16145, 16148, 16163, 16178, 16188, 16192,
   16196, 16205, 16216, 16232, 16233, 16237, 16238, 16239, 16240, 16244,
   16245, 16246, 16247, 16248, 16254, 16259, 16275, 16274, 16293, 16298,
   16309, 16314, 16331, 16330, 16347, 16360, 16361, 16362, 16363, 16366,
   16368, 16372, 16378, 16387, 16394, 16396, 16398, 16400, 16402, 16404,
   16406, 16408, 16410, 16412, 16414, 16416, 16418, 16420, 16422, 16424,
   16426, 16431, 16433, 16447, 16449, 16451, 16453, 16455, 16457, 16459,
   16461, 16463, 16465, 16467, 16469, 16471, 16473, 16478, 16479, 16482,
   16484, 16488, 16489, 16493, 16503, 16513, 16526, 16540, 16552, 16564,
   16576, 16593, 16599, 16608, 16614, 16623, 16624, 16628, 16629, 16633,
   16643, 16652, 16666, 16673, 16687, 16696, 16697, 16702, 16711, 16712,
   16713, 16714, 16715, 16716, 16720, 16733, 16747, 16761, 16775, 16790,
   16805, 16811, 16817, 16826, 16837, 16848, 16855, 16862, 16873, 16880,
   16887, 16894, 16902, 16908, 16916, 16933, 16941, 16955, 16966, 16989,
   17003, 17008, 17016, 17021, 17029, 17030, 17034, 17040, 17048, 17050,
   17054, 17058, 17062, 17069, 17070, 17075, 17076, 17080, 17081, 17085,
   17090, 17092, 17097, 17098, 17106, 17105, 17115, 17116, 17121, 17122,
   17123, 17128, 17129, 17130, 17134, 17135, 17139, 17151, 17160, 17170,
   17179, 17193, 17194, 17195, 17199, 17203, 17207, 17214, 17215, 17216,
   17217, 17218, 17219, 17220, 17226, 17237, 17246, 17248, 17250, 17255,
   17256, 17257, 17258, 17259, 17263, 17264, 17265, 17266, 17267, 17268,
   17278, 17279, 17284, 17297, 17310, 17312, 17314, 17319, 17324, 17326,
   17328, 17334, 17335, 17337, 17343, 17342, 17382, 17433, 17434, 17435,
   17436, 17446, 17448, 17454, 17459, 17477, 17467, 17544, 17562, 17586,
   17610, 17616, 17657, 17583, 17724, 17744, 17749, 17757, 17722, 17778,
   17783, 17788, 17793, 17798, 17803, 17811, 17812, 17815, 17824, 17834,
   17852, 17853, 17857, 17858, 17859, 17863, 17864, 17869, 17870, 17872,
   17877, 17883, 17892, 17898, 17907, 17913, 17922, 17939, 17948, 17970,
   17974, 17982, 17985, 17989, 17996, 17997, 18002, 18008, 18012, 18019,
   18029, 18036, 18049, 18050, 18054, 18055, 18063, 18064, 18069, 18077,
   18078, 18083
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change_replication_source", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@55",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@56", "grant",
  "$@57", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@58", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@59", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1200,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1201,  1202,  1203,   124,    38,    45,
      43,    42,    47,    37,    94,   126,  1204,    40,    41,  1205,
      59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4344

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4344)))

#define YYTABLE_NINF -3000

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6081,  2502,   254, -4344,   -52,   352, 71855,   186,  1360,  1360,
    -103,  3167, -4344, -4344, -4344, 12295,  3432, -4344, 71855,   254,
     483, 48185, 71855, -4344,    32,  2406,    42,  1275,   534,   938,
     254, 71855, -4344,    87,  1891,   254,  1608,   610, 63965, 48974,
    -103, 71855,  3635, 30013,  8863, -4344, 63965,  1363,   267, 71855,
     766,    51,  1389, 71855,   880, 64754,  2156, 22039,  2546,  1527,
    1040,   310, -4344, 16355,  2105,  1969, -4344,  1837, -4344, -4344,
    1734, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, 56075, -4344,  1120,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,  2386,    92,  1491, -4344, -4344, -4344,
   -4344,  1380, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344,   429, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, 65543, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  2096,
   71855,  2121, 71855,  1973,  2084, 71855, 62387, 71855, 71855,  1799,
    2189,  2233,  2308, -4344, -4344,  2355, -4344, -4344,  1360,  -103,
   -4344, -4344, 71855, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344,  1751, -4344,  1687, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344,  1161,  2005, -4344, -4344, 71855, 71855, -4344,  2594,  2397,
    2402,  2452,  2219, 62387,   107, 71855, -4344,  2199, -4344,  2397,
    2397,  2478,  2504,  2249, -4344, -4344, -4344,  2355,  2769, -4344,
    2048,  2071,  2079, 22039, -4344,  2081,  2086,  2101, 16355,  2110,
    2115,  2125,  2133,  2150,  2153,  2158,  2164,  2164,  2167,  2169,
    2178,  2186,   776,  2196, -4344,  2201,  1040,  2203, -4344, -4344,
    2215,  2217,  2221,  2229, -4344,  2240,  2247,  2255, 17167,  2257,
    2269, -4344, 41059,  2307,  2336,  2342,  2353,  2371,  2373,  2378,
    2403,  2405, -4344, -4344, 16355,  2167, -4344, -4344, -4344,  2410,
    2416,  2417,  2419,  2428,  2430,  2433,  2438,  2445,  2448,  2451,
    2453,  2462,  2467,  2475,  2484,  2167, -4344,  1079,  2489,  2490,
    1176,  2492, -4344,  2498, -4344,   584,  2503,  2164,  2167,  2167,
    2515,  2517,  2534,  2540,  2542,  2543,  2552,  2555,  2557,  2563,
    2584,  2600,  2622,  2623,  2625,  2631,  2634,  2636,  2641,  2658,
    2662,  2663, 22039, 22039, -4344, 22039,  9859, 30802, -4344, 71855,
   -4344, -4344,  1988, -4344, 51341,  3821, -4344,  2786, 22039,  1072,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
    2332, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,   131,
   -4344,  2669,  2246, -4344, -4344,  2189,  2189,  2189, 71855,  2921,
    2189,  2189,  2425, 71855,  2189,  2595,  2189,  2189,  2189,  3022,
    1360, -4344, -4344, -4344, -4344,  3012,  2865,  2845,  2603, -4344,
    2681, -4344, -4344, -4344,  3014, -4344,  2670, -4344,  2923, -4344,
    3107,  2670, -4344,   317,  2670,   226, -4344, -4344, -4344,  2670,
   -4344, -4344, -4344, -4344,  1525, -4344, -4344, -4344, -4344,  1147,
   -4344,  3112,   158, 62387,  3298, -4344, -4344, -4344,  3275, 71855,
     -52, -4344, -4344, 16355, -4344,  3262, -4344,   391,  3315, -4344,
    1360,  3314,   390, 71855, 56864, -4344,  1360, -4344, -4344,  3273,
   -4344,   126,   106,  2911, -4344, -4344,  3051, -4344,  2865,  3181,
      96,   281, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, 12295,  3635, -4344, -4344,   162,  3060,   960, -4344,
   -4344, 52130,  1451, -4344,   237, -4344, 75800, -4344,  3358, 31591,
   53708, -4344,  2759, -4344, -4344, -4344, -4344, -4344, -4344, 74222,
    2763,  1146, -4344,  3414, -4344,   878,  2791,  1648,   878, 57653,
    3317,   371,   577,   325,   296, -4344,  3406, -4344,  3066,  3040,
   -4344, -4344,   608,  2826, -4344,  3445, -4344,  3395, -4344,  3078,
    3317, -4344, -4344,   878,  3079,  3336,  3467,  1827,  2454,   340,
     -34,  3051, -4344, -4344,  1256,    58, -4344,    58, -4344,  2813,
   -4344, 71855, 71855,   -52, -4344,  1360, -4344,  2821,  2823, -4344,
   71855,  2828, -4344,  2842, -4344,   645,   645,   645,  3556,   645,
   -4344,   645,  2922,  2840,  2855,  3616,  3510,  2204,  3512, -4344,
    3473,  3560,  1286,  2866,   256,   589,  1380, -4344, -4344,  2862,
   71855,  2164, -4344,  2869,  1616, -4344, -4344,  2873, -4344,  3554,
   -4344,   812,  3517,  3526,  3529, -4344,  2878, -4344, -4344, -4344,
   -4344,  1753, 29224,  3446,  2386, -4344,  1705,  3652,  1219,  3317,
   -4344, 54497,  1219,  3317, -4344, -4344,    92,  1604,  2076,  3403,
    3507,  3548, -4344,  2194, 58442,   124, -4344, -4344, 56864, -4344,
   71855, 71855,  1397, 62387, -4344, 71855, -4344,  3326,  2815,  9069,
   71855,  3539, -4344, 71855, 71855,  3184, -4344, 71855, -4344,    57,
   -4344,  2351, 16355, -4344, 71855, -4344, -4344, -4344,   154, -4344,
    1829,   395,   194,  2210, 71855, 71855, 71855,  3211,  3540, 71855,
    3028,  3733, 71855, 56864, 78956, 71855, 71855,  2397,  1094,  1908,
   -4344, -4344, 16355, 16355,  1781,  3672,  3735,  3735,  3735,  2020,
    3118, 16355, 16355, 16355, 16355, 16355, 16355,  1833,  2945, -4344,
   -4344,    35, -4344,  2947, 16355, 16355, -4344, 16355, 16355, 71855,
   -4344,  4749, 16355, 16355,   722,  3618, 16355, 16355, 16355,  9859,
    5268, 16355, 16355, 71855,  3746,  2950, -4344,  2951,  1991, 16355,
   16355,  2216, 16355, 16355, 16355, 16355, 16355, -4344, -4344, 16355,
   16355, 22039, 16355, 16355, 16355, 16355, 16355, 16355,  2965, 16355,
    3735,  3735, 16355, 16355,  2254, -4344, -4344, 16355,  2654,  2654,
   -4344, 16355, 10671, 16355, -4344, -4344, -4344,  2969, -4344, -4344,
   -4344, 71855,  3735,  3735, 16355, 16355, 16355,  3735,  3735, 16355,
    2972,  2976, 16355, 16355, 16355, 16355, 16355, 28435,  2981,  2982,
    2985, 22039,  2287,  3672,  3672,  3672,   -53,   132,   111,   228,
    1587, -4344,  3294, 16355, 16355, -4344, -4344, 66332, -4344, -4344,
   -4344, 16355, -4344, 16355, 16355, -4344, -4344, -4344, -4344, -4344,
   -4344,  3003, -4344, -4344, -4344, 17979, 22039, 22039,  2995, 22039,
   22039, -4344, -4344, 22039, 22039, 22039,  3533,  3138, 22039, 22039,
   22851, 23663, 22039, 22039, 22039, 22039,  1771,  3672, 62387, 22039,
   -4344, -4344,  2332,  2332, 16355, 44215, 71855, 71855, 71855,  3434,
   71855, 71855, 62387,  3101,  1495, 71855, 71855, 56864, 71855, 78956,
   71855,  2189,  3201,  4150, 33958, -4344, -4344, -4344, -4344, -4344,
    3254, -4344, -4344, -4344, -4344, -4344, 71855, -4344, -4344, 56864,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, 62387, -4344,  1295,
   56864, 49763,   239, -4344, 72644, 71855, -4344,   -52, -4344,  3273,
    3302, -4344,  3009,  2020,  3768, -4344, -4344,  3541,  3794, 71855,
   71855,  -144, -4344,  3542, -4344, -4344,  3027,  3258, 71855, 71855,
   -4344, 71855, 71855, -4344, -4344, -4344, -4344,  3029, -4344, -4344,
    2332,  4004, -4344,  3032, 56864, 56864,  1295,  3362,   194,   122,
   -4344, -4344, 77378, 71855, -4344, -4344, -4344, -4344,  3778, 16355,
   -4344, 56864,  3122,  3285,  3585,    64, -4344,  3047,  3049, -4344,
    3210, -4344, -4344,  3061, -4344,  3059, 71855,  2659,  1146, -4344,
   -4344, -4344, -4344, -4344, 71855,  3065,   237, -4344,  2763,  1146,
   32380, -4344, 11483,  3624,  2332, 16355, -4344, -4344,  3083,  2397,
   71855, 71855, 71855, 71855, 71855, 56864, 71855, -4344, -4344,  1595,
   -4344, -4344, -4344, -4344, -4344,   878, 71855, -4344, 71855,   878,
   56864, -4344,   371, 71855,   878, -4344,  3636,  3330, -4344, -4344,
   -4344,  3712, -4344, -4344,  3700,  3086, -4344,  3624, -4344,   371,
   -4344, -4344,  3705, -4344, -4344, -4344,   371, -4344, -4344, -4344,
     371,   371,   371,   878,   878, -4344,   101,  3813, -4344,  3092,
   -4344, -4344, -4344, -4344,  3095, -4344,  3705, -4344, -4344,  3009,
   -4344, 18791,   880,  2828, 71855, 71855,  3888, -4344, -4344,  3098,
   -4344,  3535,  3356, -4344,  3270, -4344, -4344,   205, -4344, 71855,
   16355,  2113, -4344,   111, -4344, 56864,  3782, -4344, -4344, -4344,
     280, -4344,  3764, -4344, -4344,  3113,  3199,  3876,  3150, -4344,
    3484,  3484,  1921, 62387,  3577,  3307,  3233,  3577,   307,  3577,
   -4344, -4344,    -2,   809, -4344,  3237,   974,  3237,  2114, 56864,
    3329,   -52,   -52,   -52,  1120, -4344, -4344,  2501,  3397,  3397,
   62387,  3160, -4344, -4344, -4344,  3474, -4344, -4344,  1705, 16355,
   -4344, -4344,  1380, -4344, -4344, -4344, -4344, -4344,   309, -4344,
   -4344,  1380, -4344,  3317,  3317, -4344, -4344, -4344, -4344, 67121,
    2076,  3275,  3548, -4344, 62387,  3890, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,   329, -4344,
   -4344, 71855, 71855,  1649, -4344,  3663,  3973, -4344,  3176,  3875,
    1146,  1146,  3875,  1146,  1146, -4344,  3407, -4344,  1146,   123,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  3830,
    3724,  1146,  2495,  3590,  1146,  1146,  3918,  1146,  3596,  3597,
    1146,  1146,  1146,  1146,  3416,  3865, -4344,  1146,  3745,  1669,
    4093,  3747,  1146,  3607, -4344,  1728,  3873,  1146,  1146,  1146,
    1146,  1146,  3918,  3613,  3966,  1146,  1146,  3615,  1898,  3617,
    3619,  1146,  3440,  1146,  1146,  1146,  2003,  1146,  1146,  3628,
    1146,  3408,  3415,  1146, -4344, -4344,  1146,  1146, -4344,  5588,
   -4344, -4344, -4344,  2876, -4344, -4344,  1532, -4344, -4344,  3220,
    3227, -4344, -4344, -4344, -4344,  3549, -4344,  3333, -4344,  3565,
    3431, -4344,  3184,   152, 67910, 71855, -4344, -4344,  3267,  3269,
    1024, -4344,  2020,  3253,  3266, -4344,  3659, 88783, -4344, -4344,
   71855, -4344, -4344, -4344, -4344,  3472, -4344, -4344, -4344, -4344,
    1638, -4344,  4025,  3637, -4344, -4344,  3912, -4344,  3710,  4082,
    3375,  3981,  3720,  2397,  3875,  3485,  4098,   453, -4344,   112,
    3059,  3521,  1760, 71855,  3906,  2397, 71855, 71855, 71855, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, 71855, -4344, -4344, -4344,
   -4344, -4344, -4344,  3184,   346,   334, -4344,  3735,  3305, 16355,
    3306,  3318,  3319, 16355,   430,   415,   397,  1280,  1955,   459,
     262, 16355,  3320, 13107, -4344,  3324, -4344, -4344,   392,   405,
     512,   556,  3332, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344,  3926, -4344,   413,  3334, -4344, -4344, -4344,
   -4344,  3313, -4344, 16355,   600,   423,   466,   273,  3335,   481,
    2008,  2013,  3331, 71855, 71855,  3735,  3337,   609,   618,  3735,
    3341,   505,   703,  2089,  2138,  2143,   521,  2146,  3547,  1318,
     536,   560,  1338,   611,   613, -4344,  1377,  3342,  3343,   886,
     313,  3735,  3344,   321,  3346,  3347,  1438, 13919, 14731, 15543,
     249,  1005, -4344,  3345, -4344,  2951,  3348,  3355,   359,   291,
    1567,  3357,  3360,  2174,  3454,  3454,  1622,  1101,  1643,  1101,
    1232, 62387,  3364, -4344, -4344, -4344, -4344,  3454,  3454,  3454,
     219,  3735,  3365,   275, -4344, 16355,  3361,  3367,  3374, 62387,
   16355,   210, -4344, -4344, -4344,  2767,   315, -4344, -4344, -4344,
   -4344, -4344,  1234, -4344,  3363, -4344,  1040,  1993,  3340,  9859,
   -4344,  1473,  3340,  3501,  1662,  1662, 22039, -4344,  3371,  3034,
    3437, 17167,   314, 17167,   314,  3340,  3340,  3340, -4344, 22039,
    3382, 22039, 22039, -4344,  3672, -4344, -4344, 51341,  3383,  3384,
   -4344, -4344,  -174, -4344, -4344,  3386, 71855,  1495, -4344, -4344,
    2189, -4344, -4344, -4344,   145, -4344, -4344,   247, -4344,  3385,
     178,  3059,  3962, 71855,  3390, -4344,  3915,  3919,  3920,  3921,
   -4344, -4344, -4344, -4344,  3922, -4344,  3924, -4344, -4344,  3400,
   -4344, 71855, 27646, 62387, -4344,  3401, -4344,  4054, -4344,  3839,
   -4344, -4344,  2183,  3639, -4344, -4344, -4344, -4344, 45009,  1064,
   -4344, -4344, 71855, -4344,    82,   240,  3586,  3584, -4344,  3009,
   71855,   -52,   -52, 71855, -4344,  3986, -4344,   251,  3412, -4344,
    3413, 62387, -4344, -4344,   286, 56864, 56864,  3417, -4344,  3644,
     129,  3827, -4344,  3646,  4217,  4217,   106, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
    3420,  4073,  4033,  3858,  4047,  3385, 45009, -4344, 71855, -4344,
   25269,  3584, -4344,  4049,  3665,  3666,  -116, -4344, 59231, -4344,
    2020,  1267,  3484, -4344,  3484,   113, -4344, -4344,  3994, -4344,
    3818, -4344, 78956, -4344, 62387, 78956,  4057,  3441,  3442,  3444,
    3455,  3456, 75011, 16355, -4344, -4344, -4344, 11483,  3458, -4344,
   75011, -4344, -4344, 22039,  2201, -4344,  2445, -4344,  2020, -4344,
     -52,  4056, -4344,  2020,  3464, 71855, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
    3662,   878, -4344, -4344, -4344, -4344, -4344,  3850,  3317,  2826,
    4056,   878,  4219, -4344,   878, 71855, 71855,   878, -4344, -4344,
   -4344, -4344,  3769,  1256,  3674,    58, -4344,  2201,  2020,  3476,
    3477, -4344, -4344, -4344,  2225, -4344,  1040,   645,  3881, -4344,
    4094, -4344, -4344, -4344, -4344, -4344,  1933,  1668, -4344,   222,
     238,  3891,   306,  3479,  1146, -4344, -4344, -4344, -4344,  3892,
    1264, -4344,  3285,  3237,  3237,  3502,  3505, -4344, -4344,  4069,
   78167,  3907,  4165, 62387,  4069,  3285,  4208, -4344,  3285, -4344,
   -4344,  3285, -4344, -4344,  3742,  3748, -4344, -4344,  3749, -4344,
   -4344,  1250,  2463, -4344,  2458,   283, -4344, -4344, -4344, -4344,
   -4344, 71855,  3656, -4344,  2195, -4344, -4344, -4344, -4344,  2747,
   -4344, 33169,  3975,  2544,  3514, -4344, -4344, -4344, 54497, 54497,
   -4344, -4344, -4344, -4344, 71855,   102, -4344,  3518, -4344, 26063,
   -4344,  1546,  3953,   263, -4344, -4344, -4344, -4344, -4344,  2671,
    2978, -4344, -4344,  4273,  3859,  4072,  3741,  2978,  2252,   -52,
    1793, -4344,  2841,   -52,  1793,  2841,  2841, 71855,   -52, -4344,
    2181,  1146, -4344, 71855,  1024,   254,  1024, -4344,  1062, 71855,
   41848, 68699, 71855, 71855, 71855, 71855,   254,  1778,  1778, 71855,
    2335, 69488,   254,   -52,   -52,   -52,   -52,  2747,  1146,  2335,
   -4344, 69488, -4344, 71855, 71855,  4076, 71855,  4079, 71855, 71855,
   -4344, 62387, 71855, 69488, -4344,  1146,  1680,  1778, 70277,  1778,
    1778, 71855,   254, 71855,  2677,   -52,   254, -4344, 71855, -4344,
   -4344, 71855, 71855,   254,   254,  2161, -4344,  2677,  2677,  2896,
   -4344, -4344, 71855,  2335, 69488,  3536, -4344, -4344, 60020,   -52,
     -52, -4344,  1146,  1146,  3951, -4344, -4344, 88500, 88422,  2119,
    1146,  3651,  3982,  2093, 71855, -4344,  3686,  3688, -4344, -4344,
   -4344, -4344, -4344,  1024, 69488, 71066,  4112, -4344, 16355,  4202,
    4203,  4204,  4206,  4207,  4210,  4211,   142, -4344,  4213, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344,  4220,  4221, -4344, -4344,  4222, -4344, -4344,  4223, -4344,
    4224,  4226,  4227,  4228, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344,  4229,   182,  4230,  4233,  4234,  4237,  4238,  4239,  4240,
    4241,  4244,  4245,  4246,  4247,  4248,  4250,  4252,  4253,  4254,
    4255,  4258,  4259,  4260,  4262,  4271,  4274,  4275, -4344,  4276,
    4281, -4344, -4344, -4344, -4344, -4344, -4344, -4344,   248, 71855,
    3741,  3660,  3736, 71855,  3681, -4344,  4147,  2935,  3875,  4069,
   -4344,  4360, -4344, -4344,  3653, -4344, -4344, -4344,  3789, 56864,
    3987,  1146,  1326,  1326,  4068, -4344,  3654, 71855, 71855,  3645,
     846, -4344,  2427, -4344, 19603, -4344,  3647,  3454,  2020,  3454,
    3454,  3454,  1752, 16355, 16355,  4300,  5830,   153, -4344, 60809,
   -4344, -4344, -4344, 60809,  5830,  2265,  3454,  3649, -4344,  4218,
    4225, -4344, -4344, -4344, 16355, 16355, -4344, 16355,   351, -4344,
   16355, 16355, 16355, 16355, 16355, -4344, -4344, 22039, -4344,  3643,
    3650,  3454, -4344, -4344,  3657,  3454, 16355, -4344, -4344, -4344,
   -4344, 16355, -4344, 16355, -4344, 16355, 16355, -4344, 16355, 16355,
   -4344,  3454,  3454, 20415, 16355, 16355,  3658,  3454, -4344, 16355,
   16355, 16355, -4344, 16355,  1636, 16355,  1720, 16355,  1995, 16355,
   -4344, 16355, -4344,  3454,  3454, -4344, 16355,   526, -4344,  2335,
   -4344,  3735,  3454, -4344, 42637, -4344, -4344,   149, 28435,  3661,
     149,  3664, 22039, -4344,  3454, -4344, -4344, -4344,  1676,  3667,
    3454,  2274, -4344, -4344, -4344,  3655,  2020, -4344, -4344, -4344,
   -4344, -4344, -4344, 22039,   364, 22039,  3501, 22039,  5268,  5268,
    2554,  9859, -4344,  1477,  3501, -4344, -4344, 16355, 16355, 45803,
   71855,   426, -4344,  3681,  1321, -4344,   146, -4344, -4344, 56864,
   -4344, -4344, -4344, -4344, -4344,   178, 62387,  3669, -4344, -4344,
   -4344, -4344, -4344,  3705, -4344,  4163,  3413, -4344,  3896,  3900,
    3903, -4344, 35536, -4344, -4344, -4344, -4344, 35536,  2055,  1295,
   -4344, 71855, 56864,  3670,  3671,  3673,  3905,  3824, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  3584,
    3675,  3317, -4344,  3827, -4344, -4344,  3677, -4344,  2351,  3397,
    1195, 71855, -4344, 16355,   -52, -4344,  3908, -4344, 71855, 71855,
   -4344, -4344, -4344, -4344,  1077, -4344,  3678,  2696, -4344,  3681,
   -4344, -4344,  3705,  3705, -4344,  4004, 27646,  4107,  1295, 56864,
    4297, -4344, -4344,  3690,  1040, 24475,  3765, -4344,  3687,  3006,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  3827,  3125,
    4290,  3584, 78956, 78956, 78956, -4344, -4344, -4344,  3771,  3285,
    3237,  3237,   289,  4074, -4344, -4344, -4344, -4344,  3059, -4344,
   -4344,  1546, -4344, -4344, -4344, -4344, -4344,  1146,  2020, -4344,
   32380, -4344, -4344,  1778,  3317,   471, -4344, 56864, -4344,  4132,
   -4344, -4344,  3317, -4344,   -52, -4344,   371,   371, -4344, -4344,
   -4344,  3576,  3894, -4344, -4344, 18791, -4344, 71855, -4344,  3696,
   -4344,  4174, 71855,  4355,  3706, 22039,  3707, 22039,  1546,  3958,
    3708,  4504,  2335,  3397, -4344,  4114, -4344, -4344, -4344, -4344,
    4018, -4344,  4512, -4344, -4344, -4344,  3059, -4344,  3577,  2524,
    4179,  3237,  4124,  3237,  3237, -4344, -4344, -4344, -4344,   338,
    2335,  2335,  2335,  2335,  2458, -4344,   160,  1125,  2338,  1546,
     212,   283, -4344,  3716, -4344, -4344, 60809,  4457, -4344, -4344,
   -4344, -4344, -4344, -4344, 16355, -4344, -4344,  1116,   497,  1344,
   26063, 71855, 46597, -4344,   728, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,  1146, -4344,  1146,   -52,  3999,  4001,
    4002,  4003,  4006,  4048, -4344, -4344, 71855,  4167, -4344,   -52,
    2380,   -52,   -52,   -52,   -52,  2335,   -52,   -52,  2279, -4344,
   -4344, -4344,   207, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, 62387,
   -4344, -4344, -4344, 71855,    11, 71855,  3739,  4277,  4279,  1024,
      63, 71855,  3743,  3934,  3961, 52919, 88866, -4344, -4344, -4344,
    4183,  4183,  2383,   305, 69488, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, 71855, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344,  1638,  3751, -4344,  1546, -4344, -4344, -4344, -4344, 55286,
     -52, -4344,  3995, -4344, -4344, 71855,  3751, -4344, -4344,   745,
   -4344,  3923,  3998,   -52, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, 88866, 69488,  3752, -4344,   467, -4344,
   -4344, -4344, -4344, 69488,  3983,  3985, -4344, 71855, 69488, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, 71855, -4344, -4344, -4344, -4344, 59231, 60809,
   -4344,  3189,  3212,  5588, -4344, -4344, -4344,  3220, -4344, -4344,
   -4344,   247,  4197,  1146,  1131,   545, -4344,  4122, -4344, -4344,
    2842,  4196,  4199,  3770, -4344,  3772, -4344,  3767, -4344, 67910,
    2020,  3775,  3775,  3776,  3776,  3777,  3777,  3779,  3659, -4344,
    3780,   -52,  2335,   -52, 61598,  2335,    29,  1546,   961,  1546,
   88783, -4344,  2335,   -52,   -52,   -52,   -52,  2335,  2335,  2335,
    2335,  2335,   -52,   -52,   -52,   -52,   -52,   -52,  2335,   -52,
    1226,   -52,   -52,  2335,  2528,   -52,  2335,   -52,  1778, -4344,
     272, -4344,  3783,  2937,  3681, 62387,  3784, -4344,  4365,  1146,
    1146,  1146,  1146, -4344,   288, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344,   247,  4566, -4344,
    3804, -4344, 78956, -4344,  3329,  -123, -4344, -4344, -4344, -4344,
   -4344, 71855,  2204, -4344, 71855, -4344, 39481, -4344, -4344, -4344,
   -4344,  2000,  1699, -4344,  1705,  1604, -4344,   491,  4121, -4344,
   -4344,   218,  3787, -4344, -4344,  1149, 17167,  1673,  3454, -4344,
   -4344, -4344, -4344, -4344, 16355,  2020,  2449, -4344,  3790,  3790,
    3791, -4344,  3793,  4188,  3790, -4344, -4344, -4344, -4344, -4344,
   -4344,  4534, -4344, -4344, -4344, -4344,  4356,  3791,  4357, -4344,
    3790, -4344,  3886,  4589,  3861,  3805,  3806,  3807,  3454, -4344,
    3454, 16355, 16355,  1693,   532,  1725,  4570,  4125,  1262,  1277,
     591, -4344,  1763,  3626,  3454, -4344,  3454, -4344,  1782,  1794,
    1807,  1812,  1284,  1822,  2280, -4344, -4344, 17167,  1832,   268,
     593,  3454, -4344,  1844,  1293,  1320,  1872, 16355,  1877, 16355,
    1884, 16355,  1896,  1917, -4344, -4344,  1930,  3814,  3814,  3808,
    3815, -4344, 71855, -4344, -4344, -4344, -4344,  3935,  3937,  3454,
    3816,   149,  3454,   149,   184, -4344,  4055,  1447,  3454, -4344,
   -4344, 71855, -4344, -4344, -4344, 16355,  1072,   227, -4344, -4344,
   22039,   788, 22039, -4344,  3817, -4344, -4344, -4344, -4344,  4342,
    4617, -4344, -4344,  4086, -4344, -4344, -4344,  3390, -4344, -4344,
     192,  4475,  3825, -4344, -4344, -4344, -4344, -4344, 45009, -4344,
    1143,  3835, 47391, 56864,  4261,  3317, 18791, -4344,  3327, 71855,
    1024,  4407,   259,  3997,  4364, -4344, -4344, -4344,  2020, -4344,
   56864, -4344, -4344, -4344, 71855, 71855,   880, -4344, 37114, -4344,
   -4344, -4344, -4344,  3840, -4344, -4344, -4344,  4482, -4344,  4451,
   45009,  3385, 56864, 16355,  3125,  3837,  3842,  3843,  3845,  3846,
    3847, 26063, 26063,  4398,  4400, -4344,  4269,   968,  4269, -4344,
   40270, 26063, 26063,  2731,  2842,  4612,  4445,  4290,  3059,  3059,
    3059,  3484,  3484, -4344, -4344, -4344, -4344, -4344, -4344,   302,
   -4344, 11483, -4344, -4344, -4344, -4344, -4344,  3385, -4344,  3705,
   -4344,  3584,   878,  4503, -4344,  4505, -4344,  3852,  4506,  4268,
   -4344, -4344,  2335, -4344, -4344, 71855,  2725, 71855,  3154, -4344,
    4624,  3868, 22039,  4516,  3870,  4450, -4344, -4344,  3887,  3577,
   -4344,   195,  1618,  3577, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344,  1696,  4577,  3204,  4437,
   -4344, -4344, -4344,  2332,  2332, -4344, -4344, -4344,  1531,  4405,
   -4344, 26063,  3827, 46597,  -151, -4344, -4344,  3872, 71855,  2677,
     -52, -4344, -4344, -4344,  4575, -4344,  4576,  2152,  4320,  4527,
   -4344, -4344,   312, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344,  2252, -4344,  3883,  1546,  4291,
    3889, 16355, 71855, -4344, -4344, -4344,  3964, -4344, -4344,  3895,
   43426,  1326,  1326,  2286, -4344, -4344, -4344, 88866, -4344,  3790,
    3790,  3790, -4344, -4344,  1074,  3791, -4344, -4344,  3897, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344,   749,  2227, -4344,
   -4344,   749, -4344, -4344, -4344,   258,  2176, -4344, -4344, -4344,
   -4344, -4344,  3899, -4344,  3790,  3791,  3791, -4344, -4344,   749,
    3790, -4344,  3790,  4263,  3952, -4344,   206,  3790,  3790,  3790,
    3901,  3793, -4344, -4344, -4344, -4344, -4344,  4569,   654, -4344,
   88866, -4344, 71855, -4344,  3778,  3778, -4344, -4344, -4344, -4344,
    4130, -4344, -4344,  1934, -4344, 71855, -4344, -4344, 71855, 71855,
     -12,  1077,  3902, -4344, -4344, -4344,  3910,    21, -4344,   361,
   -4344, -4344,  3962,  2242,   478,  4116,  1556, -4344, 71855, 71855,
   -4344, -4344, 71066, -4344, 37903, -4344, -4344, 38692, -4344, -4344,
    -107, -4344, -4344,  2127, -4344, -4344,  2335, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, 43426,  1146,  1146, -4344,   400,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  4324,
   43426,  1191, 71855,   -52,  2841,  2841,  1546,  3196, -4344,  4069,
    4483,  3059,   283, -4344, -4344,  3333,  3909, -4344, -4344, 71855,
    2297, -4344, -4344,  6513,  1705, -4344,   218,  4336, 71855, -4344,
   -4344, -4344, -4344,  4205, -4344, -4344, -4344, -4344,  4337,  5268,
   -4344, -4344,  2020, 16355,  1386, -4344, -4344,   749,  4345, -4344,
    1470, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,  3911,  5830,  4473, -4344, -4344, -4344,
   -4344, -4344,  5268,  5268, -4344, -4344, 16355, -4344, 16355,   645,
    3913, 16355, 16355, -4344, 16355, -4344,   403,  3914,  4088, -4344,
   -4344, -4344, -4344, -4344, -4344, 16355, -4344, -4344,  5268, -4344,
   16355, -4344, -4344, 16355, -4344, -4344, 16355, 16355, -4344,  1942,
   -4344,  1956, -4344,  1997, -4344, -4344, -4344,  1546,  3925,  3928,
    2335,  3454, -4344,  3931,  4327, -4344, -4344, -4344, 16355, -4344,
    3454, -4344,  3454,  4531,  5830,  2002, -4344, -4344,  2299, -4344,
   -4344, -4344, 16355,  1072, -4344, -4344, -4344, -4344, -4344, -4344,
    4299, -4344,  3424, 35536,  4152,  4519, -4344, -4344, -4344, -4344,
    1390, -4344, -4344,  2326, 71855,  4711,  4363, -4344,  1024,  4407,
    4472, -4344,  4498, -4344, -4344, -4344, -4344,  3940,  3751,  3933,
   -4344,  1146,  1746,  2347, -4344, -4344, -4344,  3938, 18791,  3945,
   -4344, 27646, 56864,  4553,  3385,  1324,  2842, 26063, -4344, -4344,
   -4344, -4344, -4344,  3006,  3941,  3943,  3944,  3006, -4344, -4344,
   -4344,  4508, -4344,  4269,  4269,  4509,  4510, -4344,  2518,  2864,
    1285, -4344, 16355, 16355,  4065,  4445,  3237,  3237,  1546, -4344,
   -4344, -4344, -4344,   -52,   -52,  2803,   -52,  4603,  4649, -4344,
    2361, -4344, -4344,  2369, -4344,  4499,  4291, -4344,  3265,  1546,
   71855,  4731,  4759,  4069, -4344, -4344, -4344,  4378, -4344,  4069,
   -4344,  1546, -4344,   177, -4344, -4344,  3638, -4344, -4344,  4734,
    4743,  4640,  4746,  1531, -4344,  2015, -4344,  -151,  3584,  1564,
   -4344,  3996, -4344,  1189, -4344, -4344, -4344, -4344, -4344, -4344,
    4319, -4344,  1808, -4344, 43426, -4344, 71855,  2382, -4344, 43426,
    2009,  3993, -4344, 43426, 16355, -4344,  2390, -4344,   196, -4344,
   -4344, -4344, 52919,  4263, -4344, -4344, -4344,  4766,   502, -4344,
    4767, -4344,   749, 60809, -4344, -4344, -4344, -4344,   645, -4344,
      15, -4344,   749, -4344, -4344,  4178, -4344, -4344, -4344,   645,
     749, -4344, -4344, -4344, -4344,  2010, 71855,  1934, -4344, -4344,
   59231,  2456,   -52,  3272,  4075, -4344,  4198, -4344,  4680,  1750,
    4544,  3681,  1146,  1146,  4744, -4344, -4344,  4761, -4344,  4606,
    4547, -4344,   798, -4344,  4776, -4344,   749,  4776,  2010,  4440,
   -4344,  2010,  2010, -4344,  3515, -4344,  1934, -4344, -4344, -4344,
   71855, 71855, -4344, -4344, -4344, -4344, -4344,  4007, -4344, -4344,
    4441,  4197, -4344,  4443, -4344, -4344,  4401, -4344, 16355, 16355,
    4442, 71855,  4446, -4344,  4740,  4797,  3751,  1424, -4344, -4344,
    2392, -4344, -4344, -4344,  2407, -4344, -4344,  4009, -4344,  2424,
   -4344, -4344, -4344, 71855, -4344,  2442,  2476, -4344, -4344,  2500,
    2841,  2841,  1524,  1191,  4013,  2506,   -52,   -52,   -52,   -52,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344,   333, -4344, -4344,
   -4344,   212,  3651, 43426,  4016,  7768, -4344,  4311,  4340,  4021,
    4019, -4344, 88866,   -52,   278, 71855,  1729,  2020,  4022,  4027,
    4029,  4031, -4344,  4032,  2509, -4344,  3886, -4344,  2332,  4034,
    4036,  2016,  4035, -4344, -4344,  3454,  2018,  1333,  2519,  4492,
    4581, -4344,  4414, -4344,  2034,  1853,  2053,  2205,  2207,  2209,
   -4344, -4344, -4344, -4344, -4344, -4344,  4037, -4344, -4344,  4800,
    4465,  2020, -4344, -4344,   357,   149, -4344,  3459, -4344, -4344,
    4045,  2002, -4344,  4477, -4344,  2527,  4681,  4572, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, 56864,  4471,  4648,  4838,  3584,   202, 71855,
    4363,  4714, -4344, -4344, -4344,  4298, -4344, 71855, 18791, -4344,
   -4344,  1746, 71855, 44215,  4062,  3840, -4344,  3385, 56864,  1676,
   -4344,   271, -4344, -4344,  4604,  4613, -4344, -4344, 16355,  4066,
   16355,  4067, -4344, -4344,  1024,  1024, -4344,  1285, -4344, -4344,
    2020,  -156, -4344,  2020, 71855, -4344,  4065, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,   -52,  4704,  4467, -4344, 71855, -4344,
     330,  2564, -4344, -4344,  4071,  4063,   -52,   195, -4344, -4344,
   -4344,  4756, -4344, -4344, -4344,  4757,   645,   645,  4832,   645,
   -4344,  4833,  4835,  2015, -4344, -4344,  4497,  4497,  4511, -4344,
    2569,  4266, -4344,  4291,  2578, -4344, 71855,  2585,  2235,  2063,
   43426,  4515, -4344, -4344, -4344, -4344, -4344, -4344, 60809, -4344,
   -4344,  4776,  2591, -4344, -4344, -4344,  2592, -4344, -4344, -4344,
   -4344, -4344,  2010, -4344,  4085, -4344,   473, -4344, -4344, -4344,
   -4344, -4344,  3896,  3900,  3903,  2528,  2528, 16355, -4344, -4344,
   -4344, -4344, -4344, -4344,  4522,  4278, -4344, -4344, -4344, -4344,
   -4344, -4344,   -52,   -52, -4344, 59231, -4344,  4878,  4873, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344,  4083, -4344, -4344, 16355,
   -4344, -4344,  2211, -4344,  4291, -4344, -4344, -4344, -4344,  2020,
    5268,  4815, -4344, -4344,  4387,   -52,  4762,  2204,  4535, -4344,
   -4344, 71855, -4344, 71855, 71855, -4344,   -52,  4096, -4344,  4102,
   -4344,  2335,  1060, -4344, -4344, -4344,  2252,   493, -4344, -4344,
   -4344,  4682, 62387, -4344,  1131,  2638, -4344, -4344,   -52,   478,
   -4344, 71855,  3778, -4344, -4344, -4344, -4344,  4103,  4105, -4344,
   71855,  4720, -4344, -4344, -4344, -4344, -4344, -4344,  4546,  4115,
    4898, -4344, -4344, -4344, 16355, -4344, -4344, 16355, -4344, -4344,
    4587,  4758, -4344, -4344, -4344, -4344, -4344, -4344,  4128,  2335,
   16355,  4874,    10, -4344, -4344,  3454, -4344, -4344, -4344,  4555,
     156, -4344, -4344, -4344,  1390, -4344,  4549, 56864, -4344,  3317,
    4363,  2842, -4344,  4676, 71855, -4344, -4344, -4344, -4344, -4344,
    4133, -4344, -4344,  3385,   476, -4344, -4344, -4344,  2020, 71855,
    2020, 71855,  4751,  4751, -4344, -4344, 16355, -4344,  4935,  4146,
   -4344, -4344, -4344,   -52,  4799, -4344, -4344,  4155,  4504, -4344,
   -4344,   356, -4344, -4344, -4344, -4344, -4344,   645, -4344,   645,
     645, -4344,  4688,  4688,  4804,  1060,  2434,  2657, -4344,   493,
    2646, -4344,  2063,   467,   -52,  1146,  1146,  1146, -4344,  2063,
   -4344, -4344, -4344, -4344, -4344,  4159, -4344, -4344,   749,   645,
     749, -4344, 71855,  4650, -4344, -4344,  2328, -4344, -4344, -4344,
   -4344, -4344, -4344,  4169,  2334, -4344, -4344,  2647, -4344, -4344,
   -4344, -4344, -4344,  4341, -4344,  4305, -4344, -4344, -4344, -4344,
   71855, 71855, -4344,  4582,   426,  1060, -4344, -4344,  2655,   426,
     493, -4344, -4344,  4932,  4960, -4344,  2063, -4344,  4442,  4513,
   -4344, -4344, -4344,  2175, 88866,  4837,  4181, -4344,  4884, -4344,
    2340, -4344, -4344, -4344,  4190,  4189, 16355, -4344, -4344, -4344,
   -4344,  3017, -4344,  4840, -4344, -4344,  4838, -4344,  4367, -4344,
   -4344, -4344,  4392,  3827,  4200,  4201,  4209,  4212,  2085,  4216,
    4232, -4344,  4249, 71855, -4344,   -52,  3705, 22039,  4251,  4868,
    1787, -4344, -4344, -4344, -4344, -4344, 54497, -4344, -4344, -4344,
   -4344,  4256,  4432,  1146,  4870,  4872,  1146,  1146,  1146,  1146,
    4264,  2657, -4344,  4855, -4344,  4263, 71855, -4344, -4344, -4344,
    2335,   -52,   -52, -4344,   467, -4344, -4344, -4344,  2660, -4344,
    1736,  4637, -4344, 16355, -4344, -4344,  4478, -4344, 86057,  1688,
   -4344, -4344,  4236,  4214,  2546, -4344, -4344, -4344, -4344, -4344,
    3681,   426,  1556, -4344, 88866, -4344, -4344,  3778,  4533, -4344,
    3791, -4344, -4344,  3514,  3509,  4542, 16355,  4349,  4350, -4344,
   -4344,  4354,  4368, -4344,  4374, -4344, 71855,  2747, 73433,  3228,
   -4344, -4344,  4970, -4344,  4983, 71066, 71066, -4344, -4344, -4344,
   -4344,  3463, 71855,  1146,  4502, -4344, -4344,  4267, -4344, -4344,
      53,   -52,  1146,  1146,  3681,  3681,  1546, 71855,  4500, -4344,
   -4344,  1146, -4344, -4344, -4344, -4344, -4344, -4344, -4344, 71855,
   -4344, -4344, -4344,   447, -4344,  2398, 16355,  4900,  4428, 71855,
    1745, -4344, 87635, 87635, 71855, -4344, -4344, -4344, -4344,  6781,
   -4344, -4344,  1528, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,  5033, -4344,  4265, -4344, -4344, -4344,
   -4344,  5002,  4683,  5004, -4344, 71855, -4344, -4344, -4344,  4740,
    3778,  4111, -4344,  1020,  4270, 16355,  1653, -4344,  5050,  1677,
    2074, -4344,  5268, -4344,   383, -4344, -4344, -4344, 76589,  3933,
    4592,  4373,  2685, -4344, 88426, -4344, -4344, -4344,  4272,  2693,
    4517,  2709,  3397, -4344, -4344,  2734, -4344, 21227, -4344, -4344,
   -4344, -4344,   -52,   -52, -4344, -4344, -4344, -4344, 62387,  2737,
   -4344, 62387, -4344,  1249,  1249,   707,  2020, 16355, -4344, 16355,
    4448, -4344, -4344,  4879, 71855, -4344, -4344, -4344, -4344, 16355,
   -4344, 86057, 86057, -4344, -4344, -4344, -4344,  5052,  4698, -4344,
    4705,  4280,  4948, -4344, -4344, -4344, -4344,  4959, 86057, -4344,
   -4344, 62387, -4344, -4344,  5268, -4344,  3509, -4344, -4344,  4404,
    4614, -4344,  4408, -4344,  3210, -4344, -4344,  3059,  4875,  4457,
    1676, -4344, 73433,  4397,  3778, -4344, -4344,  1546, -4344,  4517,
    4638, -4344,  4267, -4344,  2745, -4344,  3501, -4344, -4344,  2657,
   -4344,  4500, -4344, -4344,  5095, -4344,  1428,  4727,  4728, -4344,
   -4344,  4761,  2020,  2020, -4344,   454, -4344, -4344,  4861,  4954,
   16355,  2020, 82112,  4301, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, 86846, 16355, -4344,
    1528,  5033, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   86057,  2080, -4344, -4344, -4344, -4344, -4344,  5062,  4405,   476,
   -4344, -4344,  4941, -4344, -4344, -4344, -4344, -4344, 21227, -4344,
   -4344, -4344, -4344, -4344,  4507,  4984, -4344,  4480, 16355, 86057,
   -4344,  4962, -4344,  4887,  2020,  4826,  4309, -4344,  4306,  2020,
    4998, 87635, 87635, -4344,  4111, -4344, -4344,   645,  4892, -4344,
   -4344,  4422, -4344,  1249,  1249, -4344,   514, -4344,  2020, 82901,
    5071, 71855, -4344,  4554, -4344, -4344, 16355,  4986, 63176, 83690,
    4321, -4344, -4344, -4344, 86057, -4344,  4763,  4323,  1676, -4344,
   -4344, 16355, -4344,  4980,  4562, -4344,  4325, -4344, 86057,  2020,
   86057, -4344, -4344,  4924,  7991,  2573, -4344,  4330, -4344, -4344,
     888, 34747,  4641,  1709,  2020,  5088, 86057, 71855, 79745,  4990,
   84479,  4951, 71855,  3778,  4952,  4953, -4344, -4344, -4344, -4344,
   -4344, 62387,  2761, -4344, -4344, 71855, -4344, -4344, -4344,  2002,
    4578, -4344, 80534, -4344,  2924,  4695,  4518, -4344, -4344,  5025,
    3023, -4344, -4344, -4344, 36325,  4339, -4344,  1146, -4344,  4779,
   86057, 86057, -4344, -4344, -4344, -4344, 50552, 16355, -4344, -4344,
   -4344, -4344,  2105, -4344, 71855, 18791,  4459, 81323, 85268, -4344,
   -4344, -4344, 26856, -4344, -4344, -4344,  4963, -4344,  2020, -4344,
   -4344, -4344, 50552, -4344, -4344, -4344
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2026,  3132,  1315,  3084,     0,     0,     0,     0,     0,     0,
    3086,  3132,   152,  2141,  2142,     0,  1969,     8,     0,  1315,
     467,     0,     0,   164,     0,  1983,     0,  2198,     0,     0,
    1315,     0,  2192,     0,     0,  1315,  2031,  2175,   444,     0,
    3086,     0,  1381,     0,  2118,  2917,     0,     0,     0,     0,
    2044,     0,  2914,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2918,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   141,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1239,
     144,   143,   142,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1346,  1343,  1891,  1345,  1359,  1367,  1368,
    1369,  2027,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   148,     0,    44,   145,   111,   136,   137,   117,   135,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   139,   116,   130,   129,   134,   128,
     138,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     106,   105,   108,   127,   119,   126,   118,   104,   109,    45,
      64,  2143,    65,    86,    81,    74,   149,    75,    93,    95,
      94,    76,   147,   140,    88,    19,    69,    89,    68,    15,
      36,    90,    91,    82,   150,    73,   146,    71,    35,     0,
    1136,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1967,     0,  1072,  3130,  3131,  3132,  1317,  1316,     0,  3086,
    2302,  1302,     0,  2386,  2385,  2388,  2390,  2391,  2392,  2393,
    2394,  2395,  2338,  2397,  2400,  2401,  2402,  2403,  2404,  2339,
    2405,  2406,  2407,  2408,  2409,  2410,  2340,  2341,  2412,  2413,
    2414,  2416,  2417,  2342,  2343,  2418,  2419,  2420,  2421,  2422,
    2423,  2424,  2425,  2426,  2427,  2345,  2428,  2346,  2429,  2430,
    2432,  2433,  2463,  2434,  2435,  2436,  2437,  2438,  2439,  2347,
    2440,  2441,  2442,  2443,  2444,  2445,  2446,  2447,  2448,  2348,
    2449,  2450,  2452,  2454,  2455,  2456,  2457,  2458,  2349,  2459,
    2460,  2461,  2462,  2350,  2464,  2466,  2467,  2469,  2471,  2470,
    2472,  2473,  2376,  2474,  2475,  2335,  2477,  2478,  2479,  2480,
    2481,  2484,  2485,  2377,  2486,  2487,  2489,  2490,  2351,  2352,
    2492,  2493,  2494,  2495,  2502,  2496,  2497,  2498,  2816,  2501,
    2353,  2504,  2354,  2508,  2507,  2509,  2298,  2510,  2299,  2511,
    2355,  2513,  2514,  2517,  2518,  2356,  2520,  2521,  2522,  2523,
    2524,  2525,  2527,  2357,  2529,  2530,  2531,  2532,  2533,  2534,
    2817,  2536,  2537,  2538,  2539,  2541,  2542,  2544,  2546,  2547,
    2548,  2549,  2551,  2552,  2562,  2553,  2554,  2555,  2557,  2556,
    2558,  2559,  2560,  2563,  2543,  2565,  2566,  2567,  2568,  2569,
    2570,  2571,  2573,  2574,  2575,  2576,  2577,  2578,  2579,  2580,
    2581,  2582,  2583,  2584,  2585,  2586,  2587,  2588,  2589,  2590,
    2591,  2592,  2594,  2595,  2596,  2597,  2378,  2358,  2599,  2601,
    2602,  2604,  2607,  2608,  2609,  2611,  2615,  2616,  2617,  2618,
    2619,  2621,  2620,  2622,  2625,  2627,  2628,  2626,  2629,  2630,
    2631,  2359,  2360,  2633,  2634,  2635,  2379,  2637,  2639,  2638,
    2380,  2640,  2641,  2642,  2644,  2645,  2646,  2647,  2648,  2651,
    2652,  2653,  2654,  2655,  2381,  2656,  2658,  2361,  2659,  2382,
    2661,  2663,  2662,  2664,  2666,  2667,  2665,  2362,  2671,  2673,
    2674,  2676,  2678,  2680,  2363,  2682,  2683,  2684,  2686,  2685,
    2687,  2364,  2688,  2689,  2695,  2696,  2697,  2698,  2820,  2699,
    2700,  2337,  2365,  2701,  2366,  2703,  2704,  2705,  2706,  2707,
    2731,  2736,  2737,  2738,  2739,  2740,  2741,  2743,  2744,  2367,
    2745,  2746,  2747,  2748,  2368,  2749,  2751,  2753,  2754,  2755,
    2756,  2757,  2384,  2758,  2759,  2760,  2761,  2762,  2763,  2764,
    2765,  2766,  2767,  2768,  2773,  2771,  2772,  2774,  2776,  2777,
    2369,  2778,  2779,  2781,  2782,  2783,  2784,  2370,  2371,  2785,
    2787,  2788,  2789,  2790,  2791,  2792,  2793,  2795,  2797,  2798,
    2799,  2800,  2801,  2802,  2803,  2804,  2372,  2805,  2806,  2807,
    2818,  2681,  2389,  2519,  2796,  2431,  2702,  2535,  2598,  2819,
    2505,  2411,  2344,  2476,  2491,  2600,  2614,  2632,  2672,  2770,
    2780,  2593,  2612,  2624,  2506,  2679,  2742,  2769,  2383,  2794,
    2550,  2499,  2336,  2451,  2453,  2613,  2649,  2387,  2512,  2396,
    2572,  2610,  2693,  2690,  2692,  2694,  2675,  2606,  2465,  2605,
    2545,  2643,  2540,  2564,  2636,  2561,  2669,  2623,  2483,  2670,
    2750,  2603,  2677,  2526,  2775,  2398,  2468,  2691,  2711,  2808,
    2668,  2660,  2657,  2500,  2708,  2709,  2710,  2712,  2713,  2714,
    2715,  2716,  2717,  2718,  2719,  2720,  2721,  2729,  2723,  2722,
    2724,  2725,  2727,  2726,  2728,  2730,  2732,  2733,  2734,  2735,
    2752,  2528,  2399,  2482,  2488,  2516,  2650,  2786,  2515,  2415,
    2503,   398,  2309,   380,  2310,  2331,  2332,  2333,  2330,  2334,
     166,     0,     0,  2906,  2905,     0,     0,  3087,  3088,   733,
       0,     0,     0,     0,     0,     0,  1970,     0,  1013,   733,
     733,     0,     0,     0,   318,  3115,  3115,  3132,  3134,  3136,
    2388,  2338,  2403,     0,  2266,     0,     0,     0,  1742,     0,
    2342,     0,  2422,  2424,     0,     0,  1409,  1409,   897,     0,
       0,     0,  2447,  2448,  2272,     0,     0,     0,  2263,  2273,
    2492,  2496,  2498,     0,  2265,  2509,     0,     0,     0,     0,
    2533,  2275,     0,     0,  2576,  2578,     0,     0,  2582,  2583,
    2584,  2585,  2247,  1468,     0,   897,  2259,  2274,  2253,  2629,
    2630,     0,  2640,     0,     0,  2680,     0,     0,  2685,  2695,
       0,     0,  2754,     0,     0,   897,  2246,  2773,  2771,  2772,
    2774,     0,  2264,  2369,  2276,     0,  2789,  1409,   897,   897,
       0,     0,     0,  2799,  2800,  2807,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2526,  2752,     0,     0,  1401,     0,     0,     0,  1467,     0,
    1551,  3106,  1945,  1400,  1404,  1421,  1426,  1443,     0,  1460,
    1479,  1480,  1482,  1589,  1481,  1487,  1610,  1488,  1611,  1486,
    2260,  1485,  2270,  2269,  1484,  2261,  2271,  2262,  1402,  1478,
    2289,  2309,  2288,  1494,  3104,  1967,  1967,  1967,     0,     0,
    1967,  1967,     0,     0,  1967,     0,  1967,  1967,  1967,     0,
       0,   157,  2150,   468,   469,     0,  2959,  2972,  2973,  2969,
    2974,  2992,  2975,  2979,     0,  2971,  3064,  2322,     0,  2978,
       0,  3064,  2976,     0,  3064,     0,  2977,  2982,  2993,  3064,
    2970,  2311,  2321,  2320,  3064,  2810,  2809,  2312,  2811,     0,
    2961,     0,  2294,     0,     0,  1985,  1986,  1984,  1224,     0,
       0,  2199,  2200,     0,  2203,     0,  2204,  2207,     0,  2902,
       0,     0,     0,     0,     0,  1318,     0,  1988,  2032,  1989,
    1987,  1967,     0,   434,   443,   445,   446,   442,  2959,     0,
       0,  3088,  3099,  3114,  3109,  3108,  3111,  3112,  3113,  1386,
    3110,  3107,     0,  1382,  1384,  1385,   950,     0,     0,  2851,
    2854,  2588,  2622,  2855,  2776,  2852,  2681,  2853,  2383,     0,
       0,  2315,  2878,  2813,  2814,  2815,  2812,  2316,  2821,     0,
    2845,     0,  2111,     0,   950,  2130,     0,     0,  2130,     0,
    1900,  2114,  2119,  2117,     0,  2857,  2091,  2858,  2110,     0,
    2067,  2090,     0,  2046,  2083,     0,  2859,  1249,  2113,     0,
    1900,  1250,  2074,  2130,     0,     0,     0,     0,     0,     0,
       0,   446,  1238,  1249,  1256,  1271,  1237,  1271,  1380,  2294,
    2045,     0,     0,     0,  2916,     0,  2201,     0,  1379,  2008,
       0,  1868,  1871,  1873,  3180,     0,     0,     0,  3175,     0,
    3181,     0,     0,  2288,     0,     0,     0,     0,     0,  3105,
       0,     0,     0,     0,     0,     0,     0,     1,    11,     0,
       0,  1409,  2319,  2789,     0,  2318,  2317,  2323,  2325,  3017,
    3062,  3068,     0,     0,     0,  1236,  1240,  1241,  1243,  1244,
    1245,     0,     0,     0,  1344,  1388,  1348,     0,  3101,  1900,
    1892,     0,  3101,  1900,  1356,  1351,  1891,  1358,  2038,  2031,
    2143,  2492,  2146,  2026,  2147,     0,  1064,  1137,     0,  1068,
       0,     0,     0,     0,  2919,     0,  1066,     0,  2112,  1144,
       0,     0,  1095,     0,     0,  3141,  1070,     0,  3085,     0,
    1328,  1339,  1734,   397,     0,   170,   167,   168,  1285,  1963,
    1304,     0,  3091,     0,     0,     0,     0,  3137,     0,     0,
       0,   580,     0,     0,     0,     0,     0,   733,  3141,  3141,
    3115,  3135,     0,     0,  1861,  1501,  1861,  1861,  1861,  1743,
       0,     0,     0,     0,     0,     0,     0,  1861,     0,  1545,
    1517,     0,  1546,     0,     0,     0,  2277,     0,     0,     0,
    1498,     0,     0,  1734,     0,  1703,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1738,  1740,  2288,  1861,     0,
       0,  1861,     0,     0,     0,     0,     0,  1414,   946,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1861,  1861,     0,     0,  1861,  1559,  2279,     0,     0,     0,
    2278,     0,     0,     0,  2268,  2267,  2248,     0,  1562,  1564,
    1563,     0,  1861,  1861,     0,     0,     0,  1861,  1861,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1861,  1491,  1490,  1492,     0,     0,  3106,     0,
    2860,  1699,  1701,     0,     0,  1464,  1463,     0,  1462,  1461,
    2308,     0,  1403,     0,     0,  1408,  1407,  1469,  1470,  1471,
    1472,     0,  1473,  1474,  1475,     0,     0,     0,     0,     0,
       0,  1466,  1465,     0,     0,     0,     0,  1445,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1493,     0,     0,
    2303,  2249,     0,     0,  1605,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1971,     0,     0,     0,     0,     0,
       0,  1967,   159,     0,     0,  2960,  2952,  2990,  2989,  2994,
       0,  2991,  2987,  2995,  2996,  2980,     0,  2966,  2984,     0,
    2968,  2986,  2985,  2965,  2981,  2988,  2967,     0,  2963,  2955,
       0,     0,  1857,  2929,     0,     0,   165,     0,  1225,  1989,
       0,  3194,  3191,  2197,     0,  2208,  2209,  2205,     0,     0,
       0,     0,  2110,     0,  2193,  3100,  1320,     0,     0,     0,
    1990,     0,     0,  2177,  2186,  2182,  2184,  2176,  2179,   435,
       0,     0,   465,  2946,     0,     0,  2955,  3094,  3091,  1372,
    1383,   949,     0,     0,   952,  2877,  2009,  2010,   961,     0,
     951,     0,     0,     0,     0,     0,  2823,  2887,  2884,  2883,
    2836,  2831,  2830,  2327,  3013,  2829,     0,  2864,     0,   956,
     958,   957,  2874,   955,     0,     0,  2776,  2824,  2845,     0,
       0,  2822,     0,  2126,     0,     0,  2132,  2089,     0,   733,
       0,     0,     0,     0,     0,     0,     0,  2061,  2109,     0,
    2108,  2082,  1901,  2124,  2125,  2130,     0,  2123,     0,  2130,
       0,  2097,  2114,     0,  2130,  2058,     0,     0,  2050,  2055,
    2051,     0,  2057,  2056,  2059,  2047,  2048,  2126,  2073,  2114,
    2081,  2088,   308,  2072,  2078,  2086,  2114,  1011,  1010,  1009,
       0,     0,  2114,  2130,  2130,   441,     0,     0,  1255,  1257,
    1258,  1276,  1275,  1252,  1272,  1273,   308,  2043,  3192,  3193,
    2915,  2015,     0,  1869,     0,     0,     0,  2252,  2251,  3177,
    2250,  3185,  3187,  3171,     0,  3174,  3173,  3182,     3,     0,
       0,   670,     4,     0,     6,     0,     0,     7,  1347,  1365,
       0,  1364,    12,   151,  2326,     0,     0,     0,     0,  1091,
    1092,  1092,     0,     0,     0,     0,     0,     0,     0,     0,
    3052,  1090,  3015,  3015,  3048,  3015,  3015,  3015,     0,     0,
    1119,     0,     0,     0,     0,  1393,  1392,  1395,  2459,     0,
       0,  1944,  1938,  1941,  1940,     0,  1387,  1350,  1349,     0,
    3103,  3102,     0,  1352,  1909,  1910,  1908,  1902,  1903,  1907,
    1906,     0,  1354,  1900,  1900,  1357,  2042,  2041,  2040,     0,
    2038,  1224,     0,  2145,     0,     0,  2135,  2136,  2137,  2138,
    2139,  2134,  2133,  2148,  2149,  3139,  3140,  3138,   963,  3133,
     381,     0,     0,  2921,  2927,     0,     0,   381,     0,     0,
    2011,  2011,     0,  2011,  2011,   649,     0,   648,  2011,   739,
     601,   603,   604,   638,   605,   606,   607,   608,   609,     0,
    1222,  2011,  1222,     0,  2011,  2011,  1222,  2011,     0,     0,
    2011,  2011,  2011,  2011,     0,     0,   964,  2011,     0,     0,
    1222,     0,  2011,     0,  1206,     0,     0,  2011,  2011,  2011,
    2011,  2011,  1222,     0,     0,  2011,  2011,     0,  1232,     0,
       0,  2011,     0,  2011,  2011,  2011,     0,  2011,  2011,     0,
    2011,     0,     0,  2011,  1166,  1167,  2011,  2011,   775,  1177,
     735,   762,   763,     0,  1062,  1063,  1138,  1140,  1210,  1146,
    1145,  1174,  1179,  1208,  1209,     0,  1968,  3206,  1074,     0,
       0,  1073,  3141,  1299,     0,     0,  1006,  1005,     0,     0,
    1339,  1330,  1736,     0,  1735,   379,     0,     0,  1287,  1286,
       0,  1284,  1312,  1311,  1309,     0,  1310,  1308,  1303,  1305,
    1306,  3090,     0,     0,  3092,  3096,     0,   316,     0,     0,
       0,     0,     0,   733,     0,   582,     0,  3025,  3060,   331,
     314,     0,  1039,     0,     0,   733,     0,     0,     0,  3129,
    3117,  3124,  3125,  3128,  3127,  3126,     0,  3123,  3116,  3119,
    3120,  3122,  3121,  3141,     0,     0,  1862,  1861,     0,     0,
       0,     0,     0,     0,  1744,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1410,     0,   898,  1571,     0,     0,
       0,     0,     0,  1833,  1834,  1835,  1836,  1844,  1837,  1838,
    1839,  1846,  1851,  1840,  1841,  1847,  1848,  1849,  1842,  1850,
    1845,  1843,  1852,     0,  1832,     0,     0,  1856,  1853,  1855,
    1854,     0,  1704,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1861,     0,     0,     0,  1861,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1581,     0,     0,     0,     0,
       0,  1861,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1541,     0,  2291,  2290,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1646,     0,  1646,
       0,     0,     0,  1649,  1650,  1648,  1651,     0,     0,     0,
       0,  1861,     0,     0,  1495,     0,     0,     0,     0,     0,
       0,     0,  1399,  1406,  1405,  1412,  1411,  1413,  1417,  1422,
    1415,  1419,     0,  1476,  2395,  1424,     0,     0,  1457,     0,
    1427,  1437,  1458,  1441,  1448,  1449,     0,  1444,     0,  1446,
    1447,     0,  1451,     0,  1450,  1454,  1455,  1456,  1459,     0,
       0,     0,     0,  1483,  1489,  1511,  1512,  1404,     0,  1606,
    1607,  2284,  2292,  1948,  1955,  1950,     0,  1971,  1952,  1960,
    1967,  1975,  1976,  1957,   739,  1973,  1956,   610,  3011,  1953,
    1226,  1962,  3219,     0,     0,   158,     0,     0,     0,     0,
    2167,  2169,  2172,  2168,     0,  2171,     0,  2170,  2151,  2154,
    2160,  2173,     0,     0,   466,   470,   472,     0,   475,     0,
    2983,  3066,     0,     0,  2964,  2957,  2958,  2956,     0,  2997,
    2962,  1858,     0,  2928,  2489,  2596,     0,  1863,  2295,  3196,
       0,     0,     0,     0,  2206,     0,  2904,  1857,  2903,  2907,
    1314,     0,   154,   155,     0,     0,     0,  1319,  1323,     0,
    1289,  1772,  2181,  2190,  2188,  2188,     0,   433,   458,   453,
     461,   455,   457,   456,   462,   463,   464,   459,   454,   460,
     447,     0,     0,     0,     0,  2944,     0,  3095,     0,  3097,
       0,  1863,  1373,  1372,     0,     0,     0,  2880,     0,  2876,
    2875,     0,  1092,  2305,  1092,     0,  2889,  2890,     0,  2881,
       0,  2882,     0,  2835,     0,     0,  2838,     0,     0,     0,
       0,     0,     0,     0,  2879,  2844,  2843,     0,  2846,  2847,
       0,  2850,  2898,  2899,  2896,  2897,  2900,  2901,  2895,  2871,
       0,  2128,  2131,  1865,     0,     0,  2106,  2100,  2099,  2095,
    2101,  2107,  2096,  2068,  2069,  2070,  2064,  2115,  2105,  2103,
    2092,  2130,  2104,  2102,  2052,  2053,  2054,     0,  1900,     0,
    2128,  2130,     0,  2098,  2130,     0,     0,  2130,  2085,  2087,
    1261,  1262,     0,     0,  1277,     0,  1251,  2020,  2019,     0,
    2016,  2018,  2007,  1870,     0,  1875,     0,     0,     0,  3172,
    3188,  3170,  3176,  3183,  3184,  3169,  2292,     0,   671,     0,
       0,   674,     0,     0,  2011,  1366,    13,    10,  1127,     0,
       0,  3059,     0,  3015,  3015,     0,     0,  3020,  2324,     0,
       0,     0,  3057,     0,     0,     0,     0,  3045,     0,  3046,
    3049,     0,  3050,  3051,     0,     0,  3072,  3070,     0,  3071,
    3069,  3002,  3017,  3063,     0,  1099,  1248,  2300,  1247,  1246,
    1242,     0,     0,  1398,  1395,  1389,  1396,  2304,  1943,   953,
    1939,     0,     0,  1896,  1893,  1895,  1362,  1360,     0,     0,
    1363,  1361,  1353,  1355,     0,     0,  1965,  2036,  2039,     0,
    2144,     0,     0,   963,   722,   724,   731,   730,   732,     0,
    1069,  2926,  2925,     0,     0,     0,     0,  1067,     0,     0,
     599,  2012,     0,     0,   599,     0,     0,     0,     0,   740,
    2112,  2011,  1223,  1056,  1007,  1315,  1007,  1183,     0,  1056,
       0,     0,     0,     0,     0,     0,  1315,     0,     0,     0,
       0,     0,  1315,     0,     0,     0,     0,     0,  2011,     0,
    1192,     0,  1148,     0,     0,     0,     0,     0,     0,     0,
    1193,     0,     0,     0,  1149,  2011,     0,     0,     0,     0,
       0,     0,  1315,     0,     0,     0,  1315,  1235,     0,  1234,
    1233,     0,     0,  1315,  1315,     0,   772,     0,     0,     0,
     768,   769,     0,     0,     0,     0,  1170,  1171,     0,     0,
       0,   736,  2011,  2011,     0,  1142,  1139,   963,   963,     0,
    2011,  3214,  1128,     0,     0,  1071,     0,     0,  1296,  1332,
    1326,  1331,  1329,  1339,     0,  1823,     0,   399,     0,     0,
       0,     0,     0,     0,     0,     0,   308,   172,     0,   202,
     206,   214,   218,   204,   300,   302,   210,   212,   216,   224,
     236,   222,   240,   226,   228,   230,   232,   220,   234,   208,
     246,     0,     0,   242,   244,     0,   248,   250,     0,   238,
       0,     0,     0,     0,   245,   203,   207,   249,   215,   219,
     247,   205,   301,   303,   211,   213,   243,   217,   221,   223,
     225,   241,   227,   229,   231,   233,   235,   239,   237,   209,
     251,     0,   308,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   200,     0,
       0,   285,  1964,  1313,  1307,  3089,  3093,   734,   963,     0,
       0,     0,     0,     0,     0,   581,     0,   584,     0,     0,
    3024,  3025,  3028,  3029,  3030,  3031,  3032,  3033,     0,     0,
    3068,  2011,     0,     0,     0,  1040,   963,     0,     0,     0,
     380,  3164,     0,  3118,     0,  1567,     0,  1661,  1711,  1661,
    1661,  1661,     0,     0,     0,     0,     0,     0,  1568,     0,
    1515,  1569,  1570,     0,     0,     0,  1661,     0,   899,     0,
       0,  1518,  1519,  1508,     0,     0,  1590,     0,  1707,  1520,
       0,     0,     0,     0,     0,  1591,  1739,     0,  1741,  2292,
       0,  1661,  1575,  1526,     0,  1661,     0,  1527,  1592,  1593,
    1594,     0,  1596,     0,  1577,     0,     0,  1580,     0,     0,
    1529,  1661,  1661,     0,     0,     0,     0,  1661,  1531,     0,
       0,     0,  1530,     0,     0,     0,     0,     0,     0,     0,
    1533,     0,  1509,  1661,  1661,  1583,     0,     0,  1585,     0,
    1542,  1861,  1661,  1698,     0,  1638,  1637,  1655,     0,     0,
    1655,     0,     0,  1652,     0,  1639,  1636,  1635,     0,     0,
    1661,     0,  2861,  2862,  2863,  1058,  1700,  1499,  1418,  1423,
    1416,  1420,  1425,     0,     0,     0,  1436,     0,     0,     0,
       0,     0,  1428,  1439,  1442,  1609,  1597,     0,  1734,     0,
       0,  1211,  1959,     0,  2112,  1958,   611,   612,   614,     0,
    1228,  1227,  1954,  3220,  1951,  1226,     0,   160,   162,  2165,
    2162,  2161,  2163,   308,  2164,     0,  2174,  2152,  2447,  2773,
    2774,   479,     0,   451,   450,   452,   476,     0,     0,  2955,
    3065,     0,     0,  3006,  3009,     0,     0,     0,  2950,  1860,
    2939,  2935,  2940,  2942,  2938,  2941,  2943,  2936,  2937,  1863,
       0,  1900,  1864,  1772,  3190,  3195,  1334,  1335,  1339,     0,
       0,     0,   156,     0,     0,  2194,     0,  1321,     0,     0,
    1294,  1293,  1295,  1288,  1290,  1291,     0,     0,  1773,     0,
    2187,  2189,   308,   308,  2178,     0,     0,     0,  2955,     0,
       0,  3098,  1375,     0,     0,     0,     0,  1374,  1376,  1377,
    1749,  1748,  1779,  1776,  1775,  1778,  1777,  1780,  1772,  1857,
    1882,  1863,     0,     0,     0,   960,   962,   959,     0,     0,
    3015,  3015,     0,     0,  2894,  2886,  2888,  2885,  2837,  2328,
    3014,     0,  2867,  2868,  2869,  2865,  2866,     0,  2872,  2870,
       0,  2849,  2127,     0,  1900,     0,  2094,     0,  2066,     0,
    2084,  2049,  1900,  2065,     0,  2063,  2114,  2114,  2062,  1260,
    1259,     0,  1263,  1274,  2014,     0,  1874,     0,  1872,  3178,
    3186,     0,     0,     0,     0,     0,     0,     0,     0,   676,
       0,   672,     0,     0,  1086,     0,  3034,  1093,  1085,  1084,
       0,  3019,  3053,  3030,  1087,  1088,  1089,  3018,     0,  3036,
    3055,  3015,     0,  3015,  3015,  3005,  3004,  3003,  3000,     0,
       0,     0,     0,     0,  1120,  1122,     0,     0,     0,     0,
    1096,  1100,  1101,  1394,  1397,  1390,     0,  2214,  1937,  1391,
    1898,  1899,  2286,  1897,     0,  1905,  1904,     0,  1857,  2294,
       0,     0,     0,  2296,     0,  1935,  1936,  1920,  1921,  1919,
    1922,  2140,  1923,  1934,  2011,   723,  2011,     0,     0,     0,
       0,     0,     0,     0,   382,   391,     0,     0,  2920,     0,
     626,     0,     0,     0,     0,     0,     0,     0,     0,   336,
     633,  1077,   739,  1930,  1932,  1929,  1931,   639,   652,  1933,
     653,   650,  1078,   637,   640,  1079,  3221,   651,   602,     0,
     809,  1057,  1008,  1056,  1150,  1056,     0,     0,     0,  1007,
     812,  1056,     0,  1036,  1057,   808,     0,  1217,  1216,  1218,
     810,   810,     0,     0,     0,  1927,  1928,  1926,  1924,  1925,
     751,   746,     0,  1917,  1918,  1914,  1915,  1913,  1916,   757,
    1172,  1304,  1173,  1830,     0,   748,   749,   750,   770,     0,
       0,   759,     0,  1190,  1191,     0,  1153,  1188,  1189,  1226,
     741,     0,     0,     0,   788,   789,   787,   764,   771,  1220,
    1219,  1221,   744,   745,     0,     0,  1207,  1889,  1896,   777,
     752,   776,   747,     0,     0,     0,  1201,  1161,     0,   786,
     784,   781,   783,   782,   785,   760,   753,   754,   756,   755,
     767,   758,  1160,  2173,   742,   743,   773,   774,     0,     0,
    1143,  1222,  1222,  1178,  1175,  1176,  1141,  1147,  1180,   634,
     635,   610,     0,  2011,  3216,     0,  1130,  1132,  3142,  3143,
    1873,     0,     0,     0,  1826,     0,  1827,  1824,  1825,     0,
    1737,     0,     0,     0,     0,     0,     0,     0,     0,   171,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   169,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   317,
     963,   728,     0,   615,     0,     0,     0,   326,     0,  2011,
    2011,  2011,  2011,   321,   739,   586,   588,   589,   590,   591,
     592,   595,   593,   596,   594,   597,   598,   610,  3026,  3022,
       0,  3023,     0,  3061,  1119,     0,  1045,  1047,  1046,  1042,
    1041,     0,     0,  2213,     0,  2212,   808,   311,   655,   657,
     660,   658,   739,   737,  2000,  2002,   662,     0,     0,   345,
    3159,     0,     0,   576,   575,     0,     0,     0,  1661,  1612,
    1662,  1614,  1615,  1620,     0,  1745,     0,  1505,   911,   911,
     895,  1719,   891,   883,   889,  1733,  1724,  1728,  1731,  1730,
    1732,     0,   867,  1727,  1729,   881,  1715,   895,  1717,  1720,
     911,  1725,  1513,     0,     0,     0,     0,     0,  1661,  1622,
    1661,     0,     0,     0,     0,     0,     0,  1705,     0,     0,
       0,  1510,     0,  1601,  1661,  1626,  1661,  1624,     0,     0,
       0,     0,     0,     0,     0,  1630,  1628,     0,     0,     0,
       0,  1661,  1632,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1629,  1631,     0,     0,     0,     0,
       0,  1616,  1669,  1663,  1664,  1665,  1666,     0,     0,     0,
    1653,  1655,     0,  1655,     0,  1640,     0,  1565,  1661,  1618,
    1496,     0,  1702,  1434,  1429,     0,  1438,     0,  1453,  1452,
       0,     0,     0,  1608,     0,  2285,  2293,  1949,  1947,  1213,
    1212,  1961,  1974,  2112,  3012,  1946,   163,     0,  2166,  2159,
    2155,     0,   471,   480,   473,   477,   478,   474,     0,  3067,
    3075,     0,     0,     0,     0,  1900,     0,  2930,     0,     0,
    1339,  1341,  2210,     0,  2910,  2911,  2909,  2908,  2196,  2195,
       0,  1324,  1325,  1292,     0,     0,  2004,  2003,     0,  1980,
    1982,  1991,  1994,     0,  2191,  2183,  2185,     0,   448,     0,
       0,  2949,     0,     0,  1857,     0,  1749,  1779,  1776,  1775,
    1778,     0,     0,     0,     0,  1762,  1770,  1768,  1770,  1765,
       0,     0,     0,  1857,  1873,     0,  1866,  1882,  2834,  2833,
    2832,  1092,  1092,  2826,  2825,  2892,  2891,  2893,  2840,   739,
    2839,     0,  2848,  2129,  2075,  2080,  2079,  2093,  2060,   308,
     309,  1863,  2130,     0,  1283,     0,  1279,  1278,     0,  1265,
    2017,  1876,     0,  3189,     5,     0,     0,     0,     0,   675,
       0,   685,     0,     0,     0,     0,  3197,  3035,     0,     0,
    3058,     0,     0,     0,  3043,  3016,  3047,  3044,  3001,  1125,
    1123,  1124,  1126,  1121,  1104,  1103,  1105,     0,     0,     0,
    1118,  1117,  1116,     0,     0,  1083,  1102,   954,     0,  2222,
    1894,     0,  1772,     0,  1863,  1966,  2037,  2036,     0,     0,
       0,   385,   388,   386,     0,   387,     0,     0,  2923,     0,
     636,  1076,   739,   628,   630,   631,   632,   340,   339,   341,
     342,   344,   343,   338,  1082,     0,   646,     0,     0,     0,
       0,     0,  1056,  1003,  1004,   811,     0,   806,   813,     0,
       0,     0,     0,     0,   794,   796,   797,     0,   880,   834,
     825,   911,   828,   827,   971,   895,   839,   886,     0,   888,
     885,   860,   859,   876,   858,   863,   847,   971,   971,   846,
     879,   971,   864,   862,   866,     0,   867,   887,   872,   861,
     865,   857,     0,   878,   911,   895,   895,   843,   877,   971,
       0,   870,   911,   799,   915,   845,   978,     0,     0,   911,
     913,   891,  1199,  1200,  1044,  1043,  1198,     0,     0,  1156,
       0,  1157,     0,  1159,   961,   961,   765,  1164,  1187,  1186,
       0,  1165,   766,  1229,  1155,     0,  1890,  1154,     0,     0,
       0,  1289,     0,   779,   778,  1081,  3210,  3207,  3208,     0,
    3218,  3217,  3219,     0,     0,     0,   350,  3144,     0,     0,
    1338,  1340,     0,  1327,     0,   174,   175,     0,   176,   177,
       0,   178,   179,     0,   180,   173,   286,   306,   307,   253,
     291,   279,   290,   280,   293,   292,   294,   281,   282,   296,
     297,   295,   283,   284,   201,   278,   252,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   267,   270,   271,
     268,   269,   264,   299,   265,   298,   266,   272,   273,   274,
     276,   277,   304,   305,   729,     0,  2011,  2011,   320,   739,
     617,   619,   620,   621,   622,   625,   623,   624,   326,     0,
       0,   325,     0,     0,     0,     0,     0,  2112,   322,     0,
       0,   332,  1099,  3204,  3205,  3206,     0,   661,   312,     0,
       0,   656,   654,   963,  2001,   659,     0,     0,   400,   792,
     793,   791,   790,     0,  3165,   579,   577,   578,     0,     0,
    1543,  1613,  1746,     0,     0,   912,  1712,   971,     0,  1722,
       0,  1723,   893,   892,   884,   882,  1726,   890,   868,  1716,
    1721,  1718,  1714,  1514,     0,     0,  2280,  1516,  1507,  1506,
    1623,  1621,     0,     0,  1549,  1573,     0,  1550,     0,     0,
       0,     0,     0,  1522,     0,  1525,     0,     0,  1603,  1627,
    1625,  1576,  1595,  1552,  1578,     0,  1528,  1497,     0,  1553,
       0,  1558,  1556,     0,  1633,  1532,     0,     0,  1539,     0,
    1537,     0,  1538,     0,  1540,  1582,  1584,     0,     0,     0,
       0,  1661,  1670,     0,  1671,  1657,  1656,  1643,     0,  1647,
       0,  1644,     0,  1658,     0,  1799,  1619,  1059,     0,  1433,
    1435,  1431,     0,  1440,  1598,  1215,  1214,   613,   161,  2157,
       0,  2153,     0,     0,     0,     0,  2954,  3008,  3007,  3010,
    3073,  2998,  2931,     0,     0,  2021,  2023,  1336,  1339,  1341,
       0,  1337,     0,  2211,  2912,  2913,  1322,     0,  1829,  1981,
    2029,     0,     0,     0,  1998,  2283,  2282,  2290,  2015,  1999,
    2006,     0,     0,     0,  2945,     0,  1873,     0,  1787,  1781,
    1783,  1784,  1786,     0,     0,  1749,  1748,  1378,  1764,  1763,
    1771,     0,  1769,  1770,  1770,     0,     0,  1758,  1757,     0,
    1820,  1788,     0,     0,  1877,  1866,  3015,  3015,     0,  2873,
    2076,  2077,  2071,     0,     0,     0,     0,     0,  1267,  3179,
       0,   681,   668,     0,   666,   670,     0,   663,     0,     0,
     679,     0,     0,     0,  2307,  2306,  3037,     0,  3038,     0,
    1108,     0,  1107,  1113,  1110,  1109,     0,  1098,  1097,     0,
       0,     0,     0,  2215,  2217,     0,  1942,  1863,  1863,  2295,
    2034,     0,  2297,  1863,   725,   780,   390,   389,   395,   396,
       0,  2922,  2112,   337,     0,  1152,     0,     0,   687,     0,
       0,     0,   814,     0,     0,  1054,     0,  1053,  1896,  1037,
    1038,  1182,   808,   799,   833,   826,   844,   965,   976,   974,
     968,   869,   971,     0,   972,   973,   830,   842,     0,   853,
       0,   848,   971,   856,   852,   868,   871,   873,   875,     0,
     971,   841,   840,   850,   837,   900,     0,  1229,   800,   925,
       0,     0,     0,     0,  1465,   919,     0,   983,     0,     0,
     928,     0,  2011,  2011,     0,   936,   815,   916,   918,   817,
       0,   939,     0,   979,   978,   832,   971,   978,   900,     0,
     914,   900,   900,  1196,     0,  1197,  1229,  1831,  1205,  1204,
       0,     0,  1231,  1185,  1888,  1203,  1202,     0,  1158,   761,
       0,     0,  3212,     0,  3215,  1094,     0,   360,     0,     0,
    1129,     0,   353,   351,   362,     0,  1301,  1297,  1828,   181,
       0,   183,   185,   190,     0,   192,  2329,     0,   195,     0,
     197,  2301,   199,     0,   186,     0,     0,   287,   289,     0,
       0,     0,  2112,   324,     0,     0,     0,     0,     0,     0,
     583,   645,   641,   647,   644,   587,  3027,     0,  3042,  3040,
    3041,  1096,  3214,     0,     0,   963,   738,     0,     0,     0,
     401,   403,     0,     0,   410,     0,     0,  1747,     0,     0,
       0,     0,  1713,     0,     0,  1502,  1513,  2281,     0,     0,
       0,     0,  1708,  1710,  1706,  1661,     0,     0,     0,     0,
       0,  1500,     0,  1599,     0,     0,     0,     0,     0,     0,
    1536,  1534,  1535,   980,  1587,  1586,     0,  1617,  1667,     0,
    1673,  1654,  1642,  1641,     0,  1655,  1566,     0,  1807,  1808,
       0,  1800,  1801,     0,  1430,     0,     0,     0,   488,   483,
     491,   485,   487,   486,   492,   493,   494,   495,   489,   484,
     490,   482,   481,     0,     0,     0,  3082,  1863,  2021,     0,
    2023,     0,  1979,  1333,  1342,     0,  1774,     0,     0,  1992,
    1995,     0,     0,     0,     0,     0,   449,  2948,     0,     0,
    1789,  1378,  1750,  1766,     0,     0,  1759,  1767,     0,     0,
       0,     0,  1814,  1815,     0,     0,  1818,  1821,  1822,  1785,
    2287,  1886,  1885,  1867,     0,  1371,  1877,  2828,  2827,  2841,
    1282,  1281,  1280,  1264,     0,     0,  1269,   669,     0,   667,
       0,     0,   665,   673,     0,   680,     0,     0,  3054,  3039,
    3056,     0,  1114,  1115,  1112,     0,     0,     0,     0,     0,
    2216,     0,     0,  2223,  2225,  2035,  1891,  1891,     0,   629,
       0,   690,  1151,     0,     0,   807,     0,     0,     0,  1025,
       0,     0,  1050,   795,   798,   967,   966,   970,     0,   969,
     829,   978,     0,  1060,   849,   874,     0,   851,   904,   905,
     906,   838,   901,   903,   985,  1181,   931,   940,   942,   941,
     932,   930,     0,     0,     0,     0,     0,     0,   947,   922,
    2257,   948,  2258,  2254,     0,     0,   943,   944,   945,   933,
     929,   934,     0,     0,   935,     0,   917,     0,     0,   927,
     920,   921,   831,   835,   836,   822,     0,   823,   824,     0,
    1194,  1184,  1168,  1230,     0,  3211,  3209,  3213,   361,   349,
       0,     0,  1131,  1133,     0,     0,  1134,     0,     0,  1300,
     182,     0,   191,     0,     0,   196,     0,     0,   187,     0,
     275,     0,  1014,   643,   642,   618,     0,  1020,   327,   328,
     330,     0,     0,   319,  3216,     0,   313,   310,     0,     0,
    3160,     0,   961,  3158,   413,   411,   412,     0,   406,   408,
       0,     0,  1544,   909,   907,   910,   908,   896,     0,     0,
       0,  1547,  1548,  1574,     0,  1634,  1572,     0,  1523,  1600,
       0,     0,  1579,  1554,  1557,  1555,  1560,  1561,     0,     0,
       0,     0,  1675,  1659,  1660,     0,  1809,  1524,  1802,     0,
       0,  1432,  2158,  2156,  3073,  3076,     0,     0,  2951,  1900,
    2023,  1873,  1977,     0,     0,  2028,  2030,  1993,  1996,  1997,
    2292,  2013,  2005,  2947,     0,  1782,  1761,  1760,  1753,     0,
    1755,     0,  1810,  1810,  1819,  1887,     0,  1883,     0,  1878,
    1879,  1370,  1266,     0,     0,  1253,   682,     0,   672,   686,
     664,  3201,  3021,  1106,  1111,  2220,  2221,     0,  2218,     0,
       0,  2224,  1911,  1911,     0,  1014,     0,   710,   688,  1020,
       0,  1049,  1025,  1896,     0,  2011,  2011,  2011,   801,  1026,
    1027,  1029,  1030,  1033,  1052,     0,   977,   975,   971,     0,
     971,   902,     0,   989,  2256,  2255,     0,   924,   926,   937,
     938,   931,   818,     0,     0,  1163,  1169,     0,   347,   352,
     363,   364,  1075,  3147,  3145,     0,   184,   193,   194,   198,
       0,     0,   288,     0,  1211,  1015,  1016,  1018,     0,  1211,
    1021,  1022,  1024,     0,     0,   315,  1025,  3157,   358,     0,
     402,   404,  3166,   410,     0,     0,     0,  1503,     0,  1709,
       0,  1602,  1604,   981,     0,  1672,     0,  1696,  1695,  1697,
    1668,     0,  1645,     0,  1806,  1805,  3082,  3074,  3077,  2932,
    1978,  2022,     0,  1772,     0,     0,     0,     0,     0,     0,
       0,  1884,     0,     0,  1268,     0,   308,     0,     0,     0,
       0,  3198,  3199,  2219,  2227,  2226,     0,  2033,  2025,  2924,
     802,     0,     0,  2011,     0,     0,  2011,  2011,  2011,  2011,
     705,   711,   713,     0,   803,     0,     0,   804,  1055,  1032,
       0,     0,     0,  1028,  1896,   854,  1061,   855,     0,   988,
       0,   993,   923,     0,  1195,  1162,   354,  1135,   515,     0,
    3146,  1298,     0,     0,     0,   334,  1017,   323,   335,  1023,
       0,  1211,   350,   359,     0,   383,   407,   961,     0,   894,
     895,  1521,  1588,  1674,     0,     0,     0,     0,  1690,  1677,
    1678,     0,     0,  2953,     0,  3083,     0,   953,     0,  1857,
    1754,  1756,     0,  1811,     0,  1823,     0,  1881,  1880,  1270,
    1254,     0,     0,  2011,     0,  3202,  1912,   699,   692,   695,
       0,     0,  2011,  2011,     0,     0,     0,     0,     0,   689,
     712,  2011,   805,  1048,  1031,  1034,  1035,  1051,   986,     0,
     990,   991,   992,     0,   984,     0,     0,   356,   541,  2421,
     527,   513,     0,     0,  2609,   517,   365,   368,   366,  2026,
     367,   373,     0,   374,   375,   376,   377,   378,   369,   539,
     540,   372,   370,   371,     0,  2313,     0,  2314,  2374,  2373,
    2375,     0,     0,     0,   188,     0,  1019,   329,   333,   362,
     961,  3167,   409,  3153,     0,     0,     0,  1685,     0,     0,
       0,  1683,     0,  1679,     0,  1676,  1681,  1680,     0,  2024,
    2228,  2593,     0,  1792,     0,  1790,  1813,  1812,     0,     0,
     683,     0,     0,  3203,   699,     0,   697,     0,   693,   691,
     694,   721,     0,     0,   717,   718,   716,   714,     0,     0,
     707,     0,   987,     0,     0,   819,   355,     0,   348,     0,
       0,   526,   529,     0,     0,   532,   522,   521,   523,     0,
     516,   515,   515,   569,   520,   566,   565,   558,     0,  3148,
       0,     0,     0,  3161,   393,   392,   384,     0,   515,  3151,
    3152,     0,  3155,  1504,     0,  1686,     0,  1688,  1687,     0,
       0,  1692,     0,  1693,  2836,  3081,  3080,  3078,     0,  2214,
       0,  1791,     0,     0,   961,  1817,  1816,     0,   677,   683,
    3201,   696,     0,   703,     0,   701,   704,   719,   720,   710,
     706,     0,   715,   999,     0,   998,     0,   995,   994,   821,
     820,   915,   357,   542,   553,   556,   548,   528,     0,     0,
       0,   518,   515,     0,   502,   500,   501,   507,   508,   509,
     510,   511,   512,   503,   506,   504,   505,   515,     0,   418,
       0,     0,  3149,  3150,   189,   364,   383,   394,  3168,  3154,
     515,     0,  1684,  1682,  1691,  1694,  3079,     0,  2222,     0,
    1793,  1794,  1797,   684,   678,  3200,   698,   700,     0,   709,
     708,  1001,  1002,  1000,     0,     0,   816,     0,     0,   515,
     549,     0,   524,     0,   533,     0,     0,   416,   572,   570,
     414,   560,   560,   346,  3162,  3156,  1689,     0,  2230,  1796,
    1798,     0,   702,     0,     0,   550,   556,   546,   554,   515,
       0,     0,   514,     0,   568,   417,     0,     0,     0,   515,
       0,   559,   561,   563,   515,  2229,     0,  2234,     0,   997,
     996,     0,   547,     0,     0,   545,   525,   530,   515,   573,
     515,   427,   426,     0,     0,   496,   567,     0,   419,  3163,
       0,     0,  2241,  1799,   551,     0,   515,     0,   515,     0,
     515,     0,     0,   961,     0,     0,   415,  2232,  2233,  2231,
    2236,     0,     0,  2238,  2239,     0,  2202,  1803,  1795,  1801,
       0,   543,   515,   531,   536,     0,     0,   422,   497,   498,
       0,   424,  2240,  2235,     0,  2242,  2244,     0,  1804,     0,
     515,   515,   532,   535,   574,   571,     0,     0,   420,   421,
     432,   431,     0,  2237,     0,     0,     0,   515,   515,   537,
     440,   438,   515,   428,   436,   430,     0,   437,   499,   425,
    2243,  2245,     0,   423,   439,   429
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4344, -4344, -4344, -4344, -4344, -4344,     4, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344,  1571, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344,  1823,  1834, -4344, -4213, -4344, -4344,  1831,
   -4344,   425,  1835, -4344,   424, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344,  1819, -4344,   422, -4344, -4344, -4344, -4344, -4344, -4344,
   -2880, -1595, -4344, -4344, -4344, -4344, -4344, -4344,  1186, -4344,
   -4344,   420,  1392,  3942, -4344,   411, -4344,   110, -4344, -4344,
   -4344, -4063,    -5,  -182, -4344, -4344,    20,  3428,  -180, -3836,
   -4344, -4344, -4344, -4344, -4344, -4344,   416, -4344, -4344,   225,
   -4344, -4344, -1926, -4344, -4344, -4344, -4344, -4344, -4344,  -363,
    -320,  2715, -4344, -4344, -4344,  5145, -4344,  4101, -4344, -2793,
    2218, -4344, -4344, -4344, -4344, -4344,  2277, -2736, -4344, -4344,
   -4344,  1052, -4344, -4344, -4344,  -869,   138, -4344,   139, -4344,
     141, -4344,   143, -4344,   144,   147,   148,   151, -4344,   155,
   -4344, -4344,  -318, -4344, -4344, -4344, -4344,   157, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344,  -219, -4344, -4344,  -124, -4344,
   -4344,  -214,   163, -4344,  -198,   164, -4344,   165, -4344,  -145,
   -4344,  -142, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344,  1222,  2746,  4026,  2748, -2804, -4344,  1642, -4344,
   -4344,   794, -4344, -4344,   945, -1547, -4344,  2529, -2547, -2544,
   -1146, -2542, -4344, -4344, -4344, -3195, -3180, -1388, -4344, -1391,
   -2528, -2516, -2380,   775,  1801,  1803,  1800,     8, -4344,  1001,
     372, -4344, -4344, -4344, -3543,   -68, -4344, -3877,   599, -4344,
   -4344, -4344, -4344, -3034, -4344, -4344,  -143, -4344, -4344,   -78,
     -75, -4344,   215, -4344,  2794, -4344, -4344, -2454,  -550,  2682,
   -4344, -2040, -1776, -2355, -1629, -1627, -4344, -4344, -4344,  1235,
    1824,   950, -4344,   951, -1657,   899, -3708, -4344, -4344,  -588,
   -3012, -4344, -4344, -4249, -4344, -2545,  1427, -4344, -4344, -2529,
   -4344, -4344, -4344,  1395,  1398, -3340,  2070, -1501, -4344,   587,
     582, -1551, -4344,   -71, -4344,   904, -4344, -4344, -3873, -4344,
     -33, -2655,   168, -4344, -4344, -3140, -3688, -1621, -4344, -4344,
   -3578, -2410,  1724, -4344, -4344,   231, -4344, -4344, -4344, -4344,
   -3347, -4344, -1671, -2243, -4344, -4344,   382, -4344,   323,   380,
   -4344,   320, -4334, -4344,   373,  -951,  2072, -4344,  3359, -3112,
   -2512, -4344, -4228, -3581,   624, -2316, -4344,   947, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -1574, -4344, -4344,   826,  1276,
   -4344,  2170,  1870, -4344,  2184, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,  2717, -4344,   567, -2103,  2722, -4344,
    2724,   549, -2541, -1134, -4344, -1129, -4344, -1638,  3561, -2473,
   -3010, -4344, -4344, -4344, -4344, -4344,  3599, -4344, -4344, -4344,
    3052, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  2952, -4344,
   -4344, -4344, -4344,  4231, -4344,  2949, -4344, -4344, -4344, -4344,
   -4344,  1406, -4344,  2337, -4344, -4344, -4344, -4344, -4344,  2068,
    3418, -4344, -4344,   103, -4344, -4344, -4344, -4344,  2344, -4344,
   -4344,  3438,  1975, -4344, -4344,  1697,  2357, -1794,  1150, -1177,
    5246,    13,    85,     5,   991, -4344,  3062, -4344, -4344, -2281,
   -4344, -4344, -4344, -4344,  4293, -1049, -1125, -4344, -4344,  2889,
   -4344,  4292,  3954,  3190,   698,  4532, -4344, -1299, -4344,   -19,
   -4344, -4344,  -885, -4344, -4344, -4344,  -691,   843, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,  2443,
   -4344, -4344, -4344,  3263,  2483, -4344, -4344, -2737, -4344, -2478,
   -1962, -4344, -2537,   322, -4344, -4344, -4344, -4344, -4344, -4344,
     342, -4344,    39, -4344, -4344, -4344, -2091, -4344, -4344, -4344,
   -4344, -4344,  -963, -2593, -1157, -1164, -4344,  4043, -4344, -4344,
   -4344, -3260, -4344, -2745, -4344, -4344, -4344, -4344, -3110, -2864,
   -4344,  -916,  2346,  2348,  2349,  2350, -4344, -4344,   -50, -4344,
      25, -4344,  -136, -4344,  -161, -4343, -4297,   486, -4344,   753,
   -4344, -4344, -4344,   236,  1430,   241, -1974, -2460, -1259,  1809,
   -4344, -4344, -2143,  4091, -2150, -2098,  1128,     3,  4235,  3715,
   -3171, -4344,   754, -4344,   348,  1685,   543, -4344, -4344,  1469,
   -1149,  -111,   379, -3160, -4344, -1058,   -87, -4344, -2378,   475,
   -2429, -2747, -2271, -2626, -2388, -4344, -4344,  2925,     9, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344,  -528,   284,  -651,
    5344,  3224, -4344,  2479,  4182,  4185, -4344, -4344,  3893,  1758,
    1762, -4344, -3787, -2884, -4344, -4344, -4344, -1017,  2962,   806,
    3744,  1196,  1767, -3007,   827, -4113,  4194, -4344, -3602,   821,
    4215,  4243, -3408,  3676, -4344, -4344, -4344, -4344, -4344,  3050,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -4344,  4389,   -36, -1410, -4344,
   -4344, -4344,  1582,  3785,  3053, -1008, -4344, -4344, -4344, -4344,
    4242, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
    2485,  2098, -4344, -4344, -4344, -4344,  3163, -4344, -4344, -4344,
    3168, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344,  1780,    97, -4344,  1132,    22, -4344,
     769, -4344, -4344, -4344, -4344, -4344,  -115, -4344, -4344,  -131,
   -2780, -1165, -1153,   887,  1031, -1853, -2230, -2090, -3239, -1219,
   -4344, -4344,   845, -3416, -3014,   553,  -772, -1324, -1311,   498,
    2281,  3648, -1579, -4344,  4595,  -899, -1675, -2147,   793,  4044,
      -6, -4344, -2829, -4344,  -209,   130,  2075,   -43,  3140, -3713,
   -4344,    12,    23, -4344,   490,     2, -4344, -4344,   159, -4344,
   -4344, -4344,   133, -4344, -4344, -4344, -4344,  3880, -4344,  2388,
    5380, -4344, -4344, -4344,  3134,  5386,  -810,  3884,  3164, -4344,
    3165, -4344, -4344, -4344, -2135, -4344, -4344,   161, -4344,  2487,
   -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344, -4344,
   -4344, -4344, -4344, -4344, -4344, -1356,  4427,  5397,  3978, -4344,
   -4344,  2341, -4344, -2069, -1403, -1197, -1544, -4344,  4295,  2723,
    2736, -2249, -1098, -1091,  -944, -1121,  -994,  -976, -4344,  3756,
   -1520, -4344, -4344,  1985, -4344,  2728,   625, -4344, -4344,   464,
   -4344, -4344,  1617,  4444,  3946, -4344, -4344, -4344, -4344, -4344,
    4284, -4344,   -18,    -1, -4344,  -396, -4344, -4344, -4344,   109,
    5440,  5441, -4344, -4344,   220, -4344,  -925, -4344, -4344, -4344,
   -4344, -4344,  4257, -4344, -4344,  4282, -4344, -4344, -4344, -4344,
    4287, -4344, -4344, -4344, -4344, -4344, -4344,  2300, -4344, -4344,
   -4344, -4344, -4344, -4344,  -677, -4344, -4344, -4344,   167, -4344,
    1448, -4344,  1066, -4344,  1006,   695,  1559, -2486
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1139,  2377,    67,    68,    69,    70,    71,
    2212,    72,  1432,  2155,  2897,  2898,    73,   973,   732,    74,
    1877,  1876,  2596,  2597,  3915,  4410,  4411,  3924,  4425,  3918,
    4414,  4415,  3921,  4419,  4420,  2662,  2663,  2664,  2665,  2666,
    2667,  2668,  2669,  2670,  2671,  2672,  2673,  2674,  2675,  2676,
    2677,  2678,  2679,  2680,  2681,  2682,  2683,  2684,  2685,  2686,
    2687,  2688,  4426,  4427,  3931,  3937,  3942,  3964,  2689,  2690,
    2691,  2333,    75,    76,    77,    78,  2698,    79,  3991,  2720,
      80,  3168,  3169,  1919,  4017,  4400,  5056,  4404,  5147,  5248,
    5072,  3316,  4736,  5057,  5058,  5156,  2729,  2460,  5191,  3154,
    5276,  3155,    81,  1213,  4459,  4460,  4461,  4777,  4778,  4779,
    4780,  5439,  5342,  5410,  5440,  5526,  5532,  5463,  5542,  5543,
    5544,  5530,  1500,  5545,    82,  1005,  1006,  1502,  2240,  2911,
    2241,    83,    84,   935,  2174,  2175,  2176,  2177,  3597,  2912,
    3592,  3593,  4541,  5464,  5528,  5343,  5344,  5255,  5345,  5159,
    5346,  5259,  5347,  5162,  5348,  5349,  5350,  5351,  5431,  5352,
    5254,  5456,  5339,  5340,  5433,  5504,  5523,  5353,  5169,  5249,
    5397,  5170,  5250,  5426,  5335,  5427,  5451,  5500,  5336,  5398,
    5454,  5401,  5354,  5360,  5441,  5355,  5361,  5356,  5174,  5266,
    5359,  5264,  5358,  5437,  5436,  5479,  3445,  4028,  1905,  2707,
    3393,  3394,  3395,  3171,  3172,  1770,  2885,  2886,  2887,  3978,
    3979,  3980,  3771,  3772,  3773,  2470,  3311,  3160,  1771,  1772,
    1838,  1774,  3399,  3982,  3983,  3400,  3401,  1775,  3403,  1776,
    1777,  1778,  3177,  3427,  3428,  3429,  3430,  3431,  2371,  2372,
    3714,  3069,  3711,  4614,  4230,  5308,  4237,  4287,  4288,  4887,
    5229,  5118,  5225,  5119,  5227,  5314,  5315,  5129,  5239,  5240,
    5030,  5031,  5032,  2453,  2454,  3379,  3380,  2455,  1224,  1839,
    3432,  2480,  1840,  3270,  1841,  1842,  2458,  3285,  3257,  4023,
    3803,  3804,  3805,  4337,  3806,  3200,  2488,  3796,  3797,  4355,
    3853,  4708,  5331,  3854,  3855,  3856,  3857,  3858,  3859,  3860,
    4045,  3861,  4046,  4041,  4042,  4039,  1262,  4671,  4672,  4673,
    4035,  4036,  4371,  4356,  4357,  4358,  4680,  4699,   880,  4689,
    4313,  1518,  3117,  1541,  1542,  3006,  2259,  1843,  4314,  4315,
    4316,  4365,  4108,  4808,  4360,  4338,  4913,  5048,  5051,  5144,
    5327,  3201,  1869,  3193,  1610,   752,  4944,  4945,  4946,  4949,
    4950,  4951,  4898,  4899,  4900,  4901,  3202,  2724,  4902,  4903,
    3419,  4890,  4295,  4296,  4297,  3203,  3562,  4662,    85,    86,
    1748,    87,  1757,    88,  1750,    89,  1862,  1205,    90,  2572,
      91,    92,    93,    94,    95,  2383,    96,    97,  3745,  3110,
    3111,  3112,  2415,  3104,  3105,  1144,  3317,  3906,  4932,  1186,
    1844,  1845,  2566,  1846,  1847,  4925,  1848,  3231,  1849,  1850,
    1851,  1852,  3578,  3579,  3208,  3580,  3260,  2490,  1469,  2892,
    4383,  2542,    98,    99,  1155,  1156,  1157,  1158,  1159,  1160,
    1084,   100,   101,  2344,  5006,   102,  1618,  1619,  1620,  3699,
    4228,  4606,  4865,  1623,  1624,  1625,  3052,  3697,   103,  1881,
     104,  2963,  2964,  2965,   105,  4739,  2578,   106,   107,  1888,
    1889,  1890,   108,   238,   109,  1488,  1486,  2217,  2218,   110,
    1209,  1210,  2580,   111,  2946,  2947,  1870,  1871,  4161,   112,
     113,  3434,   115,   881,   117,   118,  2251,  2252,  2987,  2988,
     119,   120,  1022,  1023,  1024,  1164,  1165,  1697,  2424,  2425,
    2426,   882,   883,  1372,  1259,  1872,   885,   886,  2108,   887,
    1373,  1374,  4362,   888,  1385,  2096,   889,  4054,   890,   891,
    4125,   892,   893,   894,  4077,  4078,  4493,  2128,  2129,  2130,
     895,   896,   897,  2839,  2062,  2063,  4119,  3549,  4515,  3449,
    3450,  3543,  4858,  3545,  4113,  4114,  4510,  4812,  4980,  5088,
    5197,  5090,  5198,  5205,  4981,   898,   899,  1361,  1993,  4070,
    3497,  4482,  1938,  3482,  1873,  1874,  1284,  1285,  1250,  2745,
    1944,  2989,  4194,  2990,  3660,  3661,  3662,  4205,  4201,  2967,
    2968,  2991,  2992,  2993,  2994,  2995,  2996,  2997,  4995,  5212,
    5213,  5421,  4520,  5498,  4521,  4522,  4523,  4999,  4585,  4586,
    4587,  4588,  4589,  3325,  3326,  3327,  4167,  3232,  1983,  1984,
    1991,  2192,  2193,  1939,  2941,  1556,  4214,  1136,  1111,  1112,
    1636,  2354,  4595,  4859,  4860,  3666,  4591,  4857,  3266,  3267,
    1169,  1173,  2434,  3122,  3123,  1571,  1572,  1717,  1718,  5017,
    3271,  3141,  3220,  3178,  3142,  3143,  1701,  1702,  1166,  1703,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,  2906,  2445,  1202,
     753,  2143,  2144,  2145,   139,   140,   978,   999,  1491,  3629,
    3630,  4173,  3631,  3436,  3633,  4179,  1108,  2471,  2472,  4180,
    1109,  2349,  2350,  2351,  4550,  4552,   141,   142,  4169,  4170,
    1000,   143,  3133,  1729,  1730,   144,  1101,  1594,  1595,  1596,
    2328,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,  1569,  1085,  1779,  1575,  1087,
    1088,  1089,  1576,  2301,  3034,  1557,   189,   190,  1741,   191,
    1182,  1183,  1742,   192,  1433,  2168,  3590,  4141,  4526,  2169,
    2170,  2907,   193,  1002,  1497,  1493,  1498,  2224,  2225,  2223,
    2972,  2970,   194,   992,  1484,  2955,   195,   983,   196,   197,
     987,  2205,  1477,  4162,  3437,  3749,  4263,  4264,  4266,  4633,
    4634,  5299,  5447,  5489,  5472,  5492,  5493,  5496,  5515,  5516,
     900,  1639,   901,  4690,  4691,   902,   903,   904,   905,   906,
     907,  4478,  4174,   908,  2435,  4592,   909,  4171,   910,  2998,
    2446,   722,  4421,  4422,  1145,  1640,  2428,  2264,  4246,  1375,
    1123,   963,  5176,  1042,  1147,  1533,  1148,  2148,  1534,  2925,
     724,   725,   726,  5177,   727,   728,   967,  1047,   729,   198,
    1048,   199,  2273,   200,  3679,  3680,  1547,  1551,  2288,  2289,
    2290,  1090,  2079,  2282,  1548,  2291,  1051,  1526,  1527,  2271,
    1528,  2269,  1529,  3015,  2299,   201,  1479,   735,  2208,  2209,
    3616,   202,  1105,   203,   204,   205,  1194,   206,  2197,  2939,
    2940,   207,  2243,   208,  2179,  2188,  1436,   969,   970,  2928,
    3099,  2410,  2411,  2926,  2149,  1535,  2397,  1680,  1669,  1908,
    2710,  2711,  2712,  2713,  3083,  2715,  2716,  2717,  3411,  1150,
    1672,  1909,  1151,  1447,  2182,  1690,  4546,  4146,  5095,  4828,
     209,   239,   738,  1222,  1895,  2248,   210,   211,   212,   213,
    1712,   913,  2999,   914,  1025,  1238,   754,  1928,  1920,   232,
     233,   234,   757,   758,   235,  1860,  1861,  4405,  4934,  5060,
    5281,  5282,  1922,  5370,  1923,  1924,  4018,  4959,  5366,  5444,
    1925,  3442,  4464,  5075,  5278,   214,  1645,  1641,  1121,  2365,
    2359,  2361,   215,   216,  1472,   217,   218,  5011,  5012,  4005,
    2571,  3897,  3898,  4394,  3314,  3902,  2894,  3187
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     723,  1411,  1406,   121,  1170,   116,  1736,  2043,  1086,   912,
    1040,  1083,   931,   114,  1519,  1523,   972,  1197,  1719,  1743,
    2044,  1998,  1600,   966,  2429,   991,   721,  1723,  1685,  1174,
    1286,  2346,  1007,  2142,  1552,  1012,  2141,  1910,  1122,  1706,
    1007,   966,  1128,  1099,   965,  1046,  1670,  1106,  3700,  1113,
    1567,  1682,  1773,  1671,  1149,  1043,  3246,  2189,  1683,  1129,
    3125,  3126,   965,  2561,  2950,  1853,  1044,  1126,  3557,  1135,
    1854,  3229,  1245,  3296,  3297,  1601,  2586,  1134,  3387,  3608,
    3241,  2913,  2914,  3632,  3179,  1660,  2095,  3179,  3179,  1947,
    1948,  1146,  2835,  2836,  3485,  3183,  3184,  2384,  3486,  2942,
    3866,  3000,  2245,  3552,  2884,  2845,  2846,  2847,  3886,  2489,
    3750,  1713,  2416,  2418,  2419,  1722,  1986,  1708,  2000,  2456,
    3289,  2457,   932,  2487,  3291,  1175,  1177,  2459,  2065,  2518,
    2013,  2014,  2015,   990,  3663,  3969,  2017,  4050,   996,  2399,
    3082,  2400,  2402,  2403,  2495,  3090,  4354,  2541,  2499,  3907,
    2246,   964,  3029,  2942,  2389,  1686,  4273,  2392,  3893,  2394,
    3396,  3487,  2519,  3397,  4233,  3398,  4359,  3190,  3134,   964,
     736,  3696,  2321,  1687,  2531,  2053,  3591,  2980,  4818,  3405,
     968,  1353,  1354,  3638,  1355,  1099,  4378,  4379,  3984,  2331,
     989,  3406,  3286,  3287,  2064,   995,  2334,  1407,   968,  1233,
    1234,  3480,  2337,  3985,  4417,  1684,  1176,  1218,  1220,  3480,
    4747,  3420,  4175,  4772,  1187,  2474,   723,  3481,  3120,   723,
    1146,  1198,  1099,  4549,  4819,  3481,  1463,  3221,  1365,  1366,
    2890,   759,  2151,  3076,  4387,  3077,  1099,  2718, -2933,  1549,
    3646,  4363,  1189,  3195,  3381,  1196,  1365,  1366,  3091,  4319,
    4323,  3093,  3883,  4324,  3094,  1408,  3258,  3581,  3262,  3263,
    2191,  3451,  3452,  3453,  1416,  1417,  1418,  1365,  1366,  1421,
    1422,  4333,  2191,  1425,  3678,  1427,  1428,  1429,  3489, -1080,
    1365,  1366, -2180,  1940,  1941,  1942,  1365,  1366,  3106,  3743,
    1408,  1365,  1366,  1505,  1952,  3064,  2576,  3544,  1408,  3130,
    1221, -1972,  4622,  3505,  -739,  2960,  1864,  3507,  2073,  1365,
    1366,  3066,  2827,  1921,  1929,  2256,  3179,  2953,  4984,  2250,
    4325,  3709, -2342,  3515,  3516,  2006,  1161,  3121,  2010,  3522,
    1878,  1365,  1366,  1365,  1366,  1454,  2332,  4732,  1896,  1365,
    1366,  4019,  1229,  3634,  1206,  3534,  3535,  2027,  2028,  4272,
    1492,  2032,  1365,  1366,  3541,  2380,  1201,  2705, -2933,  4611,
    1239,  3741,  3742,  -600,  1365,  1366,  1578,  3675,  1162,  2046,
    2047,  3653,  3559,  1796,  2051,  2052,  2332,  1365,  1366,  5228,
    3547,  2380,  1365,  1366,  1451,  4559,  4139,  1171,  1796,  2072,
    1412,  4193,  4197,  -739,  4429, -1859, -2934,  1796, -2121,  1207,
    3539,  4208,  4209,  2404,  -726, -2112,  3934,  1955,  3242,  4435,
    1365,  1366,  3788,  1611,  4244,  1365,  1366,  1163,  4891, -1065,
    3252,  1494,  3585,  1365,  1366,  1052,  1629,   240,  -727,  3795,
    1107,  1365,  1366,  1365,  1366,  3483,  2746,  4832,  1781,  4977,
    2747,  1365,  1366,  2266,  -585,  3734,  2819,  4489,   979,  3867,
    1161,  3292,  1891,  2395,  1796,  1387,  1745,  1102, -2842,  4472,
    3408,  3747,  4090,  2363,   240,  4020,  3004,  5009,  -627,  1161,
    4688,  1096,  2709,  1506,  1161,  4317,  1475,  1365,  1366,  1167,
    2340,  3323,  4855,  1555,  1365,  1366,  5290,  3873,  4003,  3120,
    3423,  4978,  1524,  4211,  -962,  3179,  2092,  1962,  1167,  1365,
    1366,   730,  1162,  4398,  1621,  4331,  4332,  3895,  1613,  3654,
    2804,  1286,  3422,  2125,  2126,  1511, -2934,  4774,  2191,   240,
     971,  2283,  3070,  1365,  1366,  4656,  1162,  4775,  4936,  3655,
    1365,  1366,  2287,  1045,  1228,  1706,   236,   737,  4007,  1365,
    1366,  1163,  3656,  4813, -1859,  3012,  4867,  1098,  4206,  4994,
    1365,  1366,  4548,  1130,  1365,  1366,  -616,  2961,  5037,  1178,
    1163,  3537,  1893,  1054,  1027,  1163,  3013,  2316,  1573,  3071,
    4894,  2319,  1409,   993,  1365,  1366,  2323,  5243,  1365,  1366,
    2743,  3179,  1879,  1706,  3875,  4004,   933,   242,  3538,  1614,
    1464,  1622,  1131,  4868,  2405,  5291,  1368,   974,  3121,  1369,
    3938,  2227,  3943,  3998,  5399,  2338,  2339,  1409,  3014,  1365,
    1366,  1365,  1366,  3774,  1368,  1409,  1495,  1369,  1365,  1366,
    1574,  1324,  5071,  4814,   237,  3657,  3903,  1365,  1366,  1365,
    1366,  1365,  1366,  2878,  3685,  1368,  1365,  1366,  1369,  2879,
    4311,  1894,   731,  3715,  3894,   984,  4399,  2891,  1368,  4354,
   -2122,  1369,  4021, -1859,  1368,  2302,  4856,  1369,  1390,  1368,
    2070,  3652,  1369, -2342,  5399,  2442,  2443,  2211,  1362,  1525,
    4776,  3729,  3730,  3731,  3732,  2364,  -962,  1368,  1583,  1863,
    1369,  1678,  1637, -1859,  1476,  2438,  3107,  1913,  3010,  1184,
    3011,  4979,  -739,  1746,  1168,  2452,  2275,  4615,  2101,  1368,
     980,  4418,  1369,  4640,  3645,  1482,  2267,  1368,  4644,  1103,
    1369,  1809,  4647,  1172,  3425,  5077, -2933,  4990,  2124,  1747,
    1368,  1365,  1366,  1369,  3632,  2396,  1199,  5062,  5063,  1099,
    1099,  3484,  1368,  4392,  4660,  1369,  3781,  1146,  3496,  1231,
    1211,  2962,  4361,  2341,  4664,  1368,  2142,  3658,  1369,  2141,
    1368,  5292,  4667,  1369,  1331,  4895,  4375,  4490,  3988,  2888,
    2577,  2452,  3683,  1892,  1466,  3735,   240,  4022,  1270,   985,
    3935,  3936,  4307, -1859,  4837,  1577,  3879,  1093,  1368,  4374,
    2153,  1369,  1413,  1368,  4308,  1129,  1369,  2755,  4713,  3605,
    2199,  1368,  -810,  1078,  1369,  4303,  1287,  2890,  4309,  1368,
    3872,  1368,  1369,  1325,  1369,  3868,  1365,  1366,  5133,  1368,
    1054,  1027,  1369,  3192,  4120,  3192,  4122,  3890,  3789,  3659,
    5010,  4917,  1520,  1230,  2456,  5190,  2457,  1452,  4140,  2768,
    1538,  1543,  2459,  2479,  1987,  1162,  3981,  1988,  1579,  3078,
    3079,  2942,  3548,  1956,  1933,  1368,  3583,  4927,  1369,  3754,
    1570,  3667,  1368,  1455,  4985,  1369,  3664,  1371,  4376,  1496,
    5224,  4272,  3672,  1507,  1638,  1171,  1240,  1368,  2954,  1865,
    1369,  1146,  4765,  1363, -2934,  1371,  2753,  3787,  1376,  3790,
    4326,  1358,  3555,  3676, -1859,  2913,  2914, -2121,  4268,  1357,
    2408,  1368, -2933, -1859,  1369,  5073,  1371, -1859,  1368,  4623,
    2150,  1369,  1612,  2942,  1365,  1366,  4195,  1368,  1461,  1371,
    1369,  2851,  1419,  3928,  3131,  1371,  3933,  1424,  1368,  1661,
    1371,  1369,  1368,  3945,  2719,  1369,  3974,  4571,  3950,  3951,
    3952,  3953,  3954, -1080,  1364,  2479, -2180,  2575,  1371,  3961,
    1659,  1880,  1368,  2393,  3968,  1369,  1368,  3971,  1706,  1369,
    3433,  1487,  2210,  1704,  3338, -1972,  3794,  2479,  2479,  3744,
    1371,  2220,  1371,  2714,  1880,  5304,  1880,  1146,  1371,  4762,
    4031,  1465,  5271,  1470,  2736, -2342,  1167,  1368,  1241,  1368,
    1369,  1371,  1369,    42,  1755,  3752,  1368,  1485,  1146,  1369,
    1880,  4255,  4123,  1371,  3350,  1368,  3179,  1368,  1369,  1368,
    1369,  3339,  1369,  4651,  1368,  4112,  1371,  1369,  2733,  2305,
    4060,  1371,  4061,  4034,  4557,  4570,   912,  -600,   934,  2479,
    1081,  3108,  3109,  1365,  1366,  1146,  4079,  2857,  4080,  3065,
    4417,  2848,  3904,  1146,  1146,  4129,  2074,  1179,   966,  1371,
    2075,  4285,  2780,  4094,  1371,  3067,  2784,  1410,  1174, -1859,
   -2934,  1046,  1371,  1146,  4483,  5244,    49,  2820,  -726,   965,
    1371,  1043,  1371,  2744,  1659,  1170,  1724,  3351,  2806,  2456,
    1371,  2457,  1044, -1065,  2754,  3018,  4091,  2459,  5293,  4845,
    4126,  2074,  -727,  2375,  4961,  2772,  -405,  5334,  2375,  1368,
    1725,  1431,  1369,  4574,  4575,  1099,  1628,  4307,  -585,  2828,
    2479,  3686,  4657,  2829,  1113,  1914,  1371,  3973,  2849,  4308,
      54,  3869, -2842,  1371,  2479,  1402,  1403,  1404,  1405,  1365,
    1366,  2439,  -627,  4309,  2479,  2805,  3196,    55,  1371,  2808,
    5499, -1859,  1653,  2809,  1663,  1054,  1027,  4894,  4652, -2122,
    1357,  1177,  2735,  1408,  1175,  1749,  4175,  5425,  3864,  3865,
    1584,  1480,  1371,  1554,  3611,  1326,  1146,  1489,  2734,  1371,
    4393,  3407,  3884,  2588,  4168,  1720,  5487,  2825,  1371,  4710,
    3887,  2826,  3564,  1707,  1368,  3891,  3565,  1369,  1744,  1371,
     986,   988,  1146,  1371,  1751,  1752,   121,  1146,   116,  1756,
    1907,  1172,  3059,  3086,  1855,   968,   114,  1857,   723,  2123,
    4676,  1099,  5519,  1371,  2759,  2748,  4202,  1371,  1875,  3268,
    -616,  5279,  2479,  2139,  2891,  5483,  1410,  2760,  1897,  1898,
    1899,  1176,  2044,  1902,  1858,  2765,  1906,  1146,  3758,  1911,
    1912,  2778,  1710,  1219,  1219,  2770,   966,  3984,  1371,  4203,
    1371,  4896,  4897,  3939,  3009,  4361,  1152,  1371,  2184,  4444,
    1365,  1366,  3985,  2960,  5329,  3197,  1371,   965,  1371,  1866,
    1371,  1915,  1001,  1287,  2398,  1371,  1630,  2752,  3900,  3098,
    3040,  1174,  1368,  4229,  3612,  1369,  1688,  1287,  2771,  4025,
    1365,  1366,  2018,  3901,  1358,  1719,  1719,  1867,  4560,  4299,
    4300,  1685,  1357,  2774,  1916,  1365,  1366,  1989,  1127,  3736,
    1990,  5323,  1365,  1366,  1365,  1366,  1516, -1859,  3588,  3864,
    3865,  1365,  1366,  3038,  1682, -2999,  3404,  2786,  3441,  3402,
    2761,  1683,  4895,  3043,  1773,  2045,  3045,  4675,  1773,  3048,
    5045,  1100,  5047,  2791,  1773,  5330,  1365,  1366,  1365,  1366,
    4065,  2066,  1365,  1366,  4066,  4602,  1215,  1266,  2795,  4310,
    1371,  1365,  1366,  2704,  3997,  5275,  1365,  1366,   912,  1711,
    4503,  2084,   981,  1107,  2762,  2728,  4721,  2097,  2098,  5488,
    2100,  2102,  2796,  3416,  2103,  2104,  2105,  3635,  3636,  2109,
    2110,  2112,  2114,  2115,  2116,  2117,  2118,  1129,  4566,  5192,
    4026,  1368,  4013,   968,  1369,  1365,  1366,  1661,  3716,  4073,
    2915,  4092,  1146,  4074,  4274,  4093,  2183,  3591,  2769,  2132,
    2133,   723,  2135,  2858,  2137,   723,  1146,  2782,  1686,   723,
    2147,  1146,  1099,  2798,  2152,  2799,  2783,  1516,  2178,  2401,
    2873,   966,  5280,  1853,  1853,  1371,  1687,  2134,  1854,  1854,
    2181,  2138,  1657,  1146,  4204,  2146,  4914,  4915,  4406,  4407,
    3396,  1146,   965,  3397,  1146,  3398,  1365,  1366,  2196,  2198,
    1409,  2244,  4476,   966,  2388,  3690,  3673,  3674,  1684,  3405,
    4267,  4599,  3027,  1099,  1099,  1260,  4291,  4582,  2261,  3198,
    1549,  3406,  1099,  1099,   965,  1099,  2222,  1368,  3613,  2883,
    1369,  2430,  4613,  2142,  5209,  2185,  2141,  4428,  1146,  1146,
     733,  4186,  5273,   734,  4621,  2961, -2999,  2257,  4468,  4625,
    3480,  2787,  1555,  1917,   966,  1146,  4583,  1040,  2253,  3600,
    4210,  4711,  2311,  1153,  1459,  2450,  3481,  2561,  3192,  4144,
    2276,  4516,  3940,  1371,  2489,   965,  2396,  2320,  2284,  1045,
    3652,  4221,  3417,  4436,  1408,  1328,  4219,  3724,  1408,  3726,
    3727,  4836,  1046,  5392,   723,   723,   723,  1099,   723,  1146,
    1099,  1773,  1043,  3598,  3563,  4921,  1174,  1092,  3720,  5221,
    2317,  4183,   723,  1044,  1146,  4248,  3641,   723,  5275,  3480,
    2306,  2307,  2308,  1267,  2310,  1365,  1366,  4117,   968,  3737,
    4121,   964,  4468,  2942,  2171,  3481,  4131,  3963,  2318,  1627,
    4132,  3389,  1245,  2322,  4270,  2859,  3179,  3179,  2851,  3568,
    3569,  1516,  2373,  1512,  4442,  4443,  5382,  5324,  1368,  2065,
     968,  1369,  3640,  4354,  1689,  2895,  1859,  3614,  1113,  2355,
    2489,  2518,  1104,  4507,  3687,  3514,  3691,  3692,  2865,  4218,
    1365,  1366,  3572,  2366,  2487,  1521,  2412,  1517,  1368,  1146,
    1316,  1369,  1371, -2112,  1365,  1366,  2942,  1011,  4661,  1214,
    4991,  1365,  1366,  1368,  2519,  3199,  1369,  1146,  3135,  1707,
    1368,   968,  1368,  1369,  4310,  1369,  4469,  4838,  1216,  1368,
    1918,  4506,  1369,  1146,  4259,  2064,  1365,  1366,  1616,  2962,
    1765,  1365,  1366,  4402,  1146,  4260,  4943,  1882,  2803,  4311,
    2927,  2396,   982,  3941,  1368,  1219,  1368,  1369,  4403,  1369,
    1368,  1365,  1366,  1369,  2186,  3864,  3865,  2436,  5325,  1368,
    3422,  3574,  1369,  2447,  1368,  4701,  2440,  1369,  1146,  1460,
    3751,  1154,  4282,  5038,  3136,  3774,   997,  1162,  1365,  1366,
    5194,  5181,  5092,  1365,  1366,  2461,  2462,  1320,  1371,  5326,
    4446,  2456,  5182,  2457,  1666,  2489,  1559,  4027,  4470,  2459,
    4469,  1763,  3927,  1368,  3929,  3137,  1369,  1171,  1517,  3776,
    1365,  1366,  3775,  1513,  3946,  3947,  3948,  3949,  4815,  4145,
    4969,  1365,  1366,  3955,  3956,  3957,  3958,  3959,  3960,  4844,
    3962,  3965,  3966,  3967,  1936,  5509,  2076,   240,  3972,  5393,
    1365,  1366, -2999,  1387,  2119,  3668,  3669,  3670,  4896,  4897,
    2563,  3418,  1365,  1366,  1883,  1560,  4159,  2821,  1884,  1760,
    5261,  4250,  2860,  1555,  1368,  1365,  1366,  1369,  3738,  3739,
    1365,  1366,  1885,  3527,  4517,  2263,  3138,  3615,  2861,  1664,
    1365,  1366,  4474,  2463,  1667,  5200,  1936,  1127,  1561,  3008,
    1365,  1366,  2843,  4933,  2565,  -658,  1208,  4391,  2581,  1099,
    2187,  1409,  1365,  1366,  1765,  1409,  3254,  1078,  3540,  2077,
    2855,  4518,    42,  1093,  1099,  4696,  2889,  1761,  1167,  1371,
    1171,  4034,  2313,  3607,  5137,  3981,  1317,  3392,  1882,  4697,
    1365,  1366,  1617,  1765,  2749,  1365,  1366,  5328,  4584,  1161,
    3215,   998,  1365,  1366,  4437,  4438,  4439,  1099,  4037,  1371,
    2730,   723,   723,  2838,  1365,  1366,  4261,  3529,  3139,  2537,
     723,  1937,   733,  2888,  1371,   734,  1219,  1125,  3131,  4052,
    3423,  1371,  1125,  1371,  5140,  1365,  1366,  2731,  2732,  4432,
    1371,  4251,  5252,  4381,  2314,    49,  3255,  1094,  1365,  1366,
    1767, -2112,  1517,  1368,  4712,  2889,  1369,  4714, -2036,  1461,
    1365,  1366,  3976,  3179,  2916,  1371,  3216,  1371,  1886,  1137,
    5183,  1371,  2538,  1951,  1365,  1366,  3684,  2207,  1219,  4471,
    1371,  2564,  5262,  1321,  3689,  1371,  2219,  1219,  1668,  2221,
    1163,  1167,  3987,  1138,  4618,  3986,  3075,  1287,  2779,    54,
    4620,  4557,  2952,  4906,  1936,  1883,  1390,  4795,  1368,  1884,
    3681,  1369,  2863,  1365,  1366,  1365,  1366,  2464,  1410,  2888,
    2120,  3422,  1368,  1885,  1371,  1369,  4545,  1365,  1366,  1368,
    1763,   812,  1369,  1522,  1365,  1366,  1365,  1366,  1365,  1366,
    1045,  1078,  3179,  3179,  2842,  1763,  2121,  5200,  3256,  3007,
    4753,  4754,  1365,  1366,  1368,  1146,  4252,  1369,  2539,  1368,
    4738,  2309,  1369,  4471,  2312,  3019,  1887,  1562,  3217,  2511,
    1078,  1365,  1366,  1146,  4071,  1915,  5449,  5450,  2862,  1368,
    4519,  4698,  1369,  5226,  2078,  1371,  5230,  2866,  2750,  4072,
    2913,  2914,  2588,  1172,  4220,  1129,  4085,  4216,  4217,  1125,
    2870,  4262,  2872,  2874,  1358,  4096,  1368,  5253,  1926,  1369,
    1190,  1368,  1357,  4693,  1369,  1764,  1081,  4635,  4636,  1129,
    4382,  1376,  3977,  4637,  1767,  1191,  2794,  4517,  2523,  5097,
    1099,  2005,  4097,  1866,  1387,  5141,  4569,  2315,  1368,  3140,
    4894,  1369,  2550,  1753,  4693,  4797,  2797,  1099,  1140,  1368,
    3218,  3554,  1369,  1767,  3425,  5114, -2036,  3753,  4512,  1886,
    4513,  1867,  1765,  5263,  4518,  1099,  1287,  1146,  1368,  2942,
    2942,  1369,  2956,  2957,  3566,  2942,  3567,  1765, -2036,  2404,
    1368,  1754,  2924,  1369,  3089,  2800,  2929,  1127,  1114,  2263,
    4124,    42,  3531,  1368,  1099,  2888,  1369,  1099,  1368,  4243,
    4150,  1369,  2889,  4249,  2915,  1146,  1172,  1760,  1368,  1146,
    1146,  1369,  2122,  1563,  1371,  4001,  4919,  4920,  1368,  4361,
    3318,  1369,  1704,  1365,  1366,  1365,  1366,  1365,  1366,  1936,
    1368,  3423,  2512,  1369,  1564,  1115,  3872,  4456,    42,  4184,
    2924,  3279,  2981,  3280,  1099,  5142,  2812,   836,  1605,  1129,
    4307,  4907,  1146,  1365,  1366,  1695,  1185,  1887,  1368,  1565,
    4306,  1369,  4308,  1368,    49,  1761,  1369,  1936,  1146,  1371,
    1368,  4130,  3556,  1369,   966,  1566,  4309,   966,  5386,  4278,
    1410,  1188,  1368,  1371,  1046,  1369,  3281,  4693,  1054,  4320,
    1371,  2524,  1046,  4330,  1043,   965,  1195,  5102,   965,  3036,
    1936,  4335,  1043,  1368,  4176,  1044,  1369,  1726,  4368,  3282,
    1116,    49,  3250,  1044,  2044,  1371,  1368,  2044,    54,  1369,
    1371,  5115,  4428,  5256,  5257,  4895,  3454,  1917,  1368,  1099,
    1099,  1369,  1446,  5285,  2551,    55,  1457,  1390,  3058,  1078,
    1371,  3319,  1368,  5103,  5203,  1369,  1365,  1366,  3283,  3295,
    4247,  2722,  1365,  1366,  1078,  1129,  2009,  5287,  1365,  1366,
    3161,  1696,  1200,  2583,  3611,  3626,  3627,  1371,  5206,  1727,
    2405,  3219,  1371,  4519,  2723,  2830, -2036,  4271,  2692,  5236,
    4974,  1368,    55,  1368,  1369,  4014,  1369,  1146,  1735,  4168,
    2368,  4168,   966,  2369,  2031,  1368,  3116,  4829,  1369,  1371,
    4279,  4128,  1368,  5065,  1368,  1369,  1368,  1369,  5068,  1369,
    1371,  2726,  1606,   965,  4774,  2447,  1365,  1366,  1763,  1201,
    1368,  1192,  1767,  1369,  4775,  1146,  2563,  2071,  3595,  1371,
    2837,   968,  1720,  1720,   968,    25,  3443,  1767,  3129,  1368,
    1859,  1371,  1369,  1099,  5187,  1203,  4136,  2044,  1129,  2942,
    4135,  2840,  1193,   733,  1371,  3425,   734,  3223,  3444,  1371,
    3135,  1400,  1401,  1402,  1403,  1404,  1405,  1365,  1366,  1371,
    1674,  3185,  5104,  3162,  3239,  1204,  3063,  3191,  2406,  1371,
    2540,  4030,   221,  3204,  3206,  3209,  3210,  3211,  3212,  3213,
    4692,  1371,    42,  3222,  1918,  3233,  1394,  1395,  5234,  5235,
    1214,  4064,   994,  1764,  1728,  3233,  1127,  3243,  3244,  -658,
    3233,  2479,  3248,  3249,   219,  1146,  3251,  3233,  4668,  1371,
    5379,  4692,  3261,  3224,  1371,  3264,  3136,  2045,  5551,  2773,
    5188,  1371,  3274,  4067,   975,  3275,  1099,  4782, -2112,  3596,
    1520,  1768,  2370,  1371,  1520,  3721,  3290,  4152,  3233,   968,
    1765,  4631,  1146,  1127,  3225,  5135,  5136,  3137,  1212,  2492,
    5383,  3268,  1365,  1366,  1371,    49,  3120,  4776,  1099,  2482,
    1117,  4075,  3722,  3570,  2044,  1391,  1392,  1371,  3233,  3328,
    1161,  4677,  5442,  5442,  2493,  4632,  1866,  1217,  3194,  1371,
    4081,  1368,  1118,  1368,  1369,  1368,  1369,    42,  1369,  3214,
    3284,  1676,  4082,  1371,  4678,  3234,  3404,  1677,  4396,  3402,
     220,  5134,  3798,  1221,  1867,  4083,  4669,  1763,  3653,    54,
    4084,  1368,  3862,  3863,  1369,  3226,   976,  1223,  3138,   221,
    4086,  2489,  1162,  1119,  2881,  3265,    55,  1225,  5116,  3273,
    4089,  1880,  1371,  4679,  1371,  3163,  3277,  3278,  2407,    36,
     784,  1219,  4095,  2773,  2722,  3164,  1371,  4397,  1411,  5484,
    4670,  4803,  3165,  1371,  1226,  1371,  2408,  1371,  5473,  1219,
      49,  1163,  4597,  4598,  1227,  3121,  1907,  2723,  5485,  3433,
    4098,  1371,  3179,  5021,  4222,  4100,    42,  3586,  1607,  1608,
    1235,  1678,  4102,  1099,  1120,  1387,    42,  1099,  2943,   977,
    1371,  2948,   222,  2437,  4104,  3113,  5022,  3227,  2385,  2386,
    3139,  2387,  2441,  1146,  1368,  1609,   789,  1369,  3864,  3865,
    1368,  3438,   723,  1369,    54,  4105,  1368,  1078,  3127,  1369,
    2494,  3435,  1054,  1027,  5023,  4196,  3179,  3179,  4106,  1236,
    2878,    55,  2562,  1146,  4207,   223,  3062,  1146,  3439,  1765,
    4500,  1868,  2191,  1004,  5288,  3146,  3654,  2409,  3503,    49,
    5416,  1004,  1232,  2751,  4501,  5207,  3166,  2588,  5024,    49,
    4466,  5373,  1045,   366,  1967,   368,  3655,  3100,  3101,  4567,
    1045,   219,  3102,  3103,  1368,  1365,  1366,  1369,   224,  3656,
    1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  4327,  3223,
    1364,  4328,  3269,  4479,  4480,  4502,  1679,  1127,  1054,  1027,
    1767,  4896,  4897,    54,  1237, -2112,  2775,  4645,   801,  1386,
    2588,  2776,  1759,    54,  4793,  2003,  4796,  4310,  3546,  4495,
      55, -1859,  2066,  3046,  3047,  1368,  3309,  3310,  1369,  1585,
      55,  1760,  4802,  2044,  4257,  4258,  3584,  1831,  4321,  3851,
    1832,  1773,  1371,  4982,  1371,  1242,  1371,  4758,  4759,  4760,
    4761,  4804,  2422,  3167,  2423,  3224,  1387,  4715,  2277,  1586,
    4717,  4718,  3657,  3576,  3577,  4996,  1358,  4997,  1243,  4450,
    1971,  4133,  1371,  1146,  1357,  1298,  1244, -1859,  1246,  1706,
    1146,  3776,  5025,  1247,  3775,  4578,  3225,  2788,  1390,  1761,
     817,  2588,  4448,  1410,  4484,  1315,  2178,  1520,  1248,  4449,
    4488,  2178,    64,  4852,  4853,  3599,  1146,  1251,  1329,  1330,
    1587,   225,  1252, -1859,  1588, -1859,  1078,  1387,  3228,  1768,
    1368,  3140,  1253,  1369,  4423,  4424,  1450,  1054,  1027,  1453,
    1254,  2278,  3128, -1859,  1456,  1099,  2789,  2562, -1859,  1458,
    2588,  2790,  1099,  1099,  2792,  2588,  5215,  1255,  2588,  1762,
    1256,  1760, -1859,  3135,  3653,  1257,  3644,  3226,  4525, -1859,
    1287,  1258,  3435,  1146,  1261,  1371,  1263, -1859,  5026,  1099,
    3786,  1371,  2833,  1129,  1129,  1264,  2588,  1371,  1972, -1859,
    1358,  2920,  1975,  1265,  3658,  2921,  5027,  1040,  1357,  1976,
     226,    64, -1859,  1268,   966,   966,   966, -1859,  1269,  1767,
    1271,  1127,  3389,  4805,  3389,  4806, -1859,  4807,  3223,  1761,
    5028,  3288,  1272,  4033,  1273,   965,   965,   965,  1274,  3136,
    1520,  1146,  1046,  3056,  3740,  1388,  1275,  3057,  3864,  3865,
    3276,  3987,  1043,  4893,  3986,  1371,  3706,  1276,  3708,  3227,
    5084,  3701,  1763,  1044,  1277,  3147,  3576,  1394,  1395,  1415,
    3173,  1389,  1278,  1387,  1281,   227,  3659,   228,   366,  1390,
     368,  3148,  3320,  3488,  5521,  5522,  1282,  2588,  1648,  1589,
    1977,  5531,  3560,  1438,  3224, -1859,  2588,  3784,  4087,  3007,
    1520,  3785,  2588, -2112,  4301, -2112,  1371,  5531,  4302,  1095,
    1097,   229,  3654,  2604,  2605,  4455,  3653,  4524, -1859,  4302,
    1146,  2588,  3390,   230,  1288,  3225,  3305,  3308, -1859,  3391,
    5085,   844,  3655,  5531,  1099,  2447,  3757,  2034,  2035,  1129,
    1390,  3174,  4579,  1420,  4547,  3656,  5052,  1764,  3055,   784,
    4824,  1423,  5054,  1289,  1979,  3223,  2191,  1434,  5081,  1290,
    3768,  1391,  1392,  4663,  4558,  4561,  2279,  1590,  1426,  4562,
    1291,   968,   968,   968,  4663,  4843,  1439,  2421,  2422,  4607,
    2423,  1440,  1763,  4608,  1763,  1387,  3989,  4609,  1292,   219,
    1293,  4608,  2088,  1146,  1765,  1294,  3226,  3191,    42,  3191,
    4642,  1371,  2335,  2336,  4643,  3204,  3625,  3382,  4649,  3807,
    4740,  3386,  4650,  1078,  4741,   789,  5245, -1859,  3233,   231,
    1295,  3224,  1296,  3175,  1441,  4742,  3870,  1299,  3657,  4743,
    5029,  1591,  1760,  1300,  1301, -1859,  1302,  1393,  1394,  1395,
    1442, -1859,  4745,  1146,  1430,  1303,  4746,  1304,  4176,  3878,
    1305,  4580,  3225,  3149,  3654,  1306,  2044,  2621,  2622,  2191,
    4748,  2044,  1307,  -808,  4749,  1308,  1443,  1764,  1309,  3233,
    1310,    49,  5086,  2482,  3655,  1766,  1390,  3233,  3227,  1311,
    3228,  3233,  3233,  3389,  1312,   739,  2513,  3656,  2483, -1859,
    1761, -1859,  1313,  1435,  4750,  1980,  2482,  1099,  4751,  1394,
    1395,  1314,  1146,  1146,   221,  1387,  1318,  1319,  3392,  1322,
    3392,  2514,  1396,  1982,  1765,  1323,  1765,   801,  4752,   764,
    1327,  2280,  4650,  3226,  4757,  3626,  3627,  4785,  4650, -1859,
    3150,  4788,  1331,  2581,  1332,  1437,  3135,  4798, -1859,  4254,
    2281,  2588,    55, -1859,  1444,  4821,  5357, -1859,  1146,  2588,
    3658,  1333, -1859,  1592, -1859, -1859,  3151,  1334,  1174,  1335,
    1336,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  1337,
    3657,  1078,  1338, -1859,  1339, -1859,   740, -1859,  1391,  1392,
    1340, -1859,  4869,  3390,  2089,  3976,  4643,  4885,  1390,  1146,
    3391,  4650,  -808, -1859, -1859,  1593,  4889,  4682,  2484,   817,
    4650,  1341,  3136,  4892,   784,  3227, -1859,  4650,  1445,  4908,
    4910, -1859, -1012,  4909,  4909,  2515,  1387,  1342,  3152,  2915,
   -1859,  5110,  3659,   818,   966,  1099,  1642,  1643,  1099,  1646,
    3807,  1647, -1859,  3137,  1866,  1394,  1395,  3435, -1859,  1343,
    1344,  1653,  1345,  1763,  3176,   965,  3435,  3435,  1346,  1357,
   -1859,  1347,  3435,  1348,  1767, -1859,  4956,  1866,  1349,  2207,
    4650,   788,  1867,   741,  5035,  5055,  2219,  3622,  5036,  4643,
     789,  4875,  4876,  5067,  4878,  1350, -1859,  3785,  5138,  1351,
    1352,  4928,  5139,  5429, -1859,  1867,  1414,  1446,  4581, -1859,
    4528,  1078,  3658,  1078,  1449,  1448, -1859,  4882,  4883,  3228,
    4529,   794,  1462,  5301,  3138,  1467,   764,  5302,  1390, -1859,
    4530,  5306, -1859,  3628, -1859,  3912,  1468,  1397,  1474,  1478,
    3153,  1481, -1859, -1859,  4531,  4532,  4533,  5309,  1764,  1490,
    1045,  4608,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,
    4534,  1499,  5478,  4232,  5480,  3977,  3546,  1394,  1395, -1859,
     915, -1859,  5311, -1859,  1003,  5320,  5312,  5310, -1859,  5321,
    5502,  1501,   764,  5387,  3659,  4127,   742,  5388,  1504,  3392,
    1511,  1674,   801,  1768,  1767,  1765,  1767,  2642,  2643,  5513,
    1536,   968,  1544,  5514,  4682,  1550,  3139,  4166,  1387,  4790,
    1553,   784, -1859,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  2090,  2924,  1171,  5537,  5538,  4149,  1146,  1558,   916,
    1580, -1859,  1582,  1099,  1387, -1859,  -808,  2091,  1581,  1390,
     844,  1597,  5085,  3435,  1146, -1859,  3228,  1598,  3233,  2045,
    1599,  1602,  4177,  1603,  1604, -1859,  1465,   812,  1631,  2517,
    4682,   784,   917,  1653,  2924,  1632,  1146,   784,   788,   815,
    1634,  1357,  1387,   816,   817,  1099,  1099,   789,  1013,  1635,
    1129,  1129,  1644,  1649,  1099,  1099,  1099,  1394,  1395,  1129,
    1129,  1129,  1650,   911,  1651,   743,  1652,   918,  1654,   961,
    1655,  1656,  1662, -1859,  1658,  3422,  1665,  1691,   794,  1675,
    1760,  1784,  1785,  1768,  1673,   744,  1692,   961,  1387,  1693,
    1694,  1041,  1676,  4238,   788,  1705,   998,   789,  1677,  4231,
    1709,  4231,  1732,   789, -1859,   911,  1124,  2486,  1734,  1758,
    1856,   911,  5013,  5087,  5014,  5015,  1859,  1787,   919,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405, -1859, -1859,  1900,
     745,  1790, -1969,  1901,   794,   746,  1903,  1791,  1792, -1859,
    1904,  1793,  1078,  1408,  5046,  1099,  2930,  4269,  1936,   801,
    1129,  1943,  2045,  1954,  5195,  1957,  2002,  4535,  1992, -1859,
    3135, -1859,  2003,  4624,  2004,  1795,   747,  1387,  1394,  1395,
     748,  4989,  2931,  2025,  4536,  1014, -1859,  2042,   749,  1796,
    2054,  1390,  1678,  1797,  2055,  2044,  3191,  2932,  -808,  2067,
    2068,  1219,  -808,  2069,  4298,  2080,  2793,  3140,  2482,   801,
    2933,  4947,  2099,  3135,  2107,   801,  4952,  1390,  2106,  2140,
    -658,  2136,  1802,  2483,   812,  2154,  2180,  2201,  2203,    42,
     750,  2202, -1859,  2204,  2206,  1767,  3136,  4154,  5091,  2214,
   -1859,   817,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  2215,
    2216,  2226, -1859,   836,  2242,  1390,  -153,  4683,  2247,  2258,
    4684,   920,  2934,  2935,  2262,  1015,  2263,  3137,  2265,  2268,
     842,  2270, -1859,  1719, -1859,   844,  4377,  2272,   845,  3136,
     812,  2275,  2274,  2300,   751,  4076,  2604,  2605,  1513,  2045,
    2936,   817,  4385,  4386,  2304,  3423,   816,   817,  2324,  1806,
    2325,  1390,    49,  2326,  2327,  4537,  1807,  1679,  2329,  2332,
    3173,  2342,  3233,  3233,  2343,   818,  3328,  2345,  4412,  2356,
    2357,  4416,  4538,  2358,  2360,  2362,  1808,  -808,  2374,  4006,
    2376,  2378,  4008,  2484,  2380, -1859,  1668,  2379,  3138,  3424,
     921,  5199, -1859, -1859,  4947, -1859,  2381, -1859,  4952,  2382,
    1394,  1395, -1859,  5289,  1768,  1411,  3626,  3627,  2937,  1668,
     922,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  1866,
    2390,  2391,  4234,    55,  2396,  2414,  1394,  1395,  2427,  4298,
    1390,  3174,  2431,  -961,  4539,  1810,  2432,  2451,  2465,  4339,
    2466,  1377,  1378,  2468,  4298,  2469,  4440,  1867,  2481,  2477,
    2496,  4540,  2482,  1811,  4947,   923,  2501,  2502,  2507,  4952,
     746,  2508,  2938,  1099,  1394,  1395,  2510,  2522,  2520,  2525,
    3139,  5297,  4462,  2532,  2533,  2536,  -808,  2543,   924,  2544,
    2621,  2622,  1379,  4340,  2546,  5371,  2556,  4341,  2554,  4342,
     836,   925,  2567,  2557,  4683,  1380, -1859,  4684, -1859,  2568,
   -1859,  2483,  2570,   926,  4043, -1859,  4047,   842,  1815,  2569,
    1394,  1395,   844,  3175,  1125,   845,  2573,  1816,  2574,   927,
    2228,  2587,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,
    2229,  4685,  4686,  4612,  2584,  1381,  2585,  4343,  2588,  4687,
    2230,  2693,  2695,  2697,  2696,   928,   836,  2699,  1382,  2700,
    4683,  2701,  2702,  4684,  2231,  2232,  2233,  2703,  2706,  3693,
    3694,  3695,   844,   842,  1520,  2708,  2727,  4158,   844,  3425,
    2234,   845,  2721,  2737,  2739,  1383,  2589,  2590,  2591,  2592,
    2593,  2594,  2595,  2764,  2485,  2767,  2740,  2741,  2756,  1394,
    1395,  3007,  2758,  5199,  3628,  2773,  1821,  2178,  2777,   929,
    2763,  -808,  2766,  2834,  1405,  2781,    42,  5494,  2045,  2785,
    2801,  2802,  2807,  2822,  2893,  -961,  2823,  2513,  2810,  2811,
    2044,  1016,  1017,  2824,  1018,  1019,  1020,  2482,  2832,  2831,
   -1477,  5517,  2844,  2850,  2852,  1287,  1146,  3435,  2867,  1384,
    2853,  1099,  2514,  1021,  2044,  2156,  1129,  2854,  3147,  2871,
    5494,  2876,  1822,  1823,  1824,  1825,  2877,  2889,  2156,  2880,
    1826,  2896,  2899,  2044,  3148,  5196,  2900,  2901,  2902,  2903,
    5517,  2904,  2905,  2917,  2918,  -982,  2919,  1827,  1555,    49,
    1828,  2922,  2949,  2044,  2951,  1880,  2959,  2966,  2969,  2958,
    2971,  3140,  2975,  2976,  4231,  2978,  1400,  1401,  1402,  1403,
    1404,  1405,  2486,  2977,  2979,  5274,  2250,  3002,  3003,  1524,
    1525,  3021,  5445,  3033,  3022,  3023,  1830,  3024,  4685,  4686,
    1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  3025,  3026,
    3030,  5220,  3035,    54,  3176,  4658,  3037,  3039,  4298,  3044,
    4641,  3051,  3049,  4298,  3054,  3060,  2515,  4298,  3061,  3055,
      55,  3080,  3068,  3072,  3081,  3074,  3807,  1678,  1398,  1399,
    1400,  1401,  1402,  1403,  1404,  1405,  5277,  1146,  2157,  3088,
    3087,  3092,  2158,  3095,  4685,  4686,  3119,  1391,  4344,  3096,
    3097,  2157,  4719,  4345,  3114,  2158,  3124,  -808,  1866,  4346,
    1099,  3132,  3144,  3156,  1146,  3158,  3157,  2235,  3159,  3245,
    2642,  2643,  3247,  3293,  1398,  1399,  1400,  1401,  1402,  1403,
    1404,  1405,  2159,  3300,  2236,  5549,  1867,  3313,  3321,  3315,
    3322,  3329,  3331,  3332,  3333,  2159,  3334,  3335,  3384,  4347,
    3336,  3337,  2160,  3340,  1099,  4723,  3149,  3385,  1833,  2709,
    3341,  3342,  3343,  3344,  3345,  2160,  3346,  3347,  3348,  3349,
    3352,  4304,  4305,  3353,  3354,   723,  4312,  3355,  3356,  3357,
    3358,  3359,  1836,  1837,  3360,  3361,  3362,  3363,  3364,  5368,
    3365,   911,  3366,  3367,  3368,  3369,   911,  4412,  3370,  3371,
    3372,  4733,  3373,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  3374,  4334,  3388,  3375,  3376,  3377,  2161,  4364,  4366,
    4367,  3378,  3412,  4043,  3410,  3421,   911,  4298,  4348,  1520,
    2161,  1688,  3440,  3150,  3457,  3448,  3062,  3490,  3504,  1099,
    3435,  3426,   911,  3491,  -658,  3506,  3521,  1266,  3561,  3551,
    3492,  1316,  3553,  5406,  1320,  3558,  1391,  1392,  3604,  3151,
    1411,  3587,  3606,  3601, -2329,  3624,  3602,  3603,  5406,  3609,
    3620,  3639,  2237,  2516,  3642,  3651,  3007,  3643,  4349,  3652,
    5535,  5415,  3665,  3671,  3688,  3698,  3677,  4454,  3702,  3703,
    2517,  3704,  3710,  3705,  3707,  3712,  3713,  3717,  3718,  3719,
     911,   911,  3723,   911,   911,  1170,  1170,  3725,  3131,  5277,
    3748,  3762,  2162,  3763,  3764,  3765,   911,  1146,  3766,  3767,
    3792,  3152,  3793,  4831,  3769,  2162,  3791,   884,  3801,  3795,
    3800,  2045,  3802,  4954,  2238,  4350,  4177,  4840,  3877,  3880,
    5406,  3881,  1146,  3872,  3885,  3888,  3435,  3889,  2163,  3896,
    5467,  2239,  3905,  3908,  1411,  5469,  3909,  3992,  3910,  3912,
    3911,  2163,  3914,  3917,  3920,  3999,  3923,  3926,  3546,  4000,
    3975,  3990,  2164,  4016,  4024,  1132,  4048,  4034,  4038,   241,
    4040,  4044,  4866,  4049,  4051,  2164,  4053,  3864,  3865,  5406,
    4055,  5406,  4056,  4057,  4058,  4059,   962,  2165,  4068,  4069,
    4110,  4107,  4115,  4111,  4116,  4134,  1326,  1809,  4118,  1781,
    2165,   911,  1078,  5406,   962,  4142,  4147,  4143,  4160,  4164,
    4298,  5546,  4181,  3153,  4298,  4151,  4165,  4178,  4182,  4187,
    4188,  4189,  1146,  4190,  4191,  4192,  4198,  4351,  4199,  4200,
    4212,  2166,  4213,  4223,  4225,  4224,  4226,  5546,  5406,  5406,
     911,  4227,  4235,  5553,  2166,  4236,  4239,  4240,  4241,  4242,
    4253,  -810,  4256,  4265,   961,  4271,  4276,  4277,  4280,  4281,
    4284,  4286,  2167,  4292,  4373,  4380,  4289,  1041,  4401,  1146,
    4352,  4353,  4293,  4336,  4318,  2167,  4329,  4434,  4369,  4390,
    4389,  4447,   733,  4458,  4465,   734,  4453,  4473,  4477,  4475,
    4463,  4485,  4491,  2473,  4492,  2475,  2476,  4509,  4514,  4544,
    2478,  4527,  4549,  4504,  4543,  4412,  4505,  4416,  4938,  4508,
    4551,  4554,  3435,  2491,  4555,  4557,  2497,  2498,  4556,  2500,
    4568,  4563,  2503,  2504,  2505,  2506,  1146,  4565,  4572,  2509,
   -1752, -1751,  4594,  4604,  2521,  4462,  4573,  4576,  4577,  2526,
    2527,  2528,  2529,  2530,  4964,  4605,  2368,  2534,  2535,  4616,
    4617,  4619,  4626,  2545,  4988,  2547,  2548,  2549,  4339,  2552,
    2553,  4627,  2555,  4628,  4629,  2558,  4638,  3756,  2559,  2560,
    4646,  4655,  4659,  4665,  -811,  4695,  4694,  4700,  3196,  4707,
    4709,  4363,  4716,  4725,  4724,  4727,  4728,  4735,  4737,  4731,
    4756,  1146,  4744,  4734,  4766,  -808,  4768,  4769,  1099,  4770,
    4783,  4771,  4705,  4799,  4674,  4784,  4341,  4785,  4342,  4786,
    4787,  4801,  4791,  3233,  4792,  3233,  4800,  4794,  4810,  4809,
    2483,  5033,  4811,  4817,  4820,  4825,  4822,  4823,  4826,  4827,
     911,  4833,  4846,  4834,  4863,  1963,  1964,  1965,  1966,  1967,
    4841,  4847,  4864,  4849,  4851,  4608,  4873,  4874,  4722,  4870,
    4877,  4879,   961,  4880,  1167,  4886,  4343,  4905,  4884,   815,
     911,   911,  4912,  4922,  4923,  4788,  3903,  4929,  4918,   911,
     911,   911,   911,   911,   911,  4931,  5049,  4935,  4940,  4941,
    4953,  4962,   911,   911,  4965,   911,   911,  4963,  4966,  4968,
     911,   911,  4976,  4967,   911,   911,   911,   911,  4971,   911,
     911,  4972,  4983,  4987,  4412,  4412,  4973,   911,   911,  4992,
     911,   911,   911,   911,   911,  4998,  2879,   911,   911,   911,
     911,   911,   911,   911,   911,   911,  5002,   911,  5003,  5005,
     911,   911,  5007,  4781,  5016,   911,  5019,  5044,  5050,   911,
     911,   911,  1968,  1969,  1970,  1971,  5053,  5059,  5061,  5064,
    5070,  3721,   911,   911,   911,  5074,  5078,   911,  5111,  5079,
     911,   911,   911,   911,   911,  5033,  5080,  3546,  5082,   911,
    5096,  4856,  4984,  5094,  5113,  5120,  5122,  5098,  5123,  5099,
    1720,   911,   911,  5131,  5143,  5146,  5193,  5100,  5216,   911,
    5101,   911,   911,  5105,  -982,  5201,  5185,  5208,  5204,  5319,
    4298,  5217,  5322,   911,   911,   911,  5223,   911,   911,  5106,
    5203,   911,   911,   911,  5184,  5206,   911,   911,   911,   911,
     911,   911,   911,   911,  5238,  5247,  3542,   911,  5112,  5207,
    5179,  -544,   911,  5117,  3116,  5265,  5268,  5269,  5270,  5286,
    5307,  5128,  5369,  5298,  5224,  5300,  5337,   961,  5283,  5267,
    5305,  5334,  5362,  1972,  -562,  1973,  1974,  1975,  5364,  5363,
    2045,  5365,  5214,  5367,  1976,  5373,  5375,  5374,  5381,  3328,
    3328,  5391,  5010,  5377,  5394,  5395,  4231,  5402,  5403,   961,
    5417,  5407,  5420,  5425,  5424,  5423,  5430,  5432,  5434,  5435,
   -2787,  5237,  5438,  5446,  5448,  5455,  1391,  4344,  5458,  5460,
    5471,  5468,  4345,  5242,  5475,  5470,  5476,  5477,  4346,  5481,
    5486,  5495,  5501,  5251,  5505,  5507,  5510,  5511,  5258,  5524,
    5527,  5534,  5520,  5525,  5179,  5179,  5536,  4985,  4138,  5554,
     961,  3925,   121,  5260,   116,  3919,  3916,   911,  4937,  3944,
    4939,  3922,   114,  4942,  4433,  1977,  4948,  4283,  4347,  4412,
    4958,  1927,  5189,  5413,  5272,  2467,  5414,  4960,  5076,  5555,
    5529,  1091,  1615,  3637,  3594,  4542,  5157,  5158,  1041,  5160,
     911,  5161,  5163,   911,  5539,  5164,  5165,  5452,  5316,  5166,
     966,  5400,  5453,  5167,  5443,  5168,  5412,  5180,  5411,  4445,
    3182,  5171,  5172,  5173,  1769,  4137,  4755,  4639,  3188,  3383,
    4767,   965,  1146,  4012,  4011,  1146,  4610,  4015,  1978,  1979,
    5008,  5384,  4888,  5390,  5389,  5422,  5130,  3145,  5338,  3303,
    4010,  4457,  4653,  4704,  4654,  4322,  4372,  4348,  4370,  4911,
    5396,  4706,  4109,  5179,  5179,  5210,  5132,  5020,  5066,  5034,
    5069,  2725,  5043,  3799,  4904,  1146,  4666,  4763,  4451,   911,
    5179,  3746,  5512,  5033,  4002,  3306,  1365,  1366,  3733,  4926,
    3307,  3304,  2449,  2420,  3053,  3050,  5214,  4388,   911,  3871,
    1249,  3623,  3621,  2582,  3913,  3610,  4157,  4349,  2694,  4553,
    1133,  5180,  5180,  3115,  1509,  3001,  1510,  2875,  2082,  4789,
    3573,  3550,  2841,  5089,  5107,  5372,  2001,  5380,  1626,  5419,
    1280,  3647,  4993,  3648,  3649,  3650,  3073,  5497,  5518,  5000,
    4854,  5218,  4408,  4596,  5179,  1633,  1297,  5219,  1953,  2353,
    4861,  5108,  4215,  4975,  4384,  5083,  3118,   911,  5018,  5179,
     930,  2882,  2200,  3582,  4350,  1737,  4155,   968,  1738,  5316,
    4156,  4842,  5179,  4153,  4564,  4830,  2352,  1739,  4835,  3041,
    1980,  1483,  2330,  3042,  1963,  1964,  1965,  1966,  1967,  2974,
    3589,  3892,  4163,  2973,  1731,  4630,  5378,  1981,  1982,  5533,
    5418,  5179,  4881,  5550,  4816,  4720,  2448,  4839,  1359,  5001,
    4872,  2083,  3755,  5179,  5179,  3020,  3864,  3865,  3682,  3932,
    5180,  5180,  1733,  1049,  3031,  5457,  1740,  5376,  2286,  1050,
    2285,  5179,  5465,  3016,  3017,  1503,  1010,  5180,  3617,  2190,
    3728,  5179,  3413,  3189,  1681,  2413,  5179,  3409,  3414,  4986,
    5093,   755,   756,  4452,  2249,  1508,  1721,  4726,  4764,  4955,
    5179,  4395,  5179,     0,     0,  2045,  4351,     0,     0,     0,
    3240,  5503,     0,     0,     0,     0,  5508,  5385,  5179,     0,
    5179,     0,  5179,     0,     0,  1146,     0,  3253,     0,  2045,
    -810,  1968,  1969,  1970,  1971,     0,  1930,     0,     0,     0,
       0,  5180,     0,     0,  5179,     0,     0,     0,  2045,  4352,
    4353,     0,     0,     0,     0,  1473,  5180,     0,     0,     0,
    5547,  1931,  5179,  5179,  3298,  3299,  1932,     0,  2045,  5180,
       0,     0,  3312,     0,     0,     0,     0,   116,     0,  5179,
    5179,     0,     0,     0,  5179,   114,  5547,     0,  5178,     0,
       0,     0,     0,     0,   884,     0,     0,     0,  5180,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5180,  5180,     0,     0,     0,  1471,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   911,  5180,     0,
       0,   911,     0,     0,     0,     0,     0,     0,  5180,   911,
       0,   911,  1972,  5180,  1973,  1974,  1975,     0,     0,     0,
       0,     0,     0,  1976,  1760,  1784,  1785,  5180,     0,  5180,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   962,     0,     0,     0,  5180,     0,  5180,     0,  5180,
       0,   911,  5178,  5178,     0,     0,     0,     0,     0,  -963,
    -963,  1787,     0,     0,  1368,     0,     0,  1369,     0,  -963,
       0,  5180,     0,     0,     0,  1790,     0,     0,     0,     0,
       0,  1791,  1792,     0,     0,  1793,     0,     0,     0,  5180,
    5180,     0,     0,  3415,     0,   911,   911,   911,     0,     0,
       0,     0,     0,     0,  1977,     0,  5180,  5180,  1471,  1795,
       0,  5180,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1796,     0,     0,     0,  1797,     0,     0,
       0,     0,     0,   911,     0,     0,     0,     0,   911,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1802,   911,     0,     0,
       0,  5178,  5178,     0,   911,     0,     0,  1978,  1979,   911,
       0,   911,     0,     0,     0,     0,     0,   911,  5178,   911,
     911,     0,     0,     0,  1934,  1935,     0,     0,     0,     0,
       0,     0,     0,  1945,  1946,     0,     0,  1949,  1950,     0,
       0,     0,     0,     0,     0,     0,  1958,  1959,     0,  1960,
    1961,     0,     0,     0,  1985,     0,     0,     0,  1994,  1995,
    1996,  1997,     0,  1999,     0,     0,     0,     0,     0,     0,
       0,  2007,  2008,  1806,  2011,  2012,     0,     0,     0,   962,
    1807,  2016,  5178,     0,  2019,  2020,  2021,  2022,  2023,  2024,
       0,  2026,     0,     0,  2029,  2030,     0,  5178,     0,  2033,
    1808,     0,     0,  2036,  2040,  2041,     0,     0,     0,     0,
    5178,     0,     0,     0,     0,  3458,  2048,  2049,  2050,     0,
       0,     0,     0,     0,  2056,  2057,  2058,  2059,  2060,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5178,
       0,     0,  3459,     0,     0,  2081,   884,     0,     0,  1980,
       0,  5178,  5178,  2085,     0,  2086,  2087,     0,     0,  1810,
       0,     0,     0,     0,     0,  1371,  1981,  1982,     0,  5178,
     961,     0,     0,   961,     0,     0,     0,  1811,     0,  5178,
    1041,   911,     0,     0,  5178,   911,     0,     0,  1041,     0,
       0,   911,  3460,     0,     0,  3461,  2127,     0,  5178,     0,
    5178,     0,     0,  3462,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5178,     0,  5178,     0,
    5178,     0,  3463,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1815,     0,     0,     0,     0,     0,     0,     0,
       0,  1816,  5178,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5178,  5178,     0,     0,     0,     0,     0,     0,     0,  3464,
       0,     0,     0,     0,   962,     0,     0,  5178,  5178,     0,
       0,     0,  5178,     0,     0,  3465,     0,     0,   961,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2260,     0,     0,     0,     0,   962,     0,     0,     0,
       0,     0,  1471,     0,     0,     0,     0,     0,     0,     0,
    1821,     0,     0,     0,     0,     0,  2213,     0,     0,     0,
       0,     0,     0,     0,  2298,     0,     0,  2303,     0,     0,
    3466,     0,     0,     0,     0,     1,     0,     0,     2,     0,
       0,     0,     0,     0,     0,     0,  3759,   962,  3760,  3467,
       0,     0,     0,     3,     0,     0,     0,     4,     0,     0,
    3180,     0,     0,  3180,  3180,     0,  1822,  1823,  1824,  1825,
       0,     5,     6,     0,  1826,     0,     0,     0,     0,     7,
       0,     0,     0,     0,     8,     9,     0,     0,     0,     0,
       0,  1827,     0,     0,  1828,     0,     0,     0,     0,     0,
      10,     0,     0,  2348,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3468,  3469,  3470,     0,
      11,     0,  2367,  3471,     0,     0,  3472,     0,     0,     0,
    1830,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    12,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,    14,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    15,    16,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   911,    17,  3473,  3474,
       0,  2433,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3475,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,  3899,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2417,  2417,  2417,    20,
       0,    21,     0,     0,     0,     0,    22,     0,     0,    23,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1833,     0,    24,     0,     0,     0,     0,     0,
       0,     0,    25,     0,     0,    26,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1836,  1837,  3476,     0,
       0,     0,     0,     0,     0,    27,     0,     0,     0,     0,
       0,  3993,  3994,  3995,  3996,     0,     0,     0,     0,     0,
       0,     0,    28,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   911,     0,     0,     0,     0,     0,     0,     0,
       0,   911,   911,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3477,     0,
       0,     0,   911,   911,     0,   911,     0,     0,   911,   911,
     911,   911,   911,     0,     0,   911,     0,     0,     0,     0,
       0,     0,     0,     0,   911,     0,  3478,     0,     0,   911,
       0,   911,     0,   911,   911,     0,   911,   911,     0,     0,
       0,   911,   911,   911,     0,     0,     0,   911,   911,   911,
       0,   911,    30,   911,     0,   911,     0,   911,     0,   911,
       0,  2738,     0,     0,   911,  2742,     0,     0,     0,  3479,
       0,     0,     0,     0,     0,  2738,     0,     0,     0,     0,
     911,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    32,     0,     0,     0,
       0,   911,     0,   911,     0,   911,     0,     0,     0,   911,
       0,     0,     0,     0,     0,   911,   911,     0,    33,     0,
       0,    34,     0,    35,     0,     0,    36,     0,     0,  1760,
    1784,  1785,     0,     0,     0,     0,    37,    38,     0,     0,
       0,     0,     0,     0,     0,     0,    39,     0,    40,     0,
       0,     0,     0,     0,     0,     0,     0,    41,     0,  2814,
    2816,  2818,     0,    42,     0,     0,  1787,     0,     0,     0,
       0,    43,     0,     0,     0,     0,    44,    45,    46,     0,
    1790,     0,     0,     0,     0,     0,  1791,  1792,     0,     0,
    1793,   911,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2856,     0,     0,     0,     0,     0,     0,    47,
       0,     0,     0,     0,  1795,     0,    48,     0,     0,     0,
       0,  2864,     0,     0,     0,     0,     0,     0,  1796,     0,
       0,     0,  1797,  2868,     0,  2869,    49,     0,     0,     0,
     961,   961,   961,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      50,  1802,     0,     0,     0,     0,     0,     0,  1041,     0,
       0,     0,    51,     0,     0,     0,    52,     0,     0,     0,
       0,     0,     0,     0,    53,     0,     0,     0,     0,     0,
      54,     0,     0,   911,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   911,     0,   911,     0,    55,     0,     0,
       0,     0,     0,     0,     0,    56,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    57,    58,    59,    60,     0,     0,     0,  1806,     0,
       0,     0,     0,     0,     0,  1807,    61,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   911,     0,     0,  1808,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    62,     0,     1,  2944,  2945,     2,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3028,     0,     4,     0,  2298,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     5,     6,    63,  1810,     0,     0,     0,     0,     7,
       0,     0,     0,     0,     8,     9,     0,     0,     0,     0,
       0,     0,  1811,     0,     0,     0,     0,     0,     0,     0,
      10,     0,     0,     0,     0,     0,     0,   962,     0,     0,
     962,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      11,     0,     0,     0,     0,     0,     0,     0,    64,     0,
       0,     0,     0,     0,     0,  3032,     0,     0,     0,     0,
       0,     0,    12,     0,     0,     0,     0,  1815,     0,     0,
       0,     0,    13,    14,     0,     0,  1816,     0,     0,     0,
       0,     0,     0,     0,    15,    16,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4430,  4431,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   962,     0,     0,     0,    20,
       0,    21,     0,     0,     0,  1821,    22,     0,     0,    23,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    24,     0,     0,     0,     0,     0,
       0,     0,    25,     0,     0,    26,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,     0,     0,     0,     0,
       0,  1822,  1823,  1824,  1825,     0,     0,     0,     0,  1826,
     961,     0,    28,     0,  3170,     0,    29,     0,  3181,     0,
       0,     0,     0,  3186,     0,     0,  1827,     0,     0,  1828,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   911,     0,     0,     0,  3235,  3236,
    3237,  3238,   911,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1830,     0,     0,     0,     0,
    3330,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3272,     0,     0,     0,     0,     0,     0,     0,     0,   911,
     911,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3186,  3186,     0,     0,     0,     0,
       0,     0,    30,     0,     0,   911,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   911,     0,   911,     0,   911,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    32,     0,     0,     0,
       0,     0,     0,   911,     0,     0,     0,     0,   911,     0,
     911,     0,     0,     0,     0,     0,     0,     0,    33,     0,
       0,    34,     0,    35,     0,     0,    36,  1833,     0,     0,
       0,     0,     0,     0,     0,     0,    37,    38,     0,     0,
       0,     0,     0,     0,   911,     0,    39,     0,    40,     0,
       0,  1836,  1837,     0,     0,     0,  3447,    41,     0,     0,
       0,     0,     0,    42,     0,  3455,  3456,     0,     0,     0,
       0,    43,     0,     0,     0,     0,    44,    45,    46,     0,
       0,   911,     0,     0,     0,     0,  3493,  3494,     0,  3495,
       0,     0,  3498,  3499,  3500,  3501,  3502,     0,     0,     0,
       0,     0,     0,     0,  4702,  4703,     0,     0,  3508,    47,
       0,     0,     0,  3509,     0,  3510,    48,  3511,  3512,   911,
    3513,     0,     0,     0,     0,  3518,  3519,  3520,     0,     0,
       0,  3523,  3524,  3525,     0,  3526,    49,  3528,     0,  3530,
       0,  3532,     0,  3533,     0,     0,     0,     0,  3536,     0,
     911,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      50,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    51,     0,     0,     0,    52,     0,     0,     0,
       0,     0,     0,     0,    53,     0,     0,     0,     0,     0,
      54,     0,     0,  3571,     0,     0,     0,     0,     0,  2127,
       0,     0,     0,     0,     0,     0,     0,    55,     0,     0,
       0,     0,     0,     0,     0,    56,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   911,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    61,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3618,     0,     0,     0,     0,
       0,     0,     0,    62,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3619,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2348,    64,     0,
       0,     0,     0,     0,     0,     0,     0,   962,   962,   962,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2417,
       0,     0,  3180,  3180,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2433,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   911,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   911,     0,   911,     0,     0,   911,
     911,     0,   911,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   911,     0,     0,     0,     0,   911,     0,
       0,   911,  3761,     0,   911,   911,     0,     0,     0,     0,
       0,     0,     0,     0,  3770,     0,  3777,  3778,  3779,  3780,
       0,  3782,  3783,     0,     0,     0,   911,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     911,     0,     0,     0,     0,     0,     0,     0,     0,  3422,
       0,     0,     0,     0,  1760,  1784,  1785,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   911,     0,     0,     0,
       0,  1787,     0,     0,     0,  3876,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1790,     0,     0,  3882,     0,
       0,  1791,  1792,     0,     0,  1793,     0,  5040,  5041,  5042,
     911,   911,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1795,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1796,     0,     0,     0,  1797,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  -658,     0,  1802,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2417,     0,  2417,     0,
       0,     0,   911,     0,     0,     0,     0,     0,  2417,  2417,
    2417,  2417,     0,     0,     0,     0,     0,  2417,  2417,  2417,
    2417,  2417,  2417,     0,  2417,  2417,  2417,  2417,     0,     0,
    3970,     0,  2417,     0,     0,     0,     0,     0,  4029,     0,
       0,     0,     0,     0,     0,  5121,  4032,     0,  5124,  5125,
    5126,  5127,     0,     0,     0,     0,     0,     0,     0,  3423,
       0,     0,     0,  1806,     0,     0,     0,   962,     0,     0,
    1807,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4062,  4063,  3808,  3809,     0,     0,     0,
    1808,  3810,     0,  3811,     0,  3812,  3813,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   911,   911,     0,  4088,
       0,     0,     0,  3814,     0,     0,     0,     0,     0,  4099,
       0,  4101,     0,  4103,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5222,     0,     0,  3180,  3180,
       0,     0,     0,     0,  5232,  5233,     0,     0,     0,  1810,
       0,     0,     0,  5241,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3815,     0,     0,  3816,  1811,     0,     0,
       0,     0,     0,     0,  3817,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3463,     0,     0,     0,     0,  2348,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1815,     0,     0,     0,     0,     0,  1125,     0,
       0,  1816,     0,     0,     0,  4185,     0,     0,  3819,     0,
    3820,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3821,  3822,     0,     0,
       0,     0,     0,     0,     0,     0,   911,     0,     0,     0,
       0,     0,     0,  2298,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3425,     0,     0,   911,     0,   911,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3823,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1821,  3824,     0,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3825,     0,     0,     0,     0,     0,     0,     0,     0,  3826,
    3827,     0,  3828,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1822,  1823,  1824,  1825,
       0,     0,     0,     0,  1826,     0,  4245,     0,  3829,  3830,
    3831,     0,     0,  4290,     0,     0,     0,     0,     0,     0,
       0,  1827,     0,    49,  1828,   911,     0,  3832,  3833,  3834,
       0,     0,     0,     0,  3835,     0,     0,  3836,     0,     0,
       0,     0,     0,     0,     0,  4275,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3837,  3838,   911,     0,     0,
    1830,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    54,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3839,
    3840,     0,     0,     0,    55,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3475,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   911,     0,     0,   911,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   911,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3841,     0,     0,
       0,  3842,  1833,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3843,   911,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2417,  1836,  1837,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3844,     0,  4467,  3845,     0,     0,  3846,
    3847,  3848,  3849,     0,     0,  1127,     0,     0,  -658,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4441,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4481,     0,
    2433,     0,     0,  4486,  4487,     0,     0,     0,     0,     0,
       0,     0,  3850,  3851,     0,     0,     0,  4494,     0,     0,
       0,     0,  4496,     0,   911,  4497,     0,     0,  4498,  4499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3852,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4511,     0,     0,     0,     0,   911,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   911,     0,     0,     0,     0,  5175,     0,     0,     0,
    2348,     0,  5186,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   911,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4590,  4593,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   911,     0,     0,     0,     0,     0,
    5175,  5175,     0,  5482,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4600,  4601,
       0,  4603,     0,     0,     0,     0,  4648,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   911,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   961,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   911,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   911,     0,   911,  1052,  1053,
       0,     0,     0,     0,     0,     0,     0,   911,     0,  5175,
    5175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1054,  1027,  5175,     0,     0,     0,
    4729,  4730,     0,     0,     0,  1055, -2120,  4681,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1056,     0,  1057,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1058,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   911,     0,
    5175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5175,   911,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5175,     0,
   -2112,  1059,     0,     0,     0,     0,  1060,     0,     0,  1061,
       0,  2417,  2417,  2417,  2417,     0,   911,     0,     0,  1062,
       0,     0,     0,     0,     0,     0,   911,  5175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4773,  5175,
    5175,  1063,     0,  1064,     0,     0,     0,     0,     0,     0,
       0,     0,  1065,     0,  1066,     0,  1780,  5175,     0,     0,
       0,  1781,     0,  1782,   911,     0,  1783,  5175,     0,     0,
    2348,     0,  5175,     0,     0,  1760,  1784,  1785,     0,   911,
       0,     0,     0,     0,     0,     0,  5175,     0,  5175,     0,
    4848,     0,  4850,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5175,     0,  5175,  1786,  5175,     0,
    -963,  -963,  1787,  1788,     0,     0,     0,     0,  1789,     0,
    -963,     0,     0,     0,     0,  1067,  1790,     0,     0,     0,
    5175,     0,  1791,  1792,     0,     0,  1793,     0,     0,     0,
       0,     0,     0,     0,     0,  1794,     0,     0,  5175,  5175,
       0,     0,     0,     0,     0,   911,     0,     0,  1068,     0,
    1795,     0,     0,   911,     0,  5175,  5175,     0,     0,     0,
    5175,     0,     0,     0,  1796,     0,     0,     0,  1797,  4862,
       0,     0,     0,     0,     0,     0,  1798,  1799,     0,     0,
       0,  4871,  4245,  1800,     0,     0,     0,     0,     0,  4916,
       0,  1801,     0,     0,     0,     0,     0,  1802,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1803,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  4924,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1804,     0,     0,     0,     0,     0,     0,     0,     0,
    1070,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1071,  1072,     0, -2116,  1073,  1074,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3186,  3186,     0,
       0,     0,  1805,     0,  1806,     0,  1075,     0,     0,     0,
       0,  1807,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2433,     0,     0,  4970,
    4930,  1808,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2417,  4590,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1809,     0,     0,     0,     0,     0,
    1076,     0,     0,  4957,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4590,     0,
    1810,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2856,     0,     0,  1811,  1078,
       0,     0,  1812,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2120,     0,     0,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2116,     0,
    1813,     0,     0,     0,     0,     0,  1814,     0,  5004,     0,
       0,     0,     0,  1815,     0,     0,     0,     0,     0,     0,
       0,     0,  1816,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -2856,     0,     0,  5039,
       0,     0,     0,  1080,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1817,     0,     0,     0,  2433,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1818,
    1819,  1820,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1821,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5145,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5109,     0,     0,     0,     0,     0,     0,  1822,  1823,  1824,
    1825,     0,     0,     0,     0,  1826,  1081,  1082,  5202,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1827,     0,     0,  1828,  3186,  3186,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1829,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1830,     0,     0,     0,     0,     0,     0,  5246,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1831,     0,     0,  1832,     0,
       0,     0,     0,     0,     0,     0,  5231,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5284,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5332,
       0,  5333,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5341,     0,  1833,  1834,  1835,     0,     0,     0,     0,
       0,     0,     0,   962,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1836,  1837,     0,
       0,     0,     0,     0,     0,     0,     0,  5317,  5318,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   243,   244,     0,   760,   246,   247,
     248,   249,  5404,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   761,     0,   253,   254,   255,   256,   762,   258,
    5409,   259,     0,     0,   763,   260,   764,   765,   766,   261,
     767,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   768,   769,   269,   270,     0,   271,   272,
     770,   771,   274,     0,   275,   276,   277,   278,   772,   280,
    5428,   773,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   774,   775,   301,     0,     0,
       0,   776,   302,   777,     0,   303,   778,   779,  5459,   304,
     305,   306,   780,   781,   782,     0,     0,     0,     0,   783,
     309,   784,     0,  5474,   785,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     786,     0,   336,   337,   338,   339,   340,   787,   788,   341,
     342,     0,   343,   344,   345,   346,   347,   789,     0,   348,
     349,     0,     0,     0,   790,   351,     0,   352,     0,  5548,
       0,   353,     0,   354,   791,   356,   792,  2348,   358,     0,
     359,     0,   793,     0,   360,   361,     0,   362,   794,     0,
     363,   364,     0,     0,     0,   795,   366,   367,   368,   796,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     797,   373,   374,   375,   798,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     799,   386,   387,     0,     0,     0,     0,     0,   800,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   801,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   802,   415,   416,
     417,   418,   803,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   804,   426,     0,     0,   805,   428,   806,
     429,     0,   430,   807,   808,   809,   810,   811,   435,   436,
     437,   438,   439,     0,   812,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   813,   814,   815,   447,   448,     0,
     816,   817,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   818,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   819,   820,   470,
     821,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   822,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   823,   824,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   825,     0,   826,   514,   515,   516,   517,
       0,   518,   827,   828,   520,   521,   522,   523,     0,   829,
     525,    42,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   830,   831,   554,   555,     0,     0,   556,   557,
     832,   559,   560,   561,   833,   834,   562,   563,   564,   565,
     835,   566,   567,     0,    49,   568,   569,   570,   571,     0,
     836,   572,   573,     0,   837,   838,   839,   840,     0,     0,
       0,     0,     0,   578,   579,     0,   841,   842,   843,   581,
     582,     0,   844,   583,   584,   845,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     846,   593,     0,     0,   847,   848,   849,   594,  1356,   595,
       0,     0,   596,   851,     0,   852,   597,     0,   598,   599,
     853,   854,     0,     0,     0,    55,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   855,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   856,   857,     0,   616,   617,   618,   858,
     619,   620,   621,     0,   622,   859,   860,   623,   861,   624,
       0,   862,   863,   864,   865,   866,   625,   626,     0,   867,
     627,   868,   628,   869,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   870,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   871,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,   872,   873,
       0,     0,     0,     0,   875,     0,   876,     0,     0,     0,
     877,     0,     0,     0,   878,   879,   243,   244,     0,   760,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   761,     0,   253,   254,   255,   256,
     762,   258,     0,   259,     0,     0,   763,   260,   764,   765,
     766,   261,   767,     0,   262,   263,   264,  2037,   265,     0,
     266,   267,     0,     0,   268,   768,   769,   269,   270,     0,
     271,   272,   770,   771,   274,     0,   275,   276,   277,   278,
     772,   280,     0,   773,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   774,   775,   301,
       0,     0,     0,   776,   302,   777,     0,   303,   778,   779,
       0,   304,   305,   306,   780,   781,   782,     0,     0,     0,
       0,   783,   309,   784,     0,     0,   785,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   786,     0,   336,   337,   338,   339,   340,   787,
     788,   341,   342,     0,   343,   344,   345,   346,   347,   789,
       0,   348,   349,     0,     0,     0,   790,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   791,   356,   792,     0,
     358,     0,   359,     0,   793,     0,   360,   361,     0,   362,
     794,     0,   363,   364,     0,     0,     0,   795,   366,   367,
     368,   796,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   797,   373,   374,   375,   798,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,  2038,
     385,     0,   799,   386,   387,     0,     0,     0,     0,     0,
     800,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   802,
     415,   416,   417,   418,   803,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   804,   426,     0,     0,   805,
     428,   806,   429,     0,   430,   807,   808,   809,   810,   811,
     435,   436,   437,   438,   439,     0,   812,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   813,   814,   815,   447,
     448,     0,   816,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   818,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   819,
     820,   470,   821,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   822,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   823,   824,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   825,     0,   826,   514,   515,
     516,   517,     0,   518,   827,   828,   520,   521,   522,   523,
       0,   829,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   830,   831,   554,   555,     0,     0,
     556,   557,   832,   559,   560,   561,   833,   834,   562,   563,
     564,   565,   835,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   836,   572,   573,     0,   837,   838,   839,   840,
       0,     0,     0,     0,  2039,   578,   579,     0,   841,   842,
     843,   581,   582,     0,   844,   583,   584,   845,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   846,   593,     0,     0,   847,   848,   849,   594,
     850,   595,     0,     0,   596,   851,     0,   852,   597,     0,
     598,   599,   853,   854,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     855,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   856,   857,     0,   616,   617,
     618,   858,   619,   620,   621,     0,   622,   859,   860,   623,
     861,   624,     0,   862,   863,   864,   865,   866,   625,   626,
       0,   867,   627,   868,   628,   869,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   870,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   871,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
     872,   873,     0,     0,     0,     0,   875,     0,   876,     0,
       0,     0,   877,     0,     0,     0,   878,   879,   243,   244,
       0,   760,   246,   247,   248,   249,  2292,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   761,     0,   253,   254,
     255,   256,   762,   258,     0,   259,     0,     0,  2293,   260,
     764,   765,   766,   261,   767,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   768,   769,   269,
     270,     0,   271,   272,   770,   771,   274,     0,   275,   276,
     277,   278,   772,   280,     0,   773,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   774,
     775,   301,     0,     0,     0,   776,   302,   777,     0,   303,
     778,   779,     0,   304,   305,   306,   780,   781,   782,     0,
       0,     0,     0,   783,   309,   784,     0,     0,  2294,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   786,     0,   336,   337,   338,   339,
     340,   787,   788,   341,   342,     0,   343,   344,   345,   346,
     347,   789,     0,   348,   349,     0,     0,     0,   790,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   791,   356,
     792,     0,   358,     0,   359,     0,   793,     0,   360,   361,
       0,   362,   794,     0,   363,   364,     0,     0,     0,   795,
     366,   367,   368,   796,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   797,   373,   374,   375,   798,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   799,   386,   387,     0,     0,     0,
       0,     0,   800,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   801,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   802,   415,   416,   417,   418,   803,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   804,   426,     0,
       0,   805,   428,   806,   429,     0,   430,   807,   808,   809,
     810,   811,   435,   436,   437,   438,   439,     0,   812,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   813,   814,
     815,   447,   448,     0,   816,   817,   449,     0,   450,   451,
    2295,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   818,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   819,   820,   470,   821,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   822,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   823,   824,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   825,     0,   826,
     514,   515,   516,   517,     0,   518,  2296,   828,   520,   521,
     522,   523,     0,   829,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   830,   831,   554,   555,
       0,     0,   556,   557,   832,   559,   560,   561,   833,   834,
     562,   563,   564,   565,   835,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   836,   572,   573,     0,   837,   838,
     839,   840,     0,     0,     0,     0,     0,   578,   579,     0,
     841,   842,   843,   581,   582,     0,   844,   583,   584,   845,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   846,   593,     0,     0,   847,   848,
     849,   594,   850,   595,     0,     0,   596,   851,     0,   852,
     597,     0,   598,   599,   853,   854,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   855,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   856,   857,     0,
     616,   617,   618,   858,   619,   620,   621,     0,   622,   859,
     860,   623,   861,   624,     0,   862,   863,   864,   865,   866,
     625,   626,     0,   867,   627,   868,   628,   869,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,  2297,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   870,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   871,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,   872,   873,     0,     0,     0,     0,   875,     0,
     876,     0,     0,     0,   877,     0,     0,     0,   878,   879,
     243,   244,     0,   760,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   761,     0,
     253,   254,   255,   256,   762,   258,     0,   259,     0,     0,
     763,   260,   764,   765,   766,   261,   767,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   768,
     769,   269,   270,     0,   271,   272,   770,   771,   274,     0,
     275,   276,   277,   278,   772,   280,     0,   773,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   774,   775,   301,     0,     0,     0,   776,   302,   777,
       0,   303,   778,   779,     0,   304,   305,   306,   780,   781,
     782,     0,     0,     0,     0,   783,   309,   784,     0,     0,
     785,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   786,     0,   336,   337,
     338,   339,   340,   787,   788,   341,   342,     0,   343,   344,
     345,   346,   347,   789,     0,   348,   349,     0,     0,     0,
     790,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     791,   356,   792,     0,   358,     0,   359,     0,   793,     0,
     360,   361,     0,   362,   794,     0,   363,   364,     0,     0,
       0,   795,   366,   367,   368,   796,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   797,   373,   374,   375,
     798,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   799,   386,   387,     0,
       0,     0,     0,     0,   800,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   802,   415,   416,   417,   418,   803,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   804,
     426,     0,     0,   805,   428,   806,   429,     0,   430,   807,
     808,   809,   810,   811,   435,   436,   437,   438,   439,     0,
     812,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     813,   814,   815,   447,   448,     0,   816,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   818,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   819,   820,   470,   821,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   822,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   823,
     824,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   825,
       0,   826,   514,   515,   516,   517,     0,   518,   827,   828,
     520,   521,   522,   523,     0,   829,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   830,   831,
     554,   555,     0,     0,   556,   557,   832,   559,   560,   561,
     833,   834,   562,   563,   564,   565,   835,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   836,   572,   573,     0,
     837,   838,   839,   840,     0,     0,     0,     0,     0,   578,
     579,     0,   841,   842,   843,   581,   582,     0,   844,   583,
     584,   845,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   846,   593,     0,     0,
     847,   848,   849,   594,   850,   595,     0,     0,   596,   851,
       0,   852,   597,     0,   598,   599,   853,   854,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   855,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   856,
     857,     0,   616,   617,   618,   858,   619,   620,   621,     0,
     622,   859,   860,   623,   861,   624,     0,   862,   863,   864,
     865,   866,   625,   626,     0,   867,   627,   868,   628,   869,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     870,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   871,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,   872,   873,   874,     0,     0,     0,
     875,     0,   876,     0,     0,     0,   877,     0,     0,     0,
     878,   879,   243,   244,     0,   760,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     761,     0,   253,   254,   255,   256,   762,   258,     0,   259,
       0,     0,   763,   260,   764,   765,   766,   261,   767,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   768,   769,   269,   270,     0,   271,   272,   770,   771,
     274,     0,   275,   276,   277,   278,   772,   280,     0,   773,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   774,   775,   301,     0,     0,     0,   776,
     302,   777,     0,   303,   778,   779,     0,   304,   305,   306,
     780,   781,   782,     0,     0,     0,     0,   783,   309,   784,
       0,     0,   785,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   786,     0,
     336,   337,   338,   339,   340,   787,   788,   341,   342,     0,
     343,   344,   345,   346,   347,   789,     0,   348,   349,     0,
       0,     0,   790,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   791,   356,   792,     0,   358,     0,   359,     0,
     793,     0,   360,   361,     0,   362,   794,     0,   363,   364,
       0,     0,     0,   795,   366,   367,   368,   796,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   797,   373,
     374,   375,   798,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   799,   386,
     387,     0,     0,     0,     0,     0,   800,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   801,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   802,   415,   416,   417,   418,
     803,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   804,   426,     0,     0,   805,   428,   806,   429,     0,
     430,   807,   808,   809,   810,   811,   435,   436,   437,   438,
     439,     0,   812,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   813,   814,   815,   447,   448,     0,   816,   817,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   818,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   819,   820,   470,   821,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   822,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   823,   824,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   825,     0,   826,   514,   515,   516,   517,     0,   518,
     827,   828,   520,   521,   522,   523,     0,   829,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     830,   831,   554,   555,     0,     0,   556,   557,   832,   559,
     560,   561,   833,   834,   562,   563,   564,   565,   835,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   836,   572,
     573,     0,   837,   838,   839,   840,     0,     0,     0,     0,
       0,   578,   579,     0,   841,   842,   843,   581,   582,     0,
     844,   583,   584,   845,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   846,   593,
       0,     0,   847,   848,   849,   594,   850,   595,     0,     0,
     596,   851,     0,   852,   597,     0,   598,   599,   853,   854,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   855,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   856,   857,     0,   616,   617,   618,   858,   619,   620,
     621,     0,   622,   859,   860,   623,   861,   624,     0,   862,
     863,   864,   865,   866,   625,   626,     0,   867,   627,   868,
     628,   869,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   870,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     871,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,     0,     0,     0,     0,   872,   873,  2757,     0,
       0,     0,   875,     0,   876,     0,     0,     0,   877,     0,
       0,     0,   878,   879,   243,   244,     0,   760,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   761,     0,   253,   254,   255,   256,   762,   258,
       0,   259,     0,     0,   763,   260,   764,   765,   766,   261,
     767,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   768,   769,   269,   270,     0,   271,   272,
     770,   771,   274,     0,   275,   276,   277,   278,   772,   280,
       0,   773,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   774,   775,   301,     0,     0,
       0,   776,   302,   777,     0,   303,   778,   779,     0,   304,
     305,   306,   780,   781,   782,     0,     0,     0,     0,   783,
     309,   784,     0,     0,   785,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     786,     0,   336,   337,   338,   339,   340,   787,   788,   341,
     342,     0,   343,   344,   345,   346,   347,   789,     0,   348,
     349,     0,     0,     0,   790,   351,  2813,   352,     0,     0,
       0,   353,     0,   354,   791,   356,   792,     0,   358,     0,
     359,     0,   793,     0,   360,   361,     0,   362,   794,     0,
     363,   364,     0,     0,     0,   795,   366,   367,   368,   796,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     797,   373,   374,   375,   798,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     799,   386,   387,     0,     0,     0,     0,     0,   800,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   801,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   802,   415,   416,
     417,   418,   803,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   804,   426,     0,     0,   805,   428,   806,
     429,     0,   430,   807,   808,   809,   810,   811,   435,   436,
     437,   438,   439,     0,   812,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   813,   814,   815,   447,   448,     0,
     816,   817,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   818,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   819,   820,   470,
     821,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   822,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   823,   824,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   825,     0,   826,   514,   515,   516,   517,
       0,   518,   827,   828,   520,   521,   522,   523,     0,   829,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   830,   831,   554,   555,     0,     0,   556,   557,
     832,   559,   560,   561,   833,   834,   562,   563,   564,   565,
     835,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     836,   572,   573,     0,   837,   838,   839,   840,     0,     0,
       0,     0,     0,   578,   579,     0,   841,   842,   843,   581,
     582,     0,   844,   583,   584,   845,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     846,   593,     0,     0,   847,   848,   849,   594,   850,   595,
       0,     0,   596,   851,     0,   852,   597,     0,   598,   599,
     853,   854,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   855,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   856,   857,     0,   616,   617,   618,   858,
     619,   620,   621,     0,   622,   859,   860,   623,   861,   624,
       0,   862,   863,   864,   865,   866,   625,   626,     0,   867,
     627,   868,   628,   869,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   870,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   871,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,   872,   873,
       0,     0,     0,     0,   875,     0,   876,     0,     0,     0,
     877,     0,     0,     0,   878,   879,   243,   244,     0,   760,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   761,     0,   253,   254,   255,   256,
     762,   258,     0,   259,     0,     0,   763,   260,   764,   765,
     766,   261,   767,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   768,   769,   269,   270,     0,
     271,   272,   770,   771,   274,     0,   275,   276,   277,   278,
     772,   280,     0,   773,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   774,   775,   301,
       0,     0,     0,   776,   302,   777,     0,   303,   778,   779,
       0,   304,   305,   306,   780,   781,   782,     0,     0,     0,
       0,   783,   309,   784,     0,     0,   785,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   786,     0,   336,   337,   338,   339,   340,   787,
     788,   341,   342,     0,   343,   344,   345,   346,   347,   789,
       0,   348,   349,     0,     0,     0,   790,   351,  2815,   352,
       0,     0,     0,   353,     0,   354,   791,   356,   792,     0,
     358,     0,   359,     0,   793,     0,   360,   361,     0,   362,
     794,     0,   363,   364,     0,     0,     0,   795,   366,   367,
     368,   796,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   797,   373,   374,   375,   798,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   799,   386,   387,     0,     0,     0,     0,     0,
     800,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   802,
     415,   416,   417,   418,   803,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   804,   426,     0,     0,   805,
     428,   806,   429,     0,   430,   807,   808,   809,   810,   811,
     435,   436,   437,   438,   439,     0,   812,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   813,   814,   815,   447,
     448,     0,   816,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   818,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   819,
     820,   470,   821,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   822,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   823,   824,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   825,     0,   826,   514,   515,
     516,   517,     0,   518,   827,   828,   520,   521,   522,   523,
       0,   829,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   830,   831,   554,   555,     0,     0,
     556,   557,   832,   559,   560,   561,   833,   834,   562,   563,
     564,   565,   835,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   836,   572,   573,     0,   837,   838,   839,   840,
       0,     0,     0,     0,     0,   578,   579,     0,   841,   842,
     843,   581,   582,     0,   844,   583,   584,   845,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   846,   593,     0,     0,   847,   848,   849,   594,
     850,   595,     0,     0,   596,   851,     0,   852,   597,     0,
     598,   599,   853,   854,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     855,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   856,   857,     0,   616,   617,
     618,   858,   619,   620,   621,     0,   622,   859,   860,   623,
     861,   624,     0,   862,   863,   864,   865,   866,   625,   626,
       0,   867,   627,   868,   628,   869,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   870,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   871,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
     872,   873,     0,     0,     0,     0,   875,     0,   876,     0,
       0,     0,   877,     0,     0,     0,   878,   879,   243,   244,
       0,   760,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   761,     0,   253,   254,
     255,   256,   762,   258,     0,   259,     0,     0,   763,   260,
     764,   765,   766,   261,   767,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   768,   769,   269,
     270,     0,   271,   272,   770,   771,   274,     0,   275,   276,
     277,   278,   772,   280,     0,   773,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   774,
     775,   301,     0,     0,     0,   776,   302,   777,     0,   303,
     778,   779,     0,   304,   305,   306,   780,   781,   782,     0,
       0,     0,     0,   783,   309,   784,     0,     0,   785,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   786,     0,   336,   337,   338,   339,
     340,   787,   788,   341,   342,     0,   343,   344,   345,   346,
     347,   789,     0,   348,   349,     0,     0,     0,   790,   351,
    2817,   352,     0,     0,     0,   353,     0,   354,   791,   356,
     792,     0,   358,     0,   359,     0,   793,     0,   360,   361,
       0,   362,   794,     0,   363,   364,     0,     0,     0,   795,
     366,   367,   368,   796,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   797,   373,   374,   375,   798,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   799,   386,   387,     0,     0,     0,
       0,     0,   800,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   801,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   802,   415,   416,   417,   418,   803,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   804,   426,     0,
       0,   805,   428,   806,   429,     0,   430,   807,   808,   809,
     810,   811,   435,   436,   437,   438,   439,     0,   812,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   813,   814,
     815,   447,   448,     0,   816,   817,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   818,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   819,   820,   470,   821,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   822,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   823,   824,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   825,     0,   826,
     514,   515,   516,   517,     0,   518,   827,   828,   520,   521,
     522,   523,     0,   829,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   830,   831,   554,   555,
       0,     0,   556,   557,   832,   559,   560,   561,   833,   834,
     562,   563,   564,   565,   835,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   836,   572,   573,     0,   837,   838,
     839,   840,     0,     0,     0,     0,     0,   578,   579,     0,
     841,   842,   843,   581,   582,     0,   844,   583,   584,   845,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   846,   593,     0,     0,   847,   848,
     849,   594,   850,   595,     0,     0,   596,   851,     0,   852,
     597,     0,   598,   599,   853,   854,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   855,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   856,   857,     0,
     616,   617,   618,   858,   619,   620,   621,     0,   622,   859,
     860,   623,   861,   624,     0,   862,   863,   864,   865,   866,
     625,   626,     0,   867,   627,   868,   628,   869,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   870,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   871,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,   872,   873,     0,     0,     0,     0,   875,     0,
     876,     0,     0,     0,   877,     0,     0,     0,   878,   879,
     243,   244,     0,   760,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   761,     0,
     253,   254,   255,   256,   762,   258,     0,   259,     0,     0,
     763,   260,   764,   765,   766,   261,   767,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   768,
     769,   269,   270,     0,   271,   272,   770,   771,   274,     0,
     275,   276,   277,   278,   772,   280,     0,   773,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   774,   775,   301,     0,     0,     0,   776,   302,   777,
       0,   303,   778,   779,     0,   304,   305,   306,   780,   781,
     782,     0,     0,     0,     0,   783,   309,   784,     0,     0,
     785,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   786,     0,   336,   337,
     338,   339,   340,   787,   788,   341,   342,     0,   343,   344,
     345,   346,   347,   789,     0,   348,   349,     0,     0,     0,
     790,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     791,   356,   792,     0,   358,     0,   359,     0,   793,     0,
     360,   361,     0,   362,   794,     0,   363,   364,     0,     0,
       0,   795,   366,   367,   368,   796,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   797,   373,   374,   375,
     798,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   799,   386,   387,     0,
       0,     0,     0,     0,   800,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   802,   415,   416,   417,   418,   803,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   804,
     426,     0,     0,   805,   428,   806,   429,     0,   430,   807,
     808,   809,   810,   811,   435,   436,   437,   438,   439,     0,
     812,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     813,   814,   815,   447,   448,     0,   816,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   818,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   819,   820,   470,   821,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   822,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   823,
     824,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   825,
       0,   826,   514,   515,   516,   517,     0,   518,   827,   828,
     520,   521,   522,   523,     0,   829,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   830,   831,
     554,   555,     0,     0,   556,   557,   832,   559,   560,   561,
     833,   834,   562,   563,   564,   565,   835,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   836,   572,   573,     0,
     837,   838,   839,   840,     0,     0,     0,     0,     0,   578,
     579,     0,   841,   842,   843,   581,   582,     0,   844,   583,
     584,   845,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   846,   593,     0,     0,
     847,   848,   849,   594,   850,   595,     0,     0,   596,   851,
       0,   852,   597,     0,   598,   599,   853,   854,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   855,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   856,
     857,     0,   616,   617,   618,   858,   619,   620,   621,     0,
     622,   859,   860,   623,   861,   624,     0,   862,   863,   864,
     865,   866,   625,   626,     0,   867,   627,   868,   628,   869,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     870,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   871,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,   872,   873,     0,     0,     0,     0,
     875,     0,   876,     0,     0,     0,   877,     0,     0,     0,
     878,   879,   243,   244,     0,   760,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     761,     0,   253,   254,   255,   256,   762,   258,     0,   259,
       0,     0,   763,   260,   764,   765,   766,   261,   767,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   768,   769,   269,   270,     0,   271,   272,   770,   771,
     274,     0,   275,   276,   277,   278,   772,   280,     0,   773,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   774,   775,   301,     0,     0,     0,   776,
     302,   777,     0,   303,   778,   779,     0,   304,   305,   306,
     780,   781,   782,     0,     0,     0,     0,   783,   309,   784,
       0,     0,   785,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   786,     0,
     336,   337,   338,   339,   340,   787,   788,   341,   342,     0,
     343,   344,   345,   346,   347,   789,     0,   348,   349,     0,
       0,     0,   790,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   791,   356,   792,     0,   358,     0,   359,     0,
     793,     0,   360,   361,     0,   362,   794,     0,   363,   364,
       0,     0,     0,   795,   366,   367,   368,   796,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   797,   373,
     374,   375,   798,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   799,   386,
     387,     0,     0,     0,     0,     0,   800,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   801,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   802,   415,   416,   417,   418,
     803,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   804,   426,     0,     0,   805,   428,   806,   429,     0,
     430,   807,   808,   809,   810,   811,   435,   436,   437,   438,
     439,     0,   812,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   813,   814,   815,   447,   448,     0,   816,   817,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   818,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   819,   820,   470,   821,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   822,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   823,   824,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   825,     0,   826,   514,   515,   516,   517,     0,   518,
     827,   828,   520,   521,   522,   523,     0,   829,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     830,   831,   554,   555,     0,     0,   556,   557,   832,   559,
     560,   561,   833,   834,   562,   563,   564,   565,   835,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   836,   572,
     573,     0,   837,   838,   839,   840,     0,     0,     0,     0,
       0,   578,   579,     0,   841,   842,   843,   581,   582,     0,
     844,   583,   584,   845,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   846,   593,
       0,     0,   847,   848,   849,   594,   850,   595,     0,     0,
     596,   851,     0,   852,   597,     0,   598,   599,   853,   854,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   855,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   856,   857,     0,   616,   617,   618,   858,   619,   620,
     621,     0,   622,   859,   860,   623,   861,   624,     0,   862,
     863,   864,   865,   866,   625,   626,     0,   867,   627,   868,
     628,   869,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   870,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     871,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,     0,     0,     0,     0,   872,   873,     0,     0,
       0,     0,   875,     0,  1279,     0,     0,     0,   877,     0,
       0,     0,   878,   879,   243,   244,     0,   760,   246,   247,
     248,   249,  2093,     0,   250,     0,     0,     0,     0,  2094,
       0,     0,   761,     0,   253,   254,   255,   256,   762,   258,
       0,   259,     0,     0,   763,   260,   764,   765,   766,   261,
     767,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   768,   769,   269,   270,     0,   271,   272,
     770,   771,   274,     0,   275,   276,   277,   278,   772,   280,
       0,   773,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   774,   775,   301,     0,     0,
       0,   776,   302,   777,     0,   303,   778,   779,     0,   304,
     305,   306,   780,   781,   782,     0,     0,     0,     0,   783,
     309,   784,     0,     0,   785,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     786,     0,   336,   337,   338,   339,   340,   787,   788,   341,
     342,     0,   343,   344,   345,   346,   347,   789,     0,   348,
     349,     0,     0,     0,   790,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   791,   356,   792,     0,   358,     0,
     359,     0,   793,     0,   360,   361,     0,   362,   794,     0,
     363,   364,     0,     0,     0,   795,   366,   367,   368,   796,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     797,   373,   374,   375,   798,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     799,   386,   387,     0,     0,     0,     0,     0,   800,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   801,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   802,   415,   416,
     417,   418,   803,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   804,   426,     0,     0,   805,   428,   806,
     429,     0,   430,   807,   808,   809,   810,   811,   435,   436,
     437,   438,   439,     0,   812,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   813,     0,   815,   447,   448,     0,
     816,   817,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   818,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   819,   820,   470,
     821,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   822,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   823,   824,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   825,     0,   826,   514,   515,   516,   517,
       0,   518,   827,   828,   520,   521,   522,   523,     0,   829,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   830,   831,   554,   555,     0,     0,   556,   557,
     832,   559,   560,   561,   833,   834,   562,   563,   564,   565,
     835,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     836,   572,   573,     0,   837,   838,   839,   840,     0,     0,
       0,     0,     0,   578,   579,     0,   841,   842,   843,   581,
     582,     0,   844,   583,   584,   845,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     846,   593,     0,     0,   847,   848,   849,   594,   850,   595,
       0,     0,   596,   851,     0,   852,   597,     0,   598,   599,
     853,   854,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   855,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   856,   857,     0,   616,   617,   618,   858,
     619,   620,   621,     0,   622,   859,   860,   623,   861,   624,
       0,   862,   863,   864,   865,   866,   625,   626,     0,   867,
     627,   868,   628,   869,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   870,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   871,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,   872,   873,
       0,     0,     0,     0,   875,     0,   876,     0,     0,     0,
     877,     0,     0,     0,   878,   879,   243,   244,     0,   760,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   761,     0,   253,   254,   255,   256,
     762,   258,     0,   259,     0,     0,   763,   260,   764,   765,
     766,   261,   767,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   768,   769,   269,   270,     0,
     271,   272,   770,   771,   274,     0,   275,   276,   277,   278,
     772,   280,     0,   773,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   774,   775,   301,
       0,     0,     0,   776,   302,   777,     0,   303,   778,   779,
       0,   304,   305,   306,   780,   781,   782,     0,     0,     0,
       0,   783,   309,   784,     0,     0,  2347,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   786,     0,   336,   337,   338,   339,   340,   787,
     788,   341,   342,     0,   343,   344,   345,   346,   347,   789,
       0,   348,   349,     0,     0,     0,   790,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   791,   356,   792,     0,
     358,     0,   359,     0,   793,     0,   360,   361,     0,   362,
     794,     0,   363,   364,     0,     0,     0,   795,   366,   367,
     368,   796,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   797,   373,   374,   375,   798,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   799,   386,   387,     0,     0,     0,     0,     0,
     800,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   802,
     415,   416,   417,   418,   803,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   804,   426,     0,     0,   805,
     428,   806,   429,     0,   430,   807,   808,   809,   810,   811,
     435,   436,   437,   438,   439,     0,   812,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   813,   814,   815,   447,
     448,     0,   816,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   818,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   819,
     820,   470,   821,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   822,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   823,   824,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   825,     0,   826,   514,   515,
     516,   517,     0,   518,   827,   828,   520,   521,   522,   523,
       0,   829,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   830,   831,   554,   555,     0,     0,
     556,   557,   832,   559,   560,   561,   833,   834,   562,   563,
     564,   565,   835,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   836,   572,   573,     0,   837,   838,   839,   840,
       0,     0,     0,     0,     0,   578,   579,     0,   841,   842,
     843,   581,   582,     0,   844,   583,   584,   845,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   846,   593,     0,     0,   847,   848,   849,   594,
     850,   595,     0,     0,   596,   851,     0,   852,   597,     0,
     598,   599,   853,   854,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     855,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   856,   857,     0,   616,   617,
     618,   858,   619,   620,   621,     0,   622,   859,   860,   623,
     861,   624,     0,   862,   863,   864,   865,   866,   625,   626,
       0,   867,   627,   868,   628,   869,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   870,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   871,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
     872,   873,     0,     0,     0,     0,   875,     0,   876,     0,
       0,     0,   877,     0,     0,     0,   878,   879,   243,   244,
       0,   760,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   761,     0,   253,   254,
     255,   256,   762,   258,     0,   259,     0,     0,   763,   260,
     764,   765,   766,   261,   767,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   768,   769,   269,
     270,     0,   271,   272,   770,   771,   274,     0,   275,   276,
     277,   278,   772,   280,     0,   773,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   774,
     775,   301,     0,     0,     0,   776,   302,   777,     0,   303,
     778,   779,     0,   304,   305,   306,   780,   781,   782,     0,
       0,     0,     0,   783,   309,   784,     0,     0,   785,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   786,     0,   336,   337,   338,   339,
     340,   787,   788,   341,   342,     0,   343,   344,   345,   346,
     347,   789,     0,   348,   349,     0,     0,     0,   790,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   791,   356,
     792,     0,   358,     0,   359,     0,   793,     0,   360,   361,
       0,   362,   794,     0,   363,   364,     0,     0,     0,   795,
     366,   367,   368,   796,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   797,   373,   374,   375,  3446,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   799,   386,   387,     0,     0,     0,
       0,     0,   800,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   801,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   802,   415,   416,   417,   418,   803,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   804,   426,     0,
       0,   805,   428,   806,   429,     0,   430,   807,   808,   809,
     810,   811,   435,   436,   437,   438,   439,     0,   812,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   813,   814,
     815,   447,   448,     0,   816,   817,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   818,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   819,   820,   470,   821,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   822,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   823,   824,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   825,     0,   826,
     514,   515,   516,   517,     0,   518,   827,   828,   520,   521,
     522,   523,     0,   829,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   830,   831,   554,   555,
       0,     0,   556,   557,   832,   559,   560,   561,   833,   834,
     562,   563,   564,   565,   835,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   836,   572,   573,     0,   837,   838,
     839,   840,     0,     0,     0,     0,     0,   578,   579,     0,
     841,   842,   843,   581,   582,     0,   844,   583,   584,   845,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   846,   593,     0,     0,   847,   848,
     849,   594,   850,   595,     0,     0,   596,   851,     0,   852,
     597,     0,   598,   599,   853,   854,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   855,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   856,   857,     0,
     616,   617,   618,   858,   619,   620,   621,     0,   622,   859,
     860,   623,   861,   624,     0,   862,   863,   864,   865,   866,
     625,   626,     0,   867,   627,   868,   628,   869,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   870,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   871,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,   872,   873,     0,     0,     0,     0,   875,     0,
     876,     0,     0,     0,   877,     0,     0,     0,   878,   879,
     243,   244,     0,   760,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   761,     0,
     253,   254,   255,   256,   762,   258,     0,   259,     0,     0,
     763,   260,   764,   765,   766,   261,   767,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,   768,
     769,   269,   270,     0,   271,   272,   770,   771,   274,     0,
     275,   276,   277,   278,   772,   280,     0,   773,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,   774,   775,   301,     0,     0,     0,   776,   302,   777,
       0,   303,   778,   779,     0,   304,   305,   306,   780,   781,
     782,     0,     0,     0,     0,   783,   309,   784,     0,     0,
     785,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,   786,     0,   336,   337,
     338,   339,   340,   787,   788,   341,   342,     0,   343,   344,
     345,   346,   347,   789,     0,   348,   349,     0,     0,     0,
     790,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     791,   356,   792,     0,   358,     0,   359,     0,   793,     0,
     360,   361,     0,   362,   794,     0,   363,   364,     0,     0,
       0,   795,   366,   367,   368,   796,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,   797,   373,   374,   375,
    3517,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,   799,   386,   387,     0,
       0,     0,     0,     0,   800,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,   802,   415,   416,   417,   418,   803,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   804,
     426,     0,     0,   805,   428,   806,   429,     0,   430,   807,
     808,   809,   810,   811,   435,   436,   437,   438,   439,     0,
     812,   440,   441,     0,     0,   442,   443,   444,   445,   446,
     813,   814,   815,   447,   448,     0,   816,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   818,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   819,   820,   470,   821,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   822,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,   823,
     824,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   825,
       0,   826,   514,   515,   516,   517,     0,   518,   827,   828,
     520,   521,   522,   523,     0,   829,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,   830,   831,
     554,   555,     0,     0,   556,   557,   832,   559,   560,   561,
     833,   834,   562,   563,   564,   565,   835,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   836,   572,   573,     0,
     837,   838,   839,   840,     0,     0,     0,     0,     0,   578,
     579,     0,   841,   842,   843,   581,   582,     0,   844,   583,
     584,   845,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   846,   593,     0,     0,
     847,   848,   849,   594,   850,   595,     0,     0,   596,   851,
       0,   852,   597,     0,   598,   599,   853,   854,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   855,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,   856,
     857,     0,   616,   617,   618,   858,   619,   620,   621,     0,
     622,   859,   860,   623,   861,   624,     0,   862,   863,   864,
     865,   866,   625,   626,     0,   867,   627,   868,   628,   869,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     870,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   871,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,   872,   873,     0,     0,     0,     0,
     875,     0,   876,     0,     0,     0,   877,     0,     0,     0,
     878,   879,   243,   244,     0,   760,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     761,     0,   253,   254,   255,   256,   762,   258,     0,   259,
       0,     0,   763,   260,   764,   765,   766,   261,   767,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,   768,   769,   269,   270,     0,   271,   272,   770,   771,
     274,     0,   275,   276,   277,   278,   772,   280,     0,   773,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,   774,   775,   301,     0,     0,     0,   776,
     302,   777,     0,   303,   778,   779,     0,   304,   305,   306,
     780,   781,   782,     0,     0,     0,     0,   783,   309,   784,
       0,     0,   785,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,   786,     0,
     336,   337,   338,   339,   340,   787,   788,   341,   342,     0,
     343,   344,   345,   346,   347,   789,     0,   348,   349,     0,
       0,     0,   790,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   791,   356,   792,     0,   358,     0,   359,     0,
     793,     0,   360,   361,     0,   362,   794,     0,   363,   364,
       0,     0,     0,   795,   366,   367,   368,   796,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,   797,   373,
     374,   375,   798,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,   799,   386,
     387,     0,     0,     0,     0,     0,   800,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   801,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,   802,   415,   416,   417,   418,
     803,   419,   420,  5313,     0,     0,     0,   421,   422,   423,
     424,   804,   426,     0,     0,   805,   428,   806,   429,     0,
     430,   807,   808,   809,   810,   811,   435,   436,   437,   438,
     439,     0,   812,   440,   441,     0,     0,   442,   443,   444,
     445,   446,   813,     0,   815,   447,   448,     0,   816,   817,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   818,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   819,   820,   470,   821,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   822,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,   823,   824,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   825,     0,   826,   514,   515,   516,   517,     0,   518,
     827,   828,   520,   521,   522,   523,     0,   829,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
     830,   831,   554,   555,     0,     0,   556,   557,   832,   559,
     560,   561,   833,   834,   562,   563,   564,   565,   835,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   836,   572,
     573,     0,   837,   838,   839,   840,     0,     0,     0,     0,
       0,   578,   579,     0,   841,   842,   843,   581,   582,     0,
     844,   583,   584,   845,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   846,   593,
       0,     0,   847,   848,   849,   594,   850,   595,     0,     0,
     596,   851,     0,   852,   597,     0,   598,   599,   853,   854,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   855,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,   856,   857,     0,   616,   617,   618,   858,   619,   620,
     621,     0,   622,   859,   860,   623,   861,   624,     0,   862,
     863,   864,   865,   866,   625,   626,     0,   867,   627,   868,
     628,   869,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   870,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     871,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,     0,     0,     0,     0,   872,   873,     0,     0,
       0,     0,   875,     0,   876,     0,     0,     0,   877,     0,
       0,     0,   878,   879,   243,   244,     0,   760,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   761,     0,   253,   254,   255,   256,   762,   258,
       0,   259,     0,     0,   763,   260,   764,   765,   766,   261,
     767,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,   768,   769,   269,   270,     0,   271,   272,
     770,   771,   274,     0,   275,   276,   277,   278,   772,   280,
       0,   773,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,   774,   775,   301,     0,     0,
       0,   776,   302,   777,     0,   303,   778,   779,     0,   304,
     305,   306,   780,   781,   782,     0,     0,     0,     0,   783,
     309,   784,     0,     0,   785,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
     786,     0,   336,   337,   338,   339,   340,   787,   788,   341,
     342,     0,   343,   344,   345,   346,   347,   789,     0,   348,
     349,     0,     0,     0,   790,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   791,   356,   792,     0,   358,     0,
     359,     0,   793,     0,   360,   361,     0,   362,   794,     0,
     363,   364,     0,     0,     0,   795,   366,   367,   368,   796,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
     797,   373,   374,   375,   798,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
     799,   386,   387,     0,     0,     0,     0,     0,   800,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,   801,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,   802,   415,   416,
     417,   418,   803,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   804,   426,     0,     0,   805,   428,   806,
     429,     0,   430,   807,   808,   809,   810,   811,   435,   436,
     437,   438,   439,     0,   812,   440,   441,     0,     0,   442,
     443,   444,   445,   446,   813,     0,   815,   447,   448,     0,
     816,   817,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,   818,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   819,   820,   470,
     821,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   822,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,   823,   824,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   825,     0,   826,   514,   515,   516,   517,
       0,   518,   827,   828,   520,   521,   522,   523,     0,   829,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,   830,   831,   554,   555,     0,     0,   556,   557,
     832,   559,   560,   561,   833,   834,   562,   563,   564,   565,
     835,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     836,   572,   573,     0,   837,   838,   839,   840,     0,     0,
       0,     0,     0,   578,   579,     0,   841,   842,   843,   581,
     582,     0,   844,   583,   584,   845,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     846,   593,     0,     0,   847,   848,   849,   594,   850,   595,
       0,     0,   596,   851,     0,   852,   597,     0,   598,   599,
     853,   854,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   855,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,   856,   857,     0,   616,   617,   618,   858,
     619,   620,   621,     0,   622,   859,   860,   623,   861,   624,
       0,   862,   863,   864,   865,   866,   625,   626,     0,   867,
     627,   868,   628,   869,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   870,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   871,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,   872,   873,
       0,     0,     0,     0,   875,     0,   876,     0,     0,     0,
     877,     0,     0,     0,   878,   879,   243,   244,     0,   760,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   761,     0,   253,   254,   255,   256,
     762,   258,     0,   259,     0,     0,   763,   260,   764,   765,
     766,   261,   767,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,   768,   769,   269,   270,     0,
     271,   272,   770,   771,   274,     0,   275,   276,   277,   278,
     772,   280,     0,   773,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,   774,   775,   301,
       0,     0,     0,   776,   302,   777,     0,   303,   778,   779,
       0,   304,   305,   306,   780,   781,   782,     0,     0,     0,
       0,   783,   309,   784,     0,     0,   785,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,   786,     0,   336,   337,   338,   339,   340,   787,
     788,   341,   342,     0,   343,   344,   345,   346,   347,   789,
       0,   348,   349,     0,     0,     0,   790,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   791,   356,   792,     0,
     358,     0,   359,     0,   793,     0,   360,   361,     0,   362,
     794,     0,   363,   364,     0,     0,     0,   795,   366,   367,
     368,   796,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,   797,   373,   374,   375,  2111,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,   799,   386,   387,     0,     0,     0,     0,     0,
     800,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,   801,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,   802,
     415,   416,   417,   418,   803,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   804,   426,     0,     0,   805,
     428,   806,   429,     0,   430,   807,   808,   809,   810,   811,
     435,   436,   437,   438,   439,     0,   812,   440,   441,     0,
       0,   442,   443,   444,   445,   446,   813,     0,   815,   447,
     448,     0,   816,   817,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   818,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   819,
     820,   470,   821,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   822,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,   823,   824,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   825,     0,   826,   514,   515,
     516,   517,     0,   518,   827,   828,   520,   521,   522,   523,
       0,   829,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,   830,   831,   554,   555,     0,     0,
     556,   557,   832,   559,   560,   561,   833,   834,   562,   563,
     564,   565,   835,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   836,   572,   573,     0,   837,   838,   839,   840,
       0,     0,     0,     0,     0,   578,   579,     0,   841,   842,
     843,   581,   582,     0,   844,   583,   584,   845,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   846,   593,     0,     0,   847,   848,   849,   594,
     850,   595,     0,     0,   596,   851,     0,   852,   597,     0,
     598,   599,   853,   854,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     855,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,   856,   857,     0,   616,   617,
     618,   858,   619,   620,   621,     0,   622,   859,   860,   623,
     861,   624,     0,   862,   863,   864,   865,   866,   625,   626,
       0,   867,   627,   868,   628,   869,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   870,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   871,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
     872,   873,     0,     0,     0,     0,   875,     0,   876,     0,
       0,     0,   877,     0,     0,     0,   878,   879,   243,   244,
       0,   760,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   761,     0,   253,   254,
     255,   256,   762,   258,     0,   259,     0,     0,   763,   260,
     764,   765,   766,   261,   767,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,   768,   769,   269,
     270,     0,   271,   272,   770,   771,   274,     0,   275,   276,
     277,   278,   772,   280,     0,   773,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,   774,
     775,   301,     0,     0,     0,   776,   302,   777,     0,   303,
     778,   779,     0,   304,   305,   306,   780,   781,   782,     0,
       0,     0,     0,   783,   309,   784,     0,     0,   785,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,   786,     0,   336,   337,   338,   339,
     340,   787,   788,   341,   342,     0,   343,   344,   345,   346,
     347,   789,     0,   348,   349,     0,     0,     0,   790,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   791,   356,
     792,     0,   358,     0,   359,     0,   793,     0,   360,   361,
       0,   362,   794,     0,   363,   364,     0,     0,     0,   795,
     366,   367,   368,   796,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,   797,   373,   374,   375,  2113,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,   799,   386,   387,     0,     0,     0,
       0,     0,   800,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,   801,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,   802,   415,   416,   417,   418,   803,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   804,   426,     0,
       0,   805,   428,   806,   429,     0,   430,   807,   808,   809,
     810,   811,   435,   436,   437,   438,   439,     0,   812,   440,
     441,     0,     0,   442,   443,   444,   445,   446,   813,     0,
     815,   447,   448,     0,   816,   817,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   818,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   819,   820,   470,   821,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   822,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,   823,   824,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   825,     0,   826,
     514,   515,   516,   517,     0,   518,   827,   828,   520,   521,
     522,   523,     0,   829,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,   830,   831,   554,   555,
       0,     0,   556,   557,   832,   559,   560,   561,   833,   834,
     562,   563,   564,   565,   835,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   836,   572,   573,     0,   837,   838,
     839,   840,     0,     0,     0,     0,     0,   578,   579,     0,
     841,   842,   843,   581,   582,     0,   844,   583,   584,   845,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   846,   593,     0,     0,   847,   848,
     849,   594,   850,   595,     0,     0,   596,   851,     0,   852,
     597,     0,   598,   599,   853,   854,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   855,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,   856,   857,     0,
     616,   617,   618,   858,   619,   620,   621,     0,   622,   859,
     860,   623,   861,   624,     0,   862,   863,   864,   865,   866,
     625,   626,     0,   867,   627,   868,   628,   869,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   870,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   871,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,   872,   873,     0,     0,     0,     0,   875,     0,
     876,     0,     0,     0,   877,     0,     0,     0,   878,   879,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,    42,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
      49,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,    54,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,    55,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,  2983,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,  2984,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,   243,   244,     0,   245,   246,   247,
     248,   249,  2985,     0,   250,     0,     0,     0,     0,   251,
       0,  2986,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,  2982,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,  2983,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,  2984,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,   243,   244,
       0,   245,   246,   247,   248,   249,  2985,     0,   250,     0,
       0,     0,     0,   251,     0,  2986,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,  2983,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,  2984,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
    2985,   250,     0,     0,     0,     0,   251,     0,     0,  2986,
       0,   253,   254,   255,   256,   257,   258,     0,  -564,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
    5148,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,  5149,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
       0,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,  5150,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,  5151,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,  5152,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,  5153,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,  -519,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,  5154,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
    -519,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,  5155,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,  -519,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,  5552,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,   764,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,  2908,     0,     0,     0,     0,   308,   309,   784,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,  2909,   575,   576,  2910,     0,     0,     0,     0,     0,
     578,   579,     0,     0,   842,   580,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,   877,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,   801,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,   817,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,   818,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,   844,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,  2061,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
    1698,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,  1142,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,  1699,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,  1700,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,  1026,  1027,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,  1028,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,  1029,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,  1030,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,  1031,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,  1032,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
    1033,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,  1034,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,  1035,  1036,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,  1037,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
    1038,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,  1039,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,  1142,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1360,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1142,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,  1537,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,  1026,  1027,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1545,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,  1029,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,  1030,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,  1031,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,  1033,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,  1035,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,  1037,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,  1039,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1142,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
    1700,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,  2172,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,  2173,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,  5490,   251,     0,  5491,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,  2173,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,  5491,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,    42,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,    49,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,    54,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
      55,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,  1127,  4172,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,  4409,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
    4413,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
    2483,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
    2484,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,  1866,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,  1867,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,  4009,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,    42,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,  2486,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,    49,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
      54,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,    55,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,  1127,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,  2983,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,  2984,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,  2985,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,  1283,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,  3205,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,  3542,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,  4294,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,     0,
       0,     0,     0,     0,   243,   244,  2131,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,     0,     0,     0,     0,     0,   243,   244,
    2923,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,     0,     0,     0,
       0,     0,   243,   244,  3575,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,     0,     0,     0,     0,   243,   244,  3756,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,     0,     0,     0,     0,     0,
     243,   244,  4148,   245,   246,   247,   248,   249,   936,   937,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,   938,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,   939,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,   940,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   941,   333,   334,   942,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   943,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,   944,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
     945,     0,   372,     0,     0,     0,   946,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,   947,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
     948,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   949,   477,   478,   479,   950,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,   951,     0,   489,   490,   491,
     492,   493,     0,   952,   495,     0,   496,   497,   498,     0,
       0,   953,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,   954,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
     955,   956,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   957,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,   958,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,   959,   591,   960,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,     0,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,  1008,   937,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,   938,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,   939,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,   940,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   941,   333,   334,   942,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   943,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,   944,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,   945,
       0,   372,     0,     0,     0,   946,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,   947,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   948,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   949,   477,   478,   479,  1009,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,   951,     0,   489,   490,   491,   492,
     493,     0,   952,   495,     0,   496,   497,   498,     0,     0,
     953,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,   954,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,   955,
     956,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   957,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
     958,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,   959,   591,   960,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,     0,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,   937,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,   938,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,   939,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,   940,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     941,   333,   334,   942,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   943,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,   944,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,   945,     0,
     372,     0,     0,     0,   946,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,   947,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,   948,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,     0,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   949,   477,   478,   479,     0,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,   951,     0,   489,   490,   491,   492,   493,
       0,   952,   495,     0,   496,   497,   498,     0,     0,   953,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,   954,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,   955,   956,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     957,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,   958,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,   959,   591,   960,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
       0,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,  3223,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
    3224,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,  3225,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,  3226,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,  1391,  1392,     0,
     447,   448,     0,     0,  3227,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,  5540,  1003,  5541,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,  3228,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,  1365,
    1366,   251,  1367,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,  1368,     0,     0,
    1369,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,  1370,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,  1371,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,  1514,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1515,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
    1516,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1142,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,  1517,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,  2483,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,  2484,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,  1866,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,  1867,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,  2486,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,  1539,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,  1540,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1142,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,  1714,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,  1715,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,   818,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
    1716,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,  1514,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,  3874,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
    1142,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,  1141,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,  1142,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,  1143,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,  1141,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,  1142,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,  1568,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,  1142,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,  1637,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,  1638,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,  1410,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,  3005,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1142,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1142,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,  3294,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,  1514,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1142,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1142,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,  3930,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1142,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,  5461,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,  5462,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,  1003,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,  1110,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
    1180,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,  1181,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,  1370,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,  2444,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  2579,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  3207,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,  3230,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,  3259,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,  3324,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
    2194,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,  2195,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,  5211,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,  1545,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,     0,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,     0,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,     0,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,  1546,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,     0,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,     0,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1545,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
       0,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,     0,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,     0,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,     0,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,     0,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,  1530,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  1531,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,     0,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,     0,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,   947,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,  1532,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
       0,   477,   478,   479,     0,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,     0,   495,
       0,   496,   497,   498,     0,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,     0,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,     0,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,  5294,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  5295,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,     0,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,     0,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,   947,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,  5296,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,     0,
     477,   478,   479,     0,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,     0,   495,     0,
     496,   497,   498,     0,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,     0,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,     0,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,  2254,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,     0,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,     0,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,   947,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,  2255,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,     0,   477,
     478,   479,     0,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,     0,   495,     0,   496,
     497,   498,     0,     0,     0,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,     0,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,     0,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
    3084,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,     0,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
       0,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,   947,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,  3085,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,     0,   477,   478,
     479,     0,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,     0,   495,     0,   496,   497,
     498,     0,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,     0,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,     0,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,     0,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,     0,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
     947,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,     0,   477,   478,   479,
       0,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,     0,   495,     0,   496,   497,   498,
       0,     0,     0,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,     0,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,     0,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,     0,     0,
     253,   254,   255,   256,   257,   258,     0,  -564,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,  5148,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,  5149,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,  -534,  -534,   322,     0,  -534,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,  5150,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,  5151,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,  5152,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,  5153,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,  -519,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,  5154,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,  -519,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,  5155,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
    -519,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,     0,     0,   253,
     254,   255,   256,   257,   258,     0,  -564,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,     0,     0,     0,     0,   268,  5148,     0,
     269,   270,     0,   271,   272,     0,     0,     0,     0,   275,
     276,   277,  5149,   279,   280,     0,   281,   282,     0,   283,
     284,     0,   286,     0,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,     0,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,     0,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,     0,     0,     0,
     319,   320,   321,     0,  -555,     0,   322,     0,  -555,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,     0,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,  5150,   343,   344,   345,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,     0,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,  5151,     0,   369,     0,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,     0,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,  5152,     0,     0,   381,     0,   382,     0,     0,     0,
     384,     0,     0,   385,  5153,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,  -519,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,  5154,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,     0,   498,  -519,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,     0,
       0,   508,   509,     0,   510,   511,   512,  5155,   513,     0,
       0,     0,   515,   516,   517,     0,   518,     0,   519,   520,
       0,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
       0,     0,     0,   533,     0,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,     0,   550,   551,   552,   553,     0,     0,     0,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,     0,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,     0,     0,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,  -555,     0,  -519,
       0,     0,     0,   602,   603,   604,     0,   605,     0,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,     0,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,     0,     0,   253,   254,
     255,   256,   257,   258,     0,  -564,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,     0,     0,     0,     0,   268,  5148,     0,   269,
     270,     0,   271,   272,     0,     0,     0,     0,   275,   276,
     277,  5149,   279,   280,     0,   281,   282,     0,   283,   284,
       0,   286,     0,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,     0,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,     0,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,     0,     0,     0,   319,
     320,   321,     0,  -552,     0,   322,     0,  -552,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,     0,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,  5150,   343,   344,   345,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,     0,   361,
       0,     0,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,  5151,     0,   369,     0,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,     0,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
    5152,     0,     0,   381,     0,   382,     0,     0,     0,   384,
       0,     0,   385,  5153,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,  -519,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,  5154,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,     0,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,     0,   498,  -519,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,     0,     0,
     508,   509,     0,   510,   511,   512,  5155,   513,     0,     0,
       0,   515,   516,   517,     0,   518,     0,   519,   520,     0,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,     0,
       0,     0,   533,     0,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,     0,   550,   551,   552,   553,     0,     0,     0,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,     0,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,     0,     0,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,  -552,     0,  -519,     0,
       0,     0,   602,   603,   604,     0,   605,     0,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,     0,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,     0,     0,   253,   254,   255,
     256,   257,   258,     0,  -564,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,     0,     0,     0,     0,   268,  5148,     0,   269,   270,
       0,   271,   272,     0,     0,     0,     0,   275,   276,   277,
    5149,   279,   280,     0,   281,   282,     0,   283,   284,     0,
     286,     0,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,     0,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,     0,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,     0,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,  5405,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,  5150,   343,   344,   345,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,     0,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,  5151,     0,   369,     0,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,     0,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,  5152,
       0,     0,   381,     0,   382,     0,     0,     0,   384,     0,
       0,   385,  5153,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,  -519,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,  5154,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,     0,   498,  -519,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,     0,     0,   508,
     509,     0,   510,   511,   512,  5155,   513,     0,     0,     0,
     515,   516,   517,     0,   518,     0,   519,   520,     0,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
       0,   533,     0,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
       0,   550,   551,   552,   553,     0,     0,     0,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,     0,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,     0,     0,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,  -519,     0,     0,
       0,   602,   603,   604,     0,   605,     0,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,     0,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,     0,     0,   253,   254,   255,   256,
     257,   258,     0,  -564,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
       0,     0,     0,     0,   268,  5148,     0,   269,   270,     0,
     271,   272,     0,     0,     0,     0,   275,   276,   277,  5149,
     279,   280,     0,   281,   282,     0,   283,   284,     0,   286,
       0,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,     0,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,     0,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,     0,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,  -557,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,  5150,   343,   344,   345,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,     0,   361,     0,     0,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,  5151,     0,   369,     0,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,     0,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,  5152,     0,
       0,   381,     0,   382,     0,     0,     0,   384,     0,     0,
     385,  5153,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,  -519,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,  5154,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,     0,     0,     0,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,     0,   498,  -519,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,     0,     0,   508,   509,
       0,   510,   511,   512,  5155,   513,     0,     0,     0,   515,
     516,   517,     0,   518,     0,   519,   520,     0,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,     0,
     533,     0,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,     0,
     550,   551,   552,   553,     0,     0,     0,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
       0,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,     0,     0,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,  -519,     0,     0,     0,
     602,   603,   604,     0,   605,     0,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,     0,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,     0,     0,   253,   254,   255,   256,   257,
     258,     0,  -564,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,     0,
       0,     0,     0,   268,  5148,     0,   269,   270,     0,   271,
     272,     0,     0,     0,     0,   275,   276,   277,  5149,   279,
     280,     0,   281,   282,     0,   283,   284,     0,   286,     0,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,     0,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,     0,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,     0,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,  5466,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,  5150,   343,   344,   345,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,     0,   361,     0,     0,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
    5151,     0,   369,     0,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,     0,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,  5152,     0,     0,
     381,     0,   382,     0,     0,     0,   384,     0,     0,   385,
    5153,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,  -519,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
    5154,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,     0,   498,  -519,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,     0,     0,   508,   509,     0,
     510,   511,   512,  5155,   513,     0,     0,     0,   515,   516,
     517,     0,   518,     0,   519,   520,     0,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,     0,   533,
       0,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,     0,   550,
     551,   552,   553,     0,     0,     0,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,     0,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
       0,     0,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,  -519,     0,     0,     0,   602,
     603,   604,     0,   605,     0,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,     0,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,     0,     0,   253,   254,   255,   256,   257,   258,
       0,  -564,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,     0,     0,
       0,     0,   268,  5148,     0,   269,   270,     0,   271,   272,
       0,     0,     0,     0,   275,   276,   277,  5149,   279,   280,
       0,   281,   282,     0,   283,   284,     0,   286,     0,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,     0,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
       0,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,     0,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,  5506,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,  5150,   343,   344,   345,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,     0,   361,     0,     0,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,  5151,
       0,   369,     0,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,     0,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,  5152,     0,     0,   381,
       0,   382,     0,     0,     0,   384,     0,     0,   385,  5153,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,  -519,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,  5154,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,     0,   498,  -519,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,     0,     0,   508,   509,     0,   510,
     511,   512,  5155,   513,     0,     0,     0,   515,   516,   517,
       0,   518,     0,   519,   520,     0,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,     0,   533,     0,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,     0,   550,   551,
     552,   553,     0,     0,     0,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,     0,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,     0,
       0,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,  -519,     0,     0,     0,   602,   603,
     604,     0,   605,     0,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,     0,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,     0,     0,   253,   254,   255,   256,   257,   258,     0,
    -564,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,  5148,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,  5149,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,  -538,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
    5150,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,  5151,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,  5152,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,  5153,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
    -519,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,  5154,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,  -519,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,  5155,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,  -519,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
       0,     0,   253,   254,   255,   256,   257,   258,     0,  -564,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,     0,     0,     0,     0,
     268,  5148,     0,   269,   270,     0,   271,   272,     0,     0,
       0,     0,   275,   276,   277,  5149,   279,   280,     0,   281,
     282,     0,   283,   284,     0,   286,     0,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
       0,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,     0,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
       0,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,     0,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,  5150,
     343,   344,   345,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,     0,   361,     0,     0,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,  5151,     0,   369,
       0,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,     0,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,  5152,     0,     0,   381,     0,   382,
       0,     0,     0,   384,     0,     0,   385,  5153,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,  -519,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,  5154,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,     0,
     498,  -519,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,     0,     0,   508,   509,     0,   510,   511,   512,
    5155,   513,     0,     0,     0,   515,   516,   517,     0,   518,
       0,   519,   520,     0,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,     0,   533,     0,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,     0,   550,   551,   552,   553,
       0,     0,     0,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,     0,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,     0,     0,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,  -519,     0,     0,     0,   602,   603,   604,     0,
     605,     0,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,     0,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,  -564,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
    5148,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,  5149,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
       0,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,  5150,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,  5151,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,  5152,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,  5153,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,  -519,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,  5154,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
    -519,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,  5155,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,  5408,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,  -519,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,     0,     0,
     253,   254,   255,   256,   257,   258,     0,     0,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,     0,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,  1780,
       0,     0,     0,     0,  1781,     0,  1782,     0,     0,  1783,
       0,     0,     0,     0,     0,     0,     0,     0,  1760,  1784,
    1785,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3808,  3809,     0,     0,     0,     0,  3810,     0,  3811,     0,
    3812,  3813,     0,     0,     0,     0,     0,     0,     0,     0,
    1786,     0,     0,     0,     0,  1787,  1788,     0,  3814,     0,
       0,  1789,     0,     0,     0,     0,     0,     0,     0,  1790,
       0,     0,     0,     0,     0,  1791,  1792,  3301,     0,  1793,
       0,     0,  1781,     0,  1782,     0,     0,     0,  1794,     0,
       0,     0,     0,     0,     0,     0,  1760,  1784,  1785,     0,
       0,     0,     0,  1795,     0,     0,     0,     0,  3815,     0,
       0,  3816,     0,     0,     0,     0,     0,  1796,     0,  3817,
       0,  1797,     0,     0,     0,     0,     0,     0,  1786,  1798,
    1799,     0,     0,  1787,     0,     0,  1800,     0,  3463,     0,
       0,     0,     0,     0,  1801,     0,     0,  1790,     0,     0,
    1802,     0,     0,  1791,  1792,  3818,     0,  1793,     0,     0,
       0,  1803,     0,     0,     0,     0,  1794,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1795,     0,  3819,  1804,  3820,     0,     0,     0,     0,
    5303,     0,     0,     0,     0,  1796,     0,     0,     0,  1797,
       0,  3821,  3822,     0,     0,     0,     0,  1798,     0,     0,
       0,     0,     0,     0,  3302,     0,     0,     0,     0,     0,
       0,     0,  1801,     0,     0,  1805,     0,  1806,  1802,     0,
       0,     0,     0,     0,  1807,     0,     0,     0,     0,     0,
       0,     0,     0,  3823,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1808,     0,  3824,     0,     0,     0,
       0,     0,  1804,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3825,     0,  1809,     0,     0,
       0,     0,     0,     0,  3826,  3827,     0,  3828,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1806,     0,     0,     0,     0,
       0,     0,  1807,  1810,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3829,  3830,  3831,     0,     0,     0,     0,
       0,  1811,  1808,     0,     0,  1812,     0,     0,     0,     0,
       0,     0,  3832,  3833,  3834,     0,     0,     0,     0,  3835,
       0,     0,  3836,     0,     0,  1809,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3837,  3838,     0,  1813,     0,     0,     0,     0,     0,  1814,
       0,     0,     0,     0,     0,     0,  1815,     0,     0,     0,
       0,  1810,     0,     0,     0,  1816,     0,     0,     0,     0,
       0,     0,     0,     0,  3839,  3840,     0,     0,     0,  1811,
       0,     0,     0,  1812,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1817,     0,     0,
    3475,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1818,  1819,  1820,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1814,     0,     0,
       0,     0,     0,     0,  1815,     0,     0,     0,     0,     0,
    3808,  3809,     0,  1816,  1821,     0,  3810,     0,  3811,     0,
    3812,  3813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3841,     0,     0,     0,  3842,     0,  3814,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3843,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1822,  1823,  1824,  1825,     0,     0,     0,     0,  1826,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3815,     0,
       0,  3816,  1821,     0,     0,  1827,     0,     0,  1828,  3817,
       0,     0,     0,     0,     0,     0,     0,     0,  3844,     0,
       0,  3845,     0,     0,  3846,  3847,  3848,  3849,  3463,     0,
       0,  1829,     0,     0,     0,  2598,     0,     0,     0,     0,
       0,     0,     0,     0,  1830,  3818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1822,  1823,
    1824,  1825,     0,     0,     0,     0,  1826,  3850,  3851,     0,
       0,     0,     0,  3819,     0,  3820,     0,     0,  1831,     0,
       0,  1832,     0,  1827,     0,     0,  1828,     0,     0,     0,
       0,  3821,  3822,     0,     0,  3852,     0,     0,  2599,  2600,
    2601,  2602,  2603,  2604,  2605,  2606,  2607,  2608,  2609,  2610,
    2611,  2612,  2613,  2614,  2615,  2616,  2617,  2618,     0,  2619,
    2620,     0,  1830,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3823,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3824,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1831,     0,     0,  1832,
       0,     0,     0,     0,     0,  3825,  1833,  1834,  1835,     0,
       0,     0,     0,     0,  3826,  3827,     0,  3828,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1836,  1837,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3829,  3830,  3831,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3832,  3833,  3834,     0,     0,     0,     0,  3835,
       0,     0,  3836,     0,  1833,     0,     0,  2621,  2622,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3837,  3838,     0,     0,     0,     0,     0,     0,  1836,  1837,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3839,  3840,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3475,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3841,     0,     0,     0,  3842,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3843,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3844,     0,
       0,  3845,     0,     0,  3846,  3847,  3848,  3849,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3850,  3851,     0,
       0,     0,     0,  2623,  2624,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2625,  3852,  2626,  2627,  2628,  2629,
    2630,     0,     0,  2631,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2632,     0,     0,     0,     0,  2633,  2634,
    2635,  2636,  2637,  2638,  2639,  2640,  2641,  2642,  2643,  2644,
    2645,  2646,  2647,  2648,  2649,  2650,  2651,  2652,  2653,  2654,
    2655,  2656,  2657,  2658,  2659,  2660,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2661
};

static const yytype_int16 yycheck[] =
{
       6,   900,   887,     0,   115,     0,  1183,  1331,    44,    15,
      43,    44,    18,     0,  1031,  1032,    22,   226,  1171,  1184,
    1331,  1280,  1080,    21,  1699,    31,     6,  1176,  1149,   116,
     802,  1626,    38,  1424,  1051,    41,  1424,  1234,    57,  1164,
      46,    39,    60,    49,    21,    43,  1144,    53,  3055,    55,
    1058,  1149,  1198,  1144,    97,    43,  2516,  1460,  1149,    60,
    2438,  2439,    39,  1839,  2207,  1199,    43,    59,  2848,    64,
    1199,  2500,   763,  2559,  2560,  1083,  1870,    64,  2704,  2943,
    2509,  2172,  2172,  2967,  2472,  1134,  1385,  2475,  2476,  1253,
    1254,    97,  2054,  2055,  2749,  2475,  2476,  1671,  2753,  2197,
    3212,  2251,  1505,  2840,  2144,  2067,  2068,  2069,  3268,  1780,
    3124,  1169,  1691,  1692,  1693,  1173,  1273,  1166,  1282,  1748,
    2549,  1748,    19,  1780,  2553,   116,   121,  1748,  1347,  1800,
    1294,  1295,  1296,    30,  2998,  3374,  1300,  3477,    35,  1683,
    2389,  1685,  1686,  1687,  1782,  2394,  3854,  1818,  1786,  3320,
    1506,    21,  2287,  2251,  1674,  1149,  3758,  1677,  3298,  1679,
    2707,  2754,  1800,  2707,  3707,  2707,  3854,  2483,  2449,    39,
       9,  3051,  1582,  1149,  1812,  1339,  2912,  2246,  4521,  2707,
      21,   872,   873,  2976,   875,   191,  3874,  3875,  3383,  1599,
      29,  2707,  2547,  2548,  1347,    34,  1606,   888,    39,   749,
     750,  2746,  1612,  3383,  3917,  1149,   121,   735,   736,  2754,
    4423,  2723,  3628,  4462,   220,  1762,   222,  2746,    22,   225,
     226,   227,   228,    21,  4521,  2754,    68,  2498,    18,    19,
      52,    11,  1429,  2380,   246,  2382,   242,   125,   156,  1049,
    2985,    35,   222,  2486,  2698,   225,    18,    19,  2395,  3827,
    3828,  2398,  3264,  3831,  2401,    71,  2527,  2883,  2529,  2530,
      21,  2739,  2740,  2741,   915,   916,   917,    18,    19,   920,
     921,  3849,    21,   924,  3021,   926,   927,   928,  2756,   156,
      18,    19,   156,  1246,  1247,  1248,    18,    19,     5,    77,
      71,    18,    19,   197,  1257,    73,   144,  2834,    71,   197,
      19,   156,   125,  2781,   158,   176,   249,  2785,  1357,    18,
      19,    73,    21,  1238,  1239,  1512,  2704,    31,   162,   197,
      62,  3068,   160,  2801,  2802,  1288,   194,   131,  1291,  2807,
     176,    18,    19,    18,    19,   109,   194,  4400,  1223,    18,
      19,   123,   235,  2969,   235,  2823,  2824,  1310,  1311,  3757,
    1001,  1314,    18,    19,  2832,    48,   230,  1904,   276,  4236,
     756,  3108,  3109,   156,    18,    19,    70,    78,   246,  1332,
    1333,   100,  2850,   125,  1337,  1338,   194,    18,    19,   326,
     231,    48,    18,    19,    67,  4172,   194,   276,   125,  1352,
     259,  3651,  3652,   372,  3975,   156,   156,   125,    73,   238,
    2829,  3661,  3662,    65,   156,   158,   377,   372,  2511,  3990,
      18,    19,   401,    73,   219,    18,    19,   285,  4646,   156,
    2523,   315,  2895,    18,    19,    35,  1103,   571,   156,   366,
     483,    18,    19,    18,    19,   282,    21,  4550,    12,   429,
      25,    18,    19,   379,   156,   285,   197,    44,   406,   144,
     194,  2554,    57,   455,   125,   141,   332,   406,   156,  4037,
    2709,  3116,   194,   258,   571,   247,   582,   111,   156,   194,
    4343,   204,    19,   377,   194,  3815,    85,    18,    19,   387,
     379,  2584,   638,   634,    18,    19,   103,  3234,   611,    22,
     231,   481,   255,  3664,    21,  2883,  1381,  1269,   387,    18,
      19,   315,   246,    25,   446,  3845,  3846,  3311,   542,   238,
     197,  1283,    21,  1412,  1413,   500,   276,   239,    21,   571,
      22,  1538,   216,    18,    19,    23,   246,   249,  4741,   258,
      18,    19,  1549,    43,   743,  1660,   282,   640,  3422,    18,
      19,   285,   271,   186,   293,   432,   216,    49,  3658,    73,
      18,    19,  4154,   243,    18,    19,   156,   428,  4892,   130,
     285,    35,   368,    61,    62,   285,   453,  1575,   197,   263,
      77,  1579,   388,   486,    18,    19,  1584,   130,    18,    19,
     150,  2969,   428,  1708,  3239,   708,   103,   235,    62,   623,
     432,   533,   282,   263,   256,   212,   386,   565,   131,   389,
    3347,  1500,  3349,  3407,   150,  1613,  1614,   388,   495,    18,
      19,    18,    19,  3160,   386,   388,   510,   389,    18,    19,
     249,    37,  4956,   266,   370,   354,    81,    18,    19,    18,
      19,    18,    19,   807,   163,   386,    18,    19,   389,   813,
     625,   447,   456,  3072,  3299,   111,   168,   469,   386,  4357,
      73,   389,   434,   156,   386,  1554,   812,   389,   344,   386,
    1351,   812,   389,   501,   150,  1723,  1724,   811,   877,   432,
     392,  3100,  3101,  3102,  3103,   470,   203,   386,    70,  1207,
     389,   228,    37,   432,   293,   376,   403,  1237,  2262,   191,
    2264,   681,   546,   569,   602,   432,   812,  4240,  1389,   386,
     658,   808,   389,  4284,  2985,   315,   642,   386,  4289,   658,
     389,   285,  4293,   602,   455,  4964,   634,  4830,  1409,   595,
     386,    18,    19,   389,  3608,   727,   228,  4940,  4941,   735,
     736,   578,   386,   372,  4312,   389,  3165,   743,   387,   745,
     242,   612,  3854,   642,  4322,   386,  2137,   476,   389,  2137,
     386,   368,  4330,   389,   807,   262,  3868,   354,  3384,  2147,
     608,   432,  3033,   368,   973,   605,   571,   549,   786,   235,
     741,   742,    23,   276,  4561,   198,  3249,   510,   386,   125,
    1431,   389,   651,   386,    35,   786,   389,  1951,  4366,  2939,
    1467,   386,   729,   546,   389,  3807,   802,    52,    49,   386,
     812,   386,   389,   219,   389,   500,    18,    19,  5036,   386,
      61,    62,   389,  2484,  3551,  2486,  3553,  3277,   807,   548,
     464,  4694,  1031,   716,  2453,  5074,  2453,   510,   636,  1993,
    1039,  1040,  2453,   812,   112,   246,  3383,   115,   542,  2383,
    2384,  2939,   693,   808,  1240,   386,  2886,  4724,   389,  3130,
    1059,  3001,   386,   627,   698,   389,  2999,   647,  3870,   753,
     807,  4269,  3009,   582,   219,   276,   757,   386,   582,   812,
     389,   877,  4453,   879,   634,   647,   614,  3193,   884,  3195,
     622,   876,  2844,   594,   387,  2976,  2976,   562,  3752,   876,
     552,   386,   810,   642,   389,  4958,   647,   400,   386,   722,
    1428,   389,   562,  3001,    18,    19,  3651,   386,   812,   647,
     389,  2075,   918,  3342,   812,   647,  3345,   923,   386,   808,
     647,   389,   386,  3352,   812,   389,  3380,  4187,  3357,  3358,
    3359,  3360,  3361,   810,   812,   812,   810,  1862,   647,  3368,
     808,   812,   386,   636,  3373,   389,   386,  3376,  2073,   389,
    2726,   994,  1480,  1162,   812,   810,  3199,   812,   812,   747,
     647,  1489,   647,  1907,   812,  5214,   812,   973,   647,   636,
    3448,   813,  5185,   979,  1937,   813,   387,   386,   758,   386,
     389,   647,   389,   492,  1193,  3128,   386,   993,   994,   389,
     812,  3738,   808,   647,   812,   386,  3384,   386,   389,   386,
     389,  2596,   389,   807,   386,  3542,   647,   389,  1933,  1559,
    3488,   647,  3490,   807,   812,  4186,  1022,   810,   535,   812,
     753,   738,   739,    18,    19,  1031,  3504,   817,  3506,   807,
    4743,   812,   487,  1039,  1040,   808,   808,   608,  1036,   647,
     812,  3788,  2005,  3521,   647,   807,  2009,   571,  1135,   810,
     810,  1049,   647,  1059,  4068,   608,   565,   808,   810,  1036,
     647,  1049,   647,   633,   808,  1176,  1177,  2662,  2031,  2698,
     647,  2698,  1049,   810,   812,  2272,   808,  2698,   695,   808,
    3558,   808,   810,   808,  4772,   812,   808,   633,   808,   386,
    1177,   930,   389,  4203,  4204,  1101,  1102,    23,   810,   808,
     812,   630,   600,   812,  1110,    11,   647,  3378,  2071,    35,
     619,  3214,   810,   647,   812,   801,   802,   803,   804,    18,
      19,   812,   810,    49,   812,   812,    64,   636,   647,   808,
    5473,   634,  1127,   812,  1140,    61,    62,    77,  4298,   562,
    1127,  1136,   808,    71,  1135,  1188,  4562,   633,   655,   656,
     542,   990,   647,   275,  2948,   571,  1162,   996,   812,   647,
     799,  2708,  3265,   812,  3624,  1171,   278,   808,   647,   371,
    3273,   812,   808,  1164,   386,  3278,   812,   389,  1184,   647,
     646,   243,  1188,   647,  1190,  1191,  1183,  1193,  1183,  1195,
    1233,   602,  2357,  2390,  1200,  1036,  1183,  1203,  1204,  1408,
    4340,  1207,  5499,   647,   812,   808,   238,   647,  1214,  2533,
     810,   191,   812,  1422,   469,  5464,   571,   812,  1224,  1225,
    1226,  1136,  2533,  1229,  1204,   812,  1232,  1233,   500,  1235,
    1236,  2003,    13,   735,   736,   812,  1234,  4432,   647,   271,
     647,   748,   749,   282,  2261,  4357,   126,   647,  1457,  3996,
      18,    19,  4432,   176,   547,   193,   647,  1234,   647,   235,
     647,   167,   652,  1269,   455,   647,  1105,   808,   137,    19,
    2328,  1358,   386,  3702,  2949,   389,   464,  1283,   812,   130,
      18,    19,  1301,   152,  1279,  2438,  2439,   263,  4172,  3801,
    3802,  2412,  1279,   812,   200,    18,    19,   575,   807,   174,
     578,    52,    18,    19,    18,    19,   160,   810,  2903,   655,
     656,    18,    19,  2321,  2412,    65,  2707,   812,   472,  2707,
     808,  2412,   262,  2331,  2470,  1331,  2334,  4337,  2474,  2337,
    4908,   565,  4910,   812,  2480,   628,    18,    19,    18,    19,
     808,  1347,    18,    19,   812,  4225,   185,   571,   812,   600,
     647,    18,    19,  1903,  3394,  5191,    18,    19,  1364,   140,
    4107,  1367,    87,   483,   808,  1915,  4376,  1386,  1387,   481,
    1388,  1390,   812,    47,  1393,  1394,  1395,  2972,  2973,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  1388,  4181,  5077,
     241,   386,  3432,  1234,   389,    18,    19,   808,  3073,   808,
    2172,   808,  1408,   812,  3759,   812,  1449,  4143,   808,  1415,
    1416,  1417,  1418,   179,  1420,  1421,  1422,   808,  2412,  1425,
    1426,  1427,  1428,   812,  1430,   812,   808,   160,  1434,   455,
    2121,  1429,   412,  2567,  2568,   647,  2412,  1417,  2567,  2568,
    1446,  1421,   156,  1449,   476,  1425,  4685,  4686,  3908,  3909,
    3997,  1457,  1429,  3997,  1460,  3997,    18,    19,  1464,  1465,
     388,  1504,  4055,  1461,  1673,  3044,  3010,  3011,  2412,  3997,
    3751,  4218,  2282,  1479,  1480,   777,  3792,   192,  1521,   417,
    2290,  3997,  1488,  1489,  1461,  1491,  1492,   386,   293,  2140,
     389,  1700,  4239,  2884,  5096,   200,  2884,  3926,  1504,  1505,
     562,  3644,  5190,   565,  4251,   428,   256,  1513,   122,  4256,
    4055,   808,   634,   419,  1512,  1521,   231,  1550,  1509,  2922,
    3663,   723,  1565,   403,   377,  1734,  4055,  3303,  3199,  3598,
    1536,  4124,   571,   647,  3205,  1512,   727,  1580,  1544,  1049,
     812,  3691,   216,   352,    71,   847,  3681,  3091,    71,  3093,
    3094,  4558,  1550,   125,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  2707,  1550,  2919,  2863,  4705,  1653,   204,  3088,  5112,
    1576,  3640,  1578,  1550,  1580,  3722,  2979,  1583,  5414,  4124,
    1560,  1561,  1562,   807,  1564,    18,    19,  3549,  1429,   464,
    3552,  1461,   122,  3691,  1433,  4124,   808,   371,  1578,  1101,
     812,    77,  2293,  1583,  3754,   371,  3994,  3995,  2772,  2868,
    2869,   160,  1655,   653,  3994,  3995,  5304,   368,   386,  2838,
    1461,   389,  2978,  5331,   812,  2153,   532,   432,  1634,  1635,
    3301,  3302,   243,  4111,  3037,  2799,  3046,  3047,   165,  3679,
      18,    19,   165,  1649,  3301,   194,  1689,   501,   386,  1655,
     571,   389,   647,   158,    18,    19,  3754,    40,  4313,   813,
    4831,    18,    19,   386,  3302,   603,   389,  1673,   122,  1660,
     386,  1512,   386,   389,   600,   389,   290,  4561,   517,   386,
     586,  4110,   389,  1689,   153,  2838,    18,    19,   432,   612,
     369,    18,    19,   137,  1700,   164,   636,    59,   812,   625,
     636,   727,   427,   742,   386,  1207,   386,   389,   152,   389,
     386,    18,    19,   389,   419,   655,   656,  1712,   469,   386,
      21,  2878,   389,  1729,   386,  4351,  1721,   389,  1734,   582,
     614,   611,  3772,  4893,   188,  4282,   128,   246,    18,    19,
    5080,    53,  4981,    18,    19,  1751,  1752,   571,   647,   500,
    3999,  3380,    64,  3380,   138,  3426,   108,   608,   372,  3380,
     290,   237,  3341,   386,  3343,   219,   389,   276,   501,  3160,
      18,    19,  3160,   813,  3353,  3354,  3355,  3356,  4515,   636,
    4794,    18,    19,  3362,  3363,  3364,  3365,  3366,  3367,  4569,
    3369,  3370,  3371,  3372,    13,  5483,   209,   571,  3377,   371,
      18,    19,   552,   141,    33,  3002,  3003,  3004,   748,   749,
    1843,   485,    18,    19,   176,   167,  3610,   812,   180,    26,
     292,   125,   588,   634,   386,    18,    19,   389,   703,   704,
      18,    19,   194,   197,   125,   571,   290,   642,   604,  1141,
      18,    19,   372,   194,   228,  5084,    13,   807,   200,   582,
      18,    19,  2061,  4737,  1846,   156,   239,  3897,  1864,  1865,
     565,   388,    18,    19,   369,   388,   186,   546,  2831,   282,
    2079,   162,   492,   510,  1880,   125,   812,    84,   387,   647,
     276,   807,   287,  2941,  5044,  4432,   807,   363,    59,   139,
      18,    19,   636,   369,   614,    18,    19,  5244,   613,   194,
     122,   293,    18,    19,   713,   714,   715,  1913,  3459,   647,
    1916,  1917,  1918,   812,    18,    19,   385,   197,   372,    21,
    1926,   140,   562,  3311,   647,   565,  1428,   400,   812,  3480,
     231,   647,   400,   647,   198,    18,    19,  1917,  1918,  3979,
     647,   245,   197,     9,   349,   565,   266,   584,    18,    19,
     629,   158,   501,   386,  4364,   812,   389,  4367,   614,   812,
      18,    19,   438,  4351,  2173,   647,   188,   647,   330,     0,
     282,   647,    74,   140,    18,    19,  3034,  1479,  1480,   593,
     647,   449,   454,   807,  3042,   647,  1488,  1489,   372,  1491,
     285,   387,  3383,   156,  4243,  3383,   732,  2003,  2004,   619,
    4249,   812,  2211,  4658,    13,   176,   344,  4485,   386,   180,
    3027,   389,    19,    18,    19,    18,    19,   368,   571,  3407,
     249,    21,   386,   194,   647,   389,   636,    18,    19,   386,
     237,   355,   389,   582,    18,    19,    18,    19,    18,    19,
    1550,   546,  4430,  4431,   812,   237,   275,  5286,   368,  2258,
    4430,  4431,    18,    19,   386,  2061,   360,   389,   160,   386,
     636,  1563,   389,   593,  1566,  2274,   428,   419,   290,   400,
     546,    18,    19,  2079,   812,   167,  5423,  5424,  2096,   386,
     371,   331,   389,  5117,   497,   647,  5120,  2106,   808,   812,
    4181,  4181,   812,   602,  3689,  2096,   812,  3671,  3672,   400,
    2119,   570,  2120,  2122,  2099,   812,   386,   362,   200,   389,
     137,   386,  2099,  4343,   389,   322,   753,  4267,  4268,  2120,
     186,  2127,   598,  4273,   629,   152,   808,   125,   400,  4993,
    2136,   140,   812,   235,   141,   399,   812,   542,   386,   593,
      77,   389,   139,   746,  4374,   812,   808,  2153,   414,   386,
     372,  2842,   389,   629,   455,   368,   812,   813,  4120,   330,
    4122,   263,   369,   635,   162,  2171,  2172,  2173,   386,  4267,
    4268,   389,  2215,  2216,  2865,  4273,  2867,   369,   614,    65,
     386,   784,  2188,   389,  2393,   808,  2192,   807,    32,   571,
     743,   492,   197,   386,  2200,  3583,   389,  2203,   386,  3719,
    3603,   389,   812,  3723,  2976,  2211,   602,    26,   386,  2215,
    2216,   389,   441,   565,   647,  3412,  4702,  4703,   386,  5331,
     127,   389,  2431,    18,    19,    18,    19,    18,    19,    13,
     386,   231,   563,   389,   586,    79,   812,  4013,   492,  3642,
    2246,    80,  2248,    82,  2250,   509,   808,   571,   421,  2250,
      23,  4661,  2258,    18,    19,   502,   160,   428,   386,   611,
    3811,   389,    35,   386,   565,    84,   389,    13,  2274,   647,
     386,  3570,   596,   389,  2272,   627,    49,  2275,  5312,   127,
     571,   160,   386,   647,  2282,   389,   125,  4517,    61,    62,
     647,   563,  2290,  3844,  2282,  2272,   212,   212,  2275,  2305,
      13,  3852,  2290,   386,  3628,  2282,   389,   231,  3859,   148,
     154,   565,  2521,  2290,  3625,   647,   386,  3628,   619,   389,
     647,   534,  4751,  5152,  5153,   262,   574,   419,   386,  2335,
    2336,   389,   807,   680,   331,   636,   811,   344,  2356,   546,
     647,   248,   386,   258,   691,   389,    18,    19,   187,  2558,
     732,   591,    18,    19,   546,  2356,   140,   680,    18,    19,
     108,   608,   563,  1865,  4158,   619,   620,   647,   691,   293,
     256,   593,   647,   371,   614,   808,   812,   813,  1880,  5126,
    4809,   386,   636,   386,   389,  3434,   389,  2393,   194,  4849,
     277,  4851,  2390,   280,   140,   386,  2429,  4547,   389,   647,
     248,  3565,   386,  4944,   386,   389,   386,   389,  4949,   389,
     647,  1913,   585,  2390,   239,  2421,    18,    19,   237,   230,
     386,   448,   629,   389,   249,  2431,  2459,   140,   373,   647,
     808,  2272,  2438,  2439,  2275,   241,     9,   629,  2444,   386,
     532,   647,   389,  2449,  5070,   212,  3580,  3758,  2449,  4547,
    3579,   808,   479,   562,   647,   455,   565,   122,    31,   647,
     122,   799,   800,   801,   802,   803,   804,    18,    19,   647,
       7,  2477,   387,   221,  2507,   167,   808,  2483,   364,   647,
     582,   808,   127,  2489,  2490,  2491,  2492,  2493,  2494,  2495,
    4343,   647,   492,  2499,   586,  2501,   503,   504,  5124,  5125,
     813,   808,   611,   322,   428,  2511,   807,  2513,  2514,   810,
    2516,   812,  2518,  2519,    12,  2521,  2522,  2523,   508,   647,
    5300,  4374,  2528,   188,   647,  2531,   188,  2533,  5535,   800,
    5071,   647,  2538,   808,   128,  2541,  2542,   808,   158,   484,
    2749,   748,   429,   647,  2753,    21,  2552,  3605,  2554,  2390,
     369,   536,  2558,   807,   219,  5041,  5042,   219,   807,    64,
    5307,  3885,    18,    19,   647,   565,    22,   392,  2574,    74,
     414,   808,    48,    19,  3885,   365,   366,   647,  2584,  2585,
     194,   125,  5411,  5412,    89,   570,   235,   582,  2485,   647,
     808,   386,   436,   386,   389,   386,   389,   492,   389,  2496,
     439,   138,   808,   647,   148,  2502,  3997,   144,   366,  3997,
     108,  5040,  3200,    19,   263,   808,   606,   237,   100,   619,
     808,   386,  3210,  3211,   389,   290,   220,   230,   290,   127,
     808,  4302,   246,   477,  2136,  2532,   636,   235,  5016,  2536,
     808,   812,   647,   187,   647,   393,  2543,  2544,   534,   455,
     122,  2153,   808,   800,   591,   403,   647,   415,  3557,    86,
     650,   808,   410,   647,   212,   647,   552,   647,  5448,  2171,
     565,   285,  4216,  4217,   455,   131,  2719,   614,   105,  4455,
     808,   647,  5070,   249,  3692,   808,   492,  2896,   234,   235,
     212,   228,   808,  2699,   538,   141,   492,  2703,  2200,   293,
     647,  2203,   200,  1712,   808,  2421,   272,   372,   787,   788,
     372,   790,  1721,  2719,   386,   261,   188,   389,   655,   656,
     386,  2727,  2728,   389,   619,   808,   386,   546,  2444,   389,
     235,  2726,    61,    62,    77,  3651,  5124,  5125,   808,   235,
     807,   636,    71,  2749,  3660,   243,   813,  2753,  2728,   369,
     808,   400,    21,    38,   680,    84,   238,   643,  2777,   565,
     680,    46,   563,   808,   808,   691,   514,   812,   111,   565,
    4029,   691,  2282,   227,   120,   229,   258,   319,   320,  4182,
    2290,    12,   324,   325,   386,    18,    19,   389,   286,   271,
     797,   798,   799,   800,   801,   802,   803,   804,   622,   122,
     812,   625,   125,  4062,  4063,   808,   343,   807,    61,    62,
     629,   748,   749,   619,   565,   158,   808,   808,   290,    33,
     812,   808,     7,   619,   808,   812,   808,   600,  2834,  4088,
     636,   100,  2838,  2335,  2336,   386,   717,   718,   389,    13,
     636,    26,   808,  4154,  3743,  3744,  2889,   636,   621,   622,
     639,  3997,   647,  4815,   647,   807,   647,  4436,  4437,  4438,
    4439,   808,   667,   611,   669,   188,   141,  4368,   209,    43,
    4371,  4372,   354,  2879,  2880,  4849,  2871,  4851,   807,  4000,
     226,  3572,   647,  2889,  2871,   815,   807,   156,   807,  4014,
    2896,  4282,   235,   807,  4282,   377,   219,   808,   344,    84,
     372,   812,  4000,   571,  4069,   835,  2912,  3116,   807,  4000,
    4074,  2917,   807,  4584,  4585,  2921,  2922,   807,   848,   849,
      94,   419,   807,   192,    98,   194,   546,   141,   593,   748,
     386,   593,   807,   389,   807,   808,   951,    61,    62,   954,
     807,   282,  2444,   212,   959,  2951,   808,    71,   217,   964,
     812,   808,  2958,  2959,   808,   812,  5099,   807,   812,   144,
     807,    26,   231,   122,   100,   807,  2984,   290,  4132,   238,
    2976,   807,  2967,  2979,   807,   647,   807,   246,   321,  2985,
    3189,   647,   808,  2984,  2985,   807,   812,   647,   334,   258,
    2985,   808,   338,   807,   476,   812,   339,  3030,  2985,   345,
     498,   807,   271,   807,  3002,  3003,  3004,   276,   807,   629,
     807,   807,    77,   808,    77,   808,   285,   808,   122,    84,
     363,   125,   807,   574,   807,  3002,  3003,  3004,   807,   188,
    3239,  3037,  3030,   808,   696,   249,   807,   812,   655,   656,
    2542,  4432,  3030,   808,  4432,   647,  3065,   807,  3067,   372,
      33,  3057,   237,  3030,   807,    77,  3062,   503,   504,   813,
     219,   275,   807,   141,   807,   563,   548,   565,   227,   344,
     229,    93,  2574,   808,   150,   151,   807,   812,   156,   253,
     426,  5510,   808,   480,   188,   354,   812,   808,   808,  3298,
    3299,   812,   812,   158,   808,   158,   647,  5526,   812,    47,
      48,   599,   238,   300,   301,   808,   100,   808,   377,   812,
    3116,   812,   177,   611,   807,   219,  2567,  2568,   387,   184,
     103,   593,   258,  5552,  3130,  3131,  3132,  1318,  1319,  3130,
     344,   290,   614,   212,   808,   271,   808,   322,   812,   122,
    4543,   716,   808,   807,   490,   122,    21,   135,   808,   807,
    3156,   365,   366,  4318,  4171,   808,   497,   331,   563,   812,
     807,  3002,  3003,  3004,  4329,  4568,   563,   666,   667,   808,
     669,   568,   237,   812,   237,   141,  3385,   808,   807,    12,
     807,   812,   179,  3189,   369,   807,   290,  3193,   492,  3195,
     808,   647,  1610,  1611,   812,  3201,   500,  2699,   808,  3205,
     808,  2703,   812,   546,   812,   188,   808,   476,  3214,   707,
     807,   188,   807,   372,   611,   808,  3222,   807,   354,   812,
     563,   395,    26,   807,   807,   100,   807,   441,   503,   504,
     627,   500,   808,  3239,   212,   807,   812,   807,  4562,  3245,
     807,   377,   219,   265,   238,   807,  4557,   444,   445,    21,
     808,  4562,   807,    64,   812,   807,   653,   322,   807,  3265,
     807,   565,   245,    74,   258,   450,   344,  3273,   372,   807,
     593,  3277,  3278,    77,   807,   108,    64,   271,    89,   548,
      84,   156,   807,   418,   808,   631,    74,  3293,   812,   503,
     504,   807,  3298,  3299,   127,   141,   807,   807,   363,   807,
     363,    89,   516,   649,   369,   807,   369,   290,   808,    37,
     807,   652,   812,   290,   808,   619,   620,   808,   812,   194,
     342,   812,   807,  3329,   807,   480,   122,   808,   100,   125,
     671,   812,   636,   602,   653,   808,  5262,   212,  3344,   812,
     476,   807,   217,   517,   613,   614,   368,   807,  3435,   807,
     807,   797,   798,   799,   800,   801,   802,   803,   804,   807,
     354,   546,   807,   238,   807,   634,   199,   636,   365,   366,
     807,   246,   808,   177,   371,   438,   812,   808,   344,  3385,
     184,   812,   193,   258,   156,   559,   808,   115,   199,   372,
     812,   807,   188,   808,   122,   372,   271,   812,   384,   808,
     808,   276,   235,   812,   812,   193,   141,   807,   430,  4181,
     285,  5006,   548,   396,  3412,  3421,  1116,  1117,  3424,  1119,
    3426,  1121,   194,   219,   235,   503,   504,  3422,   697,   807,
     807,  3426,   807,   237,   593,  3412,  3431,  3432,   807,  3426,
     212,   807,  3437,   807,   629,   217,   808,   235,   807,  2951,
     812,   179,   263,   286,   808,   808,  2958,  2959,   812,   812,
     188,  4626,  4627,   808,  4629,   807,   238,   812,   808,   807,
     807,  4730,   812,  5399,   246,   263,   807,   807,   614,   354,
      56,   546,   476,   546,   377,   562,   258,  4636,  4637,   593,
      66,   219,   380,   808,   290,   197,    37,   812,   344,   271,
      76,   808,   377,   807,   276,   812,   231,   721,   246,   194,
     532,   197,   387,   285,    90,    91,    92,   808,   322,   246,
    3030,   812,   797,   798,   799,   800,   801,   802,   803,   804,
     106,   620,  5458,   808,  5460,   598,  3542,   503,   504,   808,
     108,   810,   808,   812,   521,   808,   812,  5222,   817,   812,
    5476,   500,    37,   808,   548,  3561,   389,   812,   377,   363,
     500,     7,   290,   748,   629,   369,   629,   764,   765,   808,
     212,  3412,   813,   812,   115,   812,   372,  3620,   141,  4478,
     166,   122,   354,   797,   798,   799,   800,   801,   802,   803,
     804,   588,  3598,   276,  5520,  5521,  3602,  3603,   807,   167,
     194,   476,   562,  3609,   141,   377,   417,   604,   542,   344,
     593,   166,   103,  3608,  3620,   387,   593,   222,  3624,  3625,
     542,   542,  3628,   287,   157,   500,   813,   355,   807,   417,
     115,   122,   200,  3628,  3640,   812,  3642,   122,   179,   367,
     812,  3628,   141,   371,   372,  3651,  3652,   188,    13,   807,
    3651,  3652,    96,   813,  3660,  3661,  3662,   503,   504,  3660,
    3661,  3662,   807,    15,    48,   498,   156,   235,   156,    21,
     197,   111,   810,   548,   808,    21,   807,   160,   219,   125,
      26,    27,    28,   748,   811,   518,   160,    39,   141,   160,
     812,    43,   138,  3712,   179,   249,   293,   188,   144,  3705,
      48,  3707,   195,   188,   476,    57,    58,   518,   160,   383,
     171,    63,  4877,   696,  4879,  4880,   532,    63,   286,   797,
     798,   799,   800,   801,   802,   803,   804,   602,   500,   518,
     563,    77,   565,   193,   219,   568,   708,    83,    84,   614,
       7,    87,   546,    71,  4909,  3751,   160,  3753,    13,   290,
    3751,   633,  3758,   808,   245,   808,    10,   333,   140,   634,
     122,   636,   812,   125,   813,   111,   599,   141,   503,   504,
     603,  4829,   186,   808,   350,   140,   548,   808,   611,   125,
     808,   344,   228,   129,   808,  5096,  3792,   201,    64,   808,
     808,  3293,   603,   808,  3800,   501,   249,   593,    74,   290,
     214,  4752,   807,   122,   666,   290,  4757,   344,   275,   708,
     156,   377,   158,    89,   355,   614,   562,   515,    50,   492,
     653,   812,   697,   282,    30,   629,   188,   500,  4981,   287,
     602,   372,   798,   799,   800,   801,   802,   803,   804,   812,
     582,   812,   614,   571,   812,   344,   414,   575,   486,    71,
     578,   419,   266,   267,   732,   220,   571,   219,   273,   812,
     588,   812,   634,  5016,   636,   593,  3872,   657,   596,   188,
     355,   812,   811,   249,   707,   249,   300,   301,   813,  3885,
     294,   372,  3888,  3889,   801,   231,   371,   372,   252,   235,
     560,   344,   565,   181,   194,   471,   242,   343,   812,   194,
     219,    88,  3908,  3909,   812,   396,  3912,   812,  3914,    21,
     812,  3917,   488,   378,   558,   645,   262,   193,   136,  3421,
     156,   808,  3424,   199,    48,   697,   372,   728,   290,   275,
     498,  5084,   807,   808,  4885,   810,   786,   812,  4889,   455,
     503,   504,   817,  5202,   748,  4844,   619,   620,   362,   372,
     518,   797,   798,   799,   800,   801,   802,   803,   804,   235,
     653,   728,   808,   636,   727,   636,   503,   504,   571,  3975,
     344,   290,   812,    21,   550,   321,   502,    87,   315,    27,
       7,   160,   161,   807,  3990,   110,  3992,   263,   158,   582,
     400,   567,    74,   339,  4945,   563,   400,   400,   582,  4950,
     568,   136,   416,  4009,   503,   504,   261,   400,   261,   136,
     372,  5208,  4018,   400,    48,   400,    64,   400,   586,   400,
     444,   445,   201,    71,   584,  5284,   618,    75,   400,    77,
     571,   599,   812,   618,   575,   214,   808,   578,   810,   812,
     812,    89,   709,   611,  3462,   817,  3464,   588,   394,   500,
     503,   504,   593,   372,   400,   596,   491,   403,   627,   627,
      56,   808,   797,   798,   799,   800,   801,   802,   803,   804,
      66,   799,   800,   808,   807,   254,   807,   125,   812,   807,
      76,   609,    57,   171,   447,   653,   571,   377,   267,     7,
     575,   716,   111,   578,    90,    91,    92,   377,   613,   523,
     524,   525,   593,   588,  4313,     7,   200,  3609,   593,   455,
     106,   596,   591,   808,   808,   294,   457,   458,   459,   460,
     461,   462,   463,   197,   400,   812,   808,   808,   808,   503,
     504,  4340,   808,  5286,   807,   800,   482,  4143,   807,   707,
     808,   417,   808,   689,   804,   808,   492,  5471,  4154,   808,
     808,   808,   808,   808,   192,   203,   808,    64,   812,   812,
    5471,   526,   527,   808,   529,   530,   531,    74,   808,   812,
     807,  5495,   808,   808,   813,  4181,  4182,  4172,   807,   358,
     813,  4187,    89,   548,  5495,    35,  4187,   813,    77,   807,
    5514,   808,   538,   539,   540,   541,   812,   812,    35,   813,
     546,   811,   287,  5514,    93,   696,   287,   287,   287,   287,
    5534,   287,   812,   812,   160,   263,   377,   563,   634,   565,
     566,   582,   236,  5534,   812,   812,   582,   400,   582,   812,
      13,   593,   812,   160,  4240,   377,   799,   800,   801,   802,
     803,   804,   518,   210,   197,   134,   197,   582,   582,   255,
     432,   194,  5417,   197,   813,   813,   602,   813,   799,   800,
     797,   798,   799,   800,   801,   802,   803,   804,   813,   813,
     812,   808,   808,   619,   593,  4308,   614,   427,  4284,    60,
    4286,   607,   513,  4289,   808,   404,   193,  4293,   194,   812,
     636,   789,   401,   814,   789,   403,  4302,   228,   797,   798,
     799,   800,   801,   802,   803,   804,  5191,  4313,   158,   144,
     403,   103,   162,   571,   799,   800,   341,   365,   366,   571,
     571,   158,   807,   371,   668,   162,   812,   603,   235,   377,
    4336,   813,   379,    60,  4340,   263,   477,   333,   597,   263,
     764,   765,   263,   807,   797,   798,   799,   800,   801,   802,
     803,   804,   202,   402,   350,  5532,   263,   706,   672,   377,
     672,   249,   160,   160,   160,   202,   160,   160,   708,   417,
     160,   160,   222,   160,  4380,  4381,   265,   641,   724,    19,
     160,   160,   160,   160,   160,   222,   160,   160,   160,   160,
     160,  3809,  3810,   160,   160,  4401,  3814,   160,   160,   160,
     160,   160,   748,   749,   160,   160,   160,   160,   160,  5278,
     160,   763,   160,   160,   160,   160,   768,  4423,   160,   160,
     160,  4401,   160,   797,   798,   799,   800,   801,   802,   803,
     804,   160,  3850,   286,   160,   160,   160,   287,  3856,  3857,
    3858,   160,   653,  3861,   791,   377,   798,  4453,   496,  4658,
     287,   464,   807,   342,   154,   808,   813,   808,   808,  4465,
    4455,   807,   814,   245,   810,   808,   808,   571,   813,   808,
     245,   571,   808,  5342,   571,   808,   365,   366,   654,   368,
    5379,   812,   807,   813,   813,   807,   813,   582,  5357,   812,
     582,   384,   488,   400,   197,   730,  4705,   807,   546,   812,
    5517,  5370,   212,   732,   372,   611,   432,  4009,   812,   335,
     417,   156,   554,   807,   807,   807,    12,   403,   500,     7,
     872,   873,   343,   875,   876,  4636,  4637,   403,   812,  5414,
      73,   532,   382,   532,   532,   532,   888,  4543,   532,   491,
     263,   430,   263,  4549,   377,   382,   807,    15,   614,   366,
     807,  4557,   591,  4762,   550,   603,  4562,  4563,   563,   636,
    5429,   563,  4568,   812,   812,   582,  4561,   582,   418,   372,
    5439,   567,   450,   377,  5473,  5444,   377,   212,   808,   812,
     808,   418,   807,   807,   807,    19,   807,   807,  4594,   785,
     807,   807,   442,   472,   807,    63,    62,   807,   807,     4,
     807,   413,  4608,   247,   247,   442,   720,   655,   656,  5478,
      21,  5480,   751,   808,   808,   808,    21,   467,    48,   494,
     812,   807,   687,   808,   687,   808,   571,   285,   812,    12,
     467,   983,   546,  5502,    39,   160,   801,   812,   231,   642,
    4646,  5526,   160,   532,  4650,   384,   282,   807,   197,   812,
     808,   808,  4658,   808,   808,   808,   258,   705,   258,   390,
      48,   511,   217,   160,   812,   160,   160,  5552,  5537,  5538,
    1022,   403,    48,  5542,   511,   807,   160,   807,   228,   792,
     103,   729,   245,   278,  1036,   813,   111,   111,   368,   162,
     807,   400,   542,   729,   125,   565,   807,  1049,   582,  4705,
     748,   749,   807,   440,   807,   542,   807,   383,   807,   799,
     808,   228,   562,   377,   377,   565,   807,   372,   245,   808,
     515,   808,   808,  1761,   636,  1763,  1764,   400,   197,   210,
    1768,   432,    21,   808,   582,  4741,   808,  4743,  4744,   808,
     377,   269,  4737,  1781,   246,   812,  1784,  1785,   808,  1787,
     197,   813,  1790,  1791,  1792,  1793,  4762,   812,   817,  1797,
     817,   817,   697,   160,  1802,  4771,   258,   258,   258,  1807,
    1808,  1809,  1810,  1811,  4780,   126,   277,  1815,  1816,    48,
      21,   403,    48,  1821,  4827,  1823,  1824,  1825,    27,  1827,
    1828,    48,  1830,   153,    48,  1833,   477,   801,  1836,  1837,
     807,    35,    35,   625,   729,   125,   608,   263,    64,   203,
     263,    35,   372,   372,   807,   372,   415,    77,    21,   377,
     807,  4827,   813,   377,   808,    64,   515,   487,  4834,   808,
     808,   812,    71,   341,  4336,   808,    75,   808,    77,   808,
     808,   427,   808,  4849,   808,  4851,   265,   812,    48,   812,
      89,  4887,   387,   808,   377,   384,   175,   285,   210,    21,
    1212,   147,   258,   565,   160,   116,   117,   118,   119,   120,
     808,   258,   405,   807,   807,   812,   120,   120,  4380,   808,
      48,    48,  1234,    48,   387,   619,   125,   372,   377,   367,
    1242,  1243,   807,    15,    21,   812,    81,   510,   620,  1251,
    1252,  1253,  1254,  1255,  1256,   143,  4912,   372,   812,   807,
     228,   808,  1264,  1265,   194,  1267,  1268,   812,   372,    21,
    1272,  1273,    48,   808,  1276,  1277,  1278,  1279,   341,  1281,
    1282,   173,   377,   384,  4940,  4941,   808,  1289,  1290,   263,
    1292,  1293,  1294,  1295,  1296,   194,   813,  1299,  1300,  1301,
    1302,  1303,  1304,  1305,  1306,  1307,    21,  1309,   812,   160,
    1312,  1313,   807,  4465,   276,  1317,   162,   808,   318,  1321,
    1322,  1323,   223,   224,   225,   226,   807,   636,   673,   397,
      48,    21,  1334,  1335,  1336,   472,   149,  1339,  5007,   808,
    1342,  1343,  1344,  1345,  1346,  5031,   112,  5003,   808,  1351,
     608,   812,   162,   636,   136,   573,   136,   807,   136,   808,
    5016,  1363,  1364,   158,   377,   537,   483,   808,    48,  1371,
     808,  1373,  1374,   807,   263,   483,   812,   653,   678,  5238,
    5036,    48,  5241,  1385,  1386,  1387,   534,  1389,  1390,   807,
     691,  1393,  1394,  1395,   808,   691,  1398,  1399,  1400,  1401,
    1402,  1403,  1404,  1405,   554,   155,   807,  1409,   807,   691,
    5058,   633,  1414,   807,  5097,    32,    64,   384,    64,    19,
     553,   807,  5281,   481,   807,   702,   197,  1429,   808,   814,
     808,   633,   384,   334,    32,   336,   337,   338,   808,   384,
    5096,   143,  5098,   134,   345,   691,   688,   483,   701,  5105,
    5106,     6,   464,   228,   377,   377,  5112,   246,   154,  1461,
      48,   810,   171,   633,   130,   608,   154,   230,   292,   810,
     814,  5127,   124,   231,   702,    54,   365,   366,   574,   143,
     807,   810,   371,  5139,   154,   372,   574,   812,   377,   215,
     810,   500,    54,  5149,   154,   194,   194,   194,  5154,   454,
     125,   812,   574,   635,  5152,  5153,   377,   698,  3587,   196,
    1512,  3338,  5159,  5159,  5159,  3334,  3332,  1519,  4743,  3350,
    4746,  3336,  5159,  4751,  3988,   426,  4756,  3785,   417,  5185,
    4769,  1239,  5072,  5365,  5189,  1757,  5366,  4771,  4963,  5552,
    5510,    46,  1091,  2975,  2917,  4143,  5058,  5058,  1550,  5058,
    1552,  5058,  5058,  1555,  5522,  5058,  5058,  5426,  5227,  5058,
    5208,  5335,  5426,  5058,  5412,  5058,  5361,  5058,  5360,  3997,
    2474,  5058,  5058,  5058,  1198,  3583,  4432,  4282,  2480,  2700,
    4455,  5208,  5238,  3432,  3431,  5241,  4235,  3437,   489,   490,
    4868,  5309,  4643,  5321,  5319,  5388,  5031,  2453,  5254,  2567,
    3426,  4016,  4302,  4354,  4303,  3828,  3861,   496,  3860,  4672,
    5331,  4357,  3538,  5261,  5262,  5097,  5035,  4885,  4945,  4889,
    4950,  1912,  4899,  3201,  4650,  5281,  4329,  4451,  4002,  1631,
    5278,  3111,  5491,  5319,  3414,  2568,    18,    19,  3104,  4722,
    2568,  2567,  1731,  1694,  2345,  2343,  5302,  3891,  1650,  3231,
     768,  2964,  2958,  1865,  3329,  2948,  3609,   546,  1890,  4159,
      64,  5152,  5153,  2424,  1022,  2253,  1023,  2127,  1364,  4476,
    2877,  2838,  2059,  4981,  5002,  5286,  1283,  5302,  1097,  5379,
     798,  2985,  4834,  2985,  2985,  2985,  2374,  5473,  5499,  4853,
    4587,  5105,  3912,  4215,  5342,  1110,   814,  5106,  1257,  1634,
    4596,  5003,  3667,  4810,  3885,  4976,  2431,  1709,  4883,  5357,
      16,  2137,  1469,  2884,   603,  1183,  3608,  5208,  1183,  5388,
    3608,  4565,  5370,  3606,  4178,  4548,  1632,  1183,  4557,  2329,
     631,   992,  1597,  2330,   116,   117,   118,   119,   120,  2226,
    2905,  3293,  3612,  2225,  1179,  4263,  5299,   648,   649,  5514,
    5378,  5399,  4633,  5534,  4517,  4374,  1730,  4562,   876,  4856,
    4617,  1367,  3131,  5411,  5412,  2275,   655,   656,  3030,  3344,
    5261,  5262,  1180,    43,  2290,  5431,  1183,  5294,  1548,    43,
    1546,  5429,  5438,  2268,  2270,  1008,    39,  5278,  2951,  1461,
    3099,  5439,  2719,  2481,  1149,  1689,  5444,  2711,  2720,  4824,
    4986,    11,    11,  4005,  1508,  1011,  1172,  4391,  4452,  4764,
    5458,  3902,  5460,    -1,    -1,  5471,   705,    -1,    -1,    -1,
    2508,  5477,    -1,    -1,    -1,    -1,  5482,  5310,  5476,    -1,
    5478,    -1,  5480,    -1,    -1,  5491,    -1,  2525,    -1,  5495,
     729,   223,   224,   225,   226,    -1,  1239,    -1,    -1,    -1,
      -1,  5342,    -1,    -1,  5502,    -1,    -1,    -1,  5514,   748,
     749,    -1,    -1,    -1,    -1,   983,  5357,    -1,    -1,    -1,
    5526,  1239,  5520,  5521,  2562,  2563,  1239,    -1,  5534,  5370,
      -1,    -1,  2570,    -1,    -1,    -1,    -1,  5532,    -1,  5537,
    5538,    -1,    -1,    -1,  5542,  5532,  5552,    -1,  5058,    -1,
      -1,    -1,    -1,    -1,  1022,    -1,    -1,    -1,  5399,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5411,  5412,    -1,    -1,    -1,   980,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1939,  5429,    -1,
      -1,  1943,    -1,    -1,    -1,    -1,    -1,    -1,  5439,  1951,
      -1,  1953,   334,  5444,   336,   337,   338,    -1,    -1,    -1,
      -1,    -1,    -1,   345,    26,    27,    28,  5458,    -1,  5460,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1036,    -1,    -1,    -1,  5476,    -1,  5478,    -1,  5480,
      -1,  1993,  5152,  5153,    -1,    -1,    -1,    -1,    -1,    61,
      62,    63,    -1,    -1,   386,    -1,    -1,   389,    -1,    71,
      -1,  5502,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,  5520,
    5521,    -1,    -1,  2721,    -1,  2037,  2038,  2039,    -1,    -1,
      -1,    -1,    -1,    -1,   426,    -1,  5537,  5538,  1103,   111,
      -1,  5542,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,  2075,    -1,    -1,    -1,    -1,  2080,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,  2099,    -1,    -1,
      -1,  5261,  5262,    -1,  2106,    -1,    -1,   489,   490,  2111,
      -1,  2113,    -1,    -1,    -1,    -1,    -1,  2119,  5278,  2121,
    2122,    -1,    -1,    -1,  1242,  1243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1251,  1252,    -1,    -1,  1255,  1256,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1264,  1265,    -1,  1267,
    1268,    -1,    -1,    -1,  1272,    -1,    -1,    -1,  1276,  1277,
    1278,  1279,    -1,  1281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1289,  1290,   235,  1292,  1293,    -1,    -1,    -1,  1234,
     242,  1299,  5342,    -1,  1302,  1303,  1304,  1305,  1306,  1307,
      -1,  1309,    -1,    -1,  1312,  1313,    -1,  5357,    -1,  1317,
     262,    -1,    -1,  1321,  1322,  1323,    -1,    -1,    -1,    -1,
    5370,    -1,    -1,    -1,    -1,    35,  1334,  1335,  1336,    -1,
      -1,    -1,    -1,    -1,  1342,  1343,  1344,  1345,  1346,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5399,
      -1,    -1,    62,    -1,    -1,  1363,  1364,    -1,    -1,   631,
      -1,  5411,  5412,  1371,    -1,  1373,  1374,    -1,    -1,   321,
      -1,    -1,    -1,    -1,    -1,   647,   648,   649,    -1,  5429,
    2272,    -1,    -1,  2275,    -1,    -1,    -1,   339,    -1,  5439,
    2282,  2283,    -1,    -1,  5444,  2287,    -1,    -1,  2290,    -1,
      -1,  2293,   112,    -1,    -1,   115,  1414,    -1,  5458,    -1,
    5460,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5476,    -1,  5478,    -1,
    5480,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   403,  5502,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5520,  5521,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,  1429,    -1,    -1,  5537,  5538,    -1,
      -1,    -1,  5542,    -1,    -1,   205,    -1,    -1,  2390,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1519,    -1,    -1,    -1,    -1,  1461,    -1,    -1,    -1,
      -1,    -1,  1467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,    -1,    -1,    -1,    -1,    -1,  1481,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1552,    -1,    -1,  1555,    -1,    -1,
     260,    -1,    -1,    -1,    -1,    14,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3144,  1512,  3146,   279,
      -1,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
    2472,    -1,    -1,  2475,  2476,    -1,   538,   539,   540,   541,
      -1,    50,    51,    -1,   546,    -1,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,
      -1,   563,    -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,
      79,    -1,    -1,  1631,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,
      99,    -1,  1650,   353,    -1,    -1,   356,    -1,    -1,    -1,
     602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   143,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2588,   156,   408,   409,
      -1,  1709,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,  3313,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1691,  1692,  1693,   208,
      -1,   210,    -1,    -1,    -1,    -1,   215,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   724,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   748,   749,   508,    -1,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,    -1,
      -1,  3389,  3390,  3391,  3392,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2734,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2743,  2744,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   578,    -1,
      -1,    -1,  2764,  2765,    -1,  2767,    -1,    -1,  2770,  2771,
    2772,  2773,  2774,    -1,    -1,  2777,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2786,    -1,   606,    -1,    -1,  2791,
      -1,  2793,    -1,  2795,  2796,    -1,  2798,  2799,    -1,    -1,
      -1,  2803,  2804,  2805,    -1,    -1,    -1,  2809,  2810,  2811,
      -1,  2813,   381,  2815,    -1,  2817,    -1,  2819,    -1,  2821,
      -1,  1939,    -1,    -1,  2826,  1943,    -1,    -1,    -1,   649,
      -1,    -1,    -1,    -1,    -1,  1953,    -1,    -1,    -1,    -1,
    2842,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,
      -1,  2863,    -1,  2865,    -1,  2867,    -1,    -1,    -1,  2871,
      -1,    -1,    -1,    -1,    -1,  2877,  2878,    -1,   447,    -1,
      -1,   450,    -1,   452,    -1,    -1,   455,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,   465,   466,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   475,    -1,   477,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,  2037,
    2038,  2039,    -1,   492,    -1,    -1,    63,    -1,    -1,    -1,
      -1,   500,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,  2953,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2080,    -1,    -1,    -1,    -1,    -1,    -1,   538,
      -1,    -1,    -1,    -1,   111,    -1,   545,    -1,    -1,    -1,
      -1,  2099,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,  2111,    -1,  2113,   565,    -1,    -1,    -1,
    3002,  3003,  3004,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     589,   158,    -1,    -1,    -1,    -1,    -1,    -1,  3030,    -1,
      -1,    -1,   601,    -1,    -1,    -1,   605,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,    -1,  3055,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3065,    -1,  3067,    -1,   636,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   644,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   660,   661,   662,   663,    -1,    -1,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,   242,   675,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3124,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   712,    -1,    14,  2201,  2202,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2283,    -1,    36,    -1,  2287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    50,    51,   752,   321,    -1,    -1,    -1,    -1,    58,
      -1,    -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      79,    -1,    -1,    -1,    -1,    -1,    -1,  2272,    -1,    -1,
    2275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   807,    -1,
      -1,    -1,    -1,    -1,    -1,  2300,    -1,    -1,    -1,    -1,
      -1,    -1,   121,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,    -1,   131,   132,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   143,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3976,  3977,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2390,    -1,    -1,    -1,   208,
      -1,   210,    -1,    -1,    -1,   482,   215,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,
    3412,    -1,   281,    -1,  2469,    -1,   285,    -1,  2473,    -1,
      -1,    -1,    -1,  2478,    -1,    -1,   563,    -1,    -1,   566,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3446,    -1,    -1,    -1,  2503,  2504,
    2505,  2506,  3454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,    -1,
    2588,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2535,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3491,
    3492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2559,  2560,    -1,    -1,    -1,    -1,
      -1,    -1,   381,    -1,    -1,  3517,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3527,    -1,  3529,    -1,  3531,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,
      -1,    -1,    -1,  3565,    -1,    -1,    -1,    -1,  3570,    -1,
    3572,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   447,    -1,
      -1,   450,    -1,   452,    -1,    -1,   455,   724,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   465,   466,    -1,    -1,
      -1,    -1,    -1,    -1,  3606,    -1,   475,    -1,   477,    -1,
      -1,   748,   749,    -1,    -1,    -1,  2734,   486,    -1,    -1,
      -1,    -1,    -1,   492,    -1,  2743,  2744,    -1,    -1,    -1,
      -1,   500,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,
      -1,  3643,    -1,    -1,    -1,    -1,  2764,  2765,    -1,  2767,
      -1,    -1,  2770,  2771,  2772,  2773,  2774,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4352,  4353,    -1,    -1,  2786,   538,
      -1,    -1,    -1,  2791,    -1,  2793,   545,  2795,  2796,  3681,
    2798,    -1,    -1,    -1,    -1,  2803,  2804,  2805,    -1,    -1,
      -1,  2809,  2810,  2811,    -1,  2813,   565,  2815,    -1,  2817,
      -1,  2819,    -1,  2821,    -1,    -1,    -1,    -1,  2826,    -1,
    3712,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     589,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   601,    -1,    -1,    -1,   605,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,    -1,  2871,    -1,    -1,    -1,    -1,    -1,  2877,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   644,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3791,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2953,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   712,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2954,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3055,   807,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3002,  3003,  3004,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3044,
      -1,    -1,  3994,  3995,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3124,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4033,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4066,    -1,  4068,    -1,    -1,  4071,
    4072,    -1,  4074,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4085,    -1,    -1,    -1,    -1,  4090,    -1,
      -1,  4093,  3147,    -1,  4096,  4097,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3159,    -1,  3161,  3162,  3163,  3164,
      -1,  3166,  3167,    -1,    -1,    -1,  4118,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    21,
      -1,    -1,    -1,    -1,    26,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4178,    -1,    -1,    -1,
      -1,    63,    -1,    -1,    -1,  3240,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,  3253,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,  4895,  4896,  4897,
    4212,  4213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   156,    -1,   158,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3341,    -1,  3343,    -1,
      -1,    -1,  4294,    -1,    -1,    -1,    -1,    -1,  3353,  3354,
    3355,  3356,    -1,    -1,    -1,    -1,    -1,  3362,  3363,  3364,
    3365,  3366,  3367,    -1,  3369,  3370,  3371,  3372,    -1,    -1,
    3375,    -1,  3377,    -1,    -1,    -1,    -1,    -1,  3446,    -1,
      -1,    -1,    -1,    -1,    -1,  5023,  3454,    -1,  5026,  5027,
    5028,  5029,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,  3412,    -1,    -1,
     242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3491,  3492,    34,    35,    -1,    -1,    -1,
     262,    40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4398,  4399,    -1,  3517,
      -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,    -1,  3527,
      -1,  3529,    -1,  3531,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5113,    -1,    -1,  4430,  4431,
      -1,    -1,    -1,    -1,  5122,  5123,    -1,    -1,    -1,   321,
      -1,    -1,    -1,  5131,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   112,    -1,    -1,   115,   339,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,  3606,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,   400,    -1,
      -1,   403,    -1,    -1,    -1,  3643,    -1,    -1,   187,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4558,    -1,    -1,    -1,
      -1,    -1,    -1,  3681,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   455,    -1,    -1,  4578,    -1,  4580,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
     289,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,   541,
      -1,    -1,    -1,    -1,   546,    -1,  3721,    -1,   327,   328,
     329,    -1,    -1,  3791,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   563,    -1,   565,   566,  4687,    -1,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3760,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   374,   375,  4719,    -1,    -1,
     602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   619,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,
     409,    -1,    -1,    -1,   636,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4794,    -1,    -1,  4797,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4810,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,    -1,
      -1,   500,   724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   512,  4856,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3920,   748,   749,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   572,    -1,  4033,   575,    -1,    -1,   578,
     579,   580,   581,    -1,    -1,   807,    -1,    -1,   810,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3993,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4066,    -1,
    4068,    -1,    -1,  4071,  4072,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   621,   622,    -1,    -1,    -1,  4085,    -1,    -1,
      -1,    -1,  4090,    -1,  4976,  4093,    -1,    -1,  4096,  4097,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4118,    -1,    -1,    -1,    -1,  5007,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5053,    -1,    -1,    -1,    -1,  5058,    -1,    -1,    -1,
    4178,    -1,  5064,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5086,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4212,  4213,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5146,    -1,    -1,    -1,    -1,    -1,
    5152,  5153,    -1,   812,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4223,  4224,
      -1,  4226,    -1,    -1,    -1,    -1,  4294,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5227,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5247,    -1,  5249,    35,    36,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5259,    -1,  5261,
    5262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    62,  5278,    -1,    -1,    -1,
    4398,  4399,    -1,    -1,    -1,    72,    73,  4342,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      97,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5340,    -1,
    5342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5357,  5358,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5370,    -1,
     157,   158,    -1,    -1,    -1,    -1,   163,    -1,    -1,   166,
      -1,  4436,  4437,  4438,  4439,    -1,  5388,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,    -1,  5398,  5399,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4463,  5411,
    5412,   198,    -1,   200,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   209,    -1,   211,    -1,     7,  5429,    -1,    -1,
      -1,    12,    -1,    14,  5436,    -1,    17,  5439,    -1,    -1,
    4558,    -1,  5444,    -1,    -1,    26,    27,    28,    -1,  5451,
      -1,    -1,    -1,    -1,    -1,    -1,  5458,    -1,  5460,    -1,
    4578,    -1,  4580,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5476,    -1,  5478,    58,  5480,    -1,
      61,    62,    63,    64,    -1,    -1,    -1,    -1,    69,    -1,
      71,    -1,    -1,    -1,    -1,   282,    77,    -1,    -1,    -1,
    5502,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,  5520,  5521,
      -1,    -1,    -1,    -1,    -1,  5527,    -1,    -1,   315,    -1,
     111,    -1,    -1,  5535,    -1,  5537,  5538,    -1,    -1,    -1,
    5542,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,  4604,
      -1,    -1,    -1,    -1,    -1,    -1,   137,   138,    -1,    -1,
      -1,  4616,  4617,   144,    -1,    -1,    -1,    -1,    -1,  4687,
      -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,    -1,
      -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4719,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   418,   419,    -1,   421,   422,   423,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4702,  4703,    -1,
      -1,    -1,   233,    -1,   235,    -1,   443,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4794,    -1,    -1,  4797,
    4735,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4746,  4810,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,  4768,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4856,    -1,
     321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   542,    -1,    -1,   339,   546,
      -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   562,    -1,    -1,   565,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   585,    -1,
     381,    -1,    -1,    -1,    -1,    -1,   387,    -1,  4863,    -1,
      -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   623,    -1,    -1,  4894,
      -1,    -1,    -1,   630,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,  4976,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,
     451,   452,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5053,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5005,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,
     541,    -1,    -1,    -1,    -1,   546,   753,   754,  5086,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   563,    -1,    -1,   566,  5041,  5042,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   602,    -1,    -1,    -1,    -1,    -1,    -1,  5146,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,   639,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5247,
      -1,  5249,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5259,    -1,   724,   725,   726,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5232,  5233,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,  5340,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
    5358,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
    5398,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,  5436,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,  5451,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,  5527,
      -1,   202,    -1,   204,   205,   206,   207,  5535,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,   492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,   565,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,
      -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,
     811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,   268,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
     799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,
      -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,
     807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,   799,   800,   801,    -1,    -1,    -1,
     805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,
     815,   816,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,    -1,    -1,    -1,    -1,   799,   800,   801,    -1,
      -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,
      -1,    -1,   815,   816,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,
      -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,
     811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
     799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,
      -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,
     807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,
     805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,
     815,   816,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,
      -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,
      -1,    -1,   815,   816,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,
      -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,
     811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
     799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,
      -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,
     807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,
     805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,
     815,   816,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,
      -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,
      -1,    -1,   815,   816,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,
      -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,
     811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
     799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,
      -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,
     807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,   636,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,   699,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   807,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   816,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,   807,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   816,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,   699,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
     807,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,   816,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   812,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   391,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   811,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   811,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   811,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     811,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   808,    20,    -1,   811,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
     636,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,   807,   808,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   808,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     808,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
     619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   807,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   807,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   807,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,    -1,
      -1,    -1,    -1,    -1,     5,     6,   801,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,    -1,    -1,    -1,    -1,    -1,     5,     6,
     801,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,    -1,    -1,    -1,
      -1,    -1,     5,     6,   801,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,    -1,    -1,    -1,    -1,     5,     6,   801,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,
       5,     6,   801,     8,     9,    10,    11,    12,    13,    14,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,   144,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
     285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
     505,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,   608,   609,   610,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,   608,   609,   610,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    14,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,   440,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,   492,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,   586,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,   608,   609,   610,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,    -1,    -1,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,   520,   521,   522,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,   593,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,
      19,    20,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,   386,    -1,    -1,
     389,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,   647,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,   501,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
     593,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,   371,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,   172,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      17,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
      -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
      -1,   421,   422,   423,    -1,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,
     422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,    -1,   449,    -1,   451,
     452,   453,    -1,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,   422,
     423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
      -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,    -1,   421,   422,   423,
      -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,    -1,   449,    -1,   451,   452,   453,
      -1,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,   150,   151,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,   633,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,   633,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     7,
      -1,    -1,    -1,    -1,    12,    -1,    14,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    26,    27,
      28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    64,    -1,    62,    -1,
      -1,    69,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,     7,    -1,    87,
      -1,    -1,    12,    -1,    14,    -1,    -1,    -1,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    26,    27,    28,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,   125,    -1,   123,
      -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    58,   137,
     138,    -1,    -1,    63,    -1,    -1,   144,    -1,   142,    -1,
      -1,    -1,    -1,    -1,   152,    -1,    -1,    77,    -1,    -1,
     158,    -1,    -1,    83,    84,   159,    -1,    87,    -1,    -1,
      -1,   169,    -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,   187,   192,   189,    -1,    -1,    -1,    -1,
     194,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,   205,   206,    -1,    -1,    -1,    -1,   137,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   152,    -1,    -1,   233,    -1,   235,   158,    -1,
      -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,    -1,   260,    -1,    -1,    -1,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,   285,    -1,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,   321,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,   339,   262,    -1,    -1,   343,    -1,    -1,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
      -1,    -1,   356,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,    -1,   381,    -1,    -1,    -1,    -1,    -1,   387,
      -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,
      -1,   321,    -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,   339,
      -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   450,   451,   452,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,
      34,    35,    -1,   403,   482,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,   482,    -1,    -1,   563,    -1,    -1,   566,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,   578,   579,   580,   581,   142,    -1,
      -1,   589,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   602,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,    -1,    -1,   546,   621,   622,    -1,
      -1,    -1,    -1,   187,    -1,   189,    -1,    -1,   636,    -1,
      -1,   639,    -1,   563,    -1,    -1,   566,    -1,    -1,    -1,
      -1,   205,   206,    -1,    -1,   649,    -1,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,    -1,   602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,   639,
      -1,    -1,    -1,    -1,    -1,   279,   724,   725,   726,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     748,   749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
      -1,    -1,   356,    -1,   724,    -1,    -1,   444,   445,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,    -1,    -1,    -1,    -1,    -1,    -1,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,   622,    -1,
      -1,    -1,    -1,   710,   711,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   731,   649,   733,   734,   735,   736,
     737,    -1,    -1,   740,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   750,    -1,    -1,    -1,    -1,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   793
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   807,   819,   820,   823,   824,   825,
     826,   827,   829,   834,   837,   890,   891,   892,   893,   895,
     898,   920,   942,   949,   950,  1186,  1187,  1189,  1191,  1193,
    1196,  1198,  1199,  1200,  1201,  1202,  1204,  1205,  1240,  1241,
    1249,  1250,  1253,  1266,  1268,  1272,  1275,  1276,  1280,  1282,
    1287,  1291,  1297,  1298,  1299,  1300,  1301,  1302,  1303,  1308,
    1309,  1435,  1468,  1469,  1470,  1471,  1472,  1473,  1474,  1475,
    1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,  1484,  1492,
    1493,  1514,  1515,  1519,  1523,  1529,  1530,  1531,  1532,  1533,
    1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,
    1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,
    1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1584,
    1585,  1587,  1591,  1600,  1610,  1614,  1616,  1617,  1687,  1689,
    1691,  1713,  1719,  1721,  1722,  1723,  1725,  1729,  1731,  1768,
    1774,  1775,  1776,  1777,  1813,  1820,  1821,  1823,  1824,    12,
     108,   127,   200,   243,   286,   419,   498,   563,   565,   599,
     611,   707,  1787,  1788,  1789,  1792,   282,   370,  1281,  1769,
     571,  1662,   235,     5,     6,     8,     9,    10,    11,    12,
      15,    20,    23,    25,    26,    27,    28,    29,    30,    32,
      36,    40,    43,    44,    45,    47,    49,    50,    53,    56,
      57,    59,    60,    61,    63,    65,    66,    67,    68,    69,
      70,    72,    73,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    90,    91,    92,    93,
      94,    98,   103,   106,   110,   111,   112,   115,   120,   121,
     126,   127,   129,   135,   136,   137,   138,   139,   143,   146,
     147,   148,   152,   154,   155,   157,   158,   159,   162,   163,
     165,   166,   167,   168,   169,   170,   173,   174,   175,   176,
     177,   180,   181,   183,   184,   185,   186,   187,   190,   191,
     195,   196,   198,   202,   204,   205,   206,   207,   209,   211,
     215,   216,   218,   221,   222,   226,   227,   228,   229,   232,
     233,   234,   237,   242,   243,   244,   248,   252,   253,   255,
     256,   260,   262,   265,   266,   269,   272,   273,   279,   280,
     282,   284,   286,   287,   295,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   315,   316,   317,   319,   320,   321,   322,   324,
     325,   330,   331,   332,   333,   334,   335,   338,   339,   341,
     343,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     356,   357,   360,   361,   362,   363,   364,   368,   369,   373,
     375,   376,   378,   379,   380,   383,   393,   394,   395,   397,
     399,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   412,   414,   415,   416,   418,   420,   421,   422,   423,
     424,   426,   427,   428,   431,   435,   436,   438,   439,   442,
     443,   444,   445,   446,   448,   449,   451,   452,   453,   456,
     457,   458,   459,   460,   461,   462,   463,   465,   467,   468,
     470,   471,   472,   474,   477,   478,   479,   480,   482,   484,
     485,   486,   487,   488,   490,   491,   495,   496,   497,   498,
     502,   506,   508,   509,   510,   511,   513,   514,   515,   516,
     517,   523,   524,   525,   527,   530,   533,   535,   537,   538,
     539,   540,   541,   542,   545,   546,   549,   550,   551,   552,
     553,   554,   557,   558,   559,   560,   562,   563,   566,   567,
     568,   569,   572,   573,   575,   576,   577,   578,   584,   585,
     589,   590,   591,   594,   595,   597,   598,   600,   601,   604,
     607,   609,   611,   612,   618,   620,   623,   627,   629,   630,
     631,   632,   639,   640,   641,   643,   644,   645,   646,   649,
     652,   653,   654,   655,   656,   658,   667,   668,   669,   671,
     672,   673,   675,   678,   680,   687,   688,   691,   693,   695,
     696,   700,   701,   702,   703,   704,   705,   706,   707,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   745,   746,   747,   748,   749,   750,   751,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   914,  1659,  1668,  1678,  1679,  1680,  1682,  1683,  1686,
     315,   456,   836,   562,   565,  1715,  1715,   640,  1770,   108,
     199,   286,   389,   498,   518,   563,   568,   599,   603,   611,
     653,   707,  1163,  1488,  1784,  1788,  1789,  1790,  1791,  1792,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    96,    97,   102,   104,   107,   108,
     113,   114,   115,   120,   122,   125,   171,   178,   179,   188,
     195,   205,   207,   213,   219,   226,   230,   241,   245,   271,
     279,   290,   318,   323,   334,   338,   340,   344,   345,   346,
     347,   348,   355,   365,   366,   367,   371,   372,   396,   408,
     409,   411,   426,   454,   455,   474,   476,   483,   484,   490,
     543,   544,   551,   555,   556,   561,   571,   575,   576,   577,
     578,   587,   588,   589,   593,   596,   611,   615,   616,   617,
     619,   624,   626,   631,   632,   649,   664,   665,   670,   676,
     677,   679,   682,   683,   684,   685,   686,   690,   692,   694,
     745,   783,   799,   800,   801,   805,   807,   811,   815,   816,
    1136,  1301,  1319,  1320,  1323,  1324,  1325,  1327,  1331,  1334,
    1336,  1337,  1339,  1340,  1341,  1348,  1349,  1350,  1373,  1374,
    1638,  1640,  1643,  1644,  1645,  1646,  1647,  1648,  1651,  1654,
    1656,  1659,  1668,  1779,  1781,   108,   167,   200,   235,   286,
     419,   498,   518,   563,   586,   599,   611,   627,   653,   707,
    1488,  1668,  1281,   103,   535,   951,    13,    14,    99,   130,
     144,   167,   170,   183,   210,   235,   241,   274,   285,   420,
     424,   440,   448,   456,   492,   505,   506,   557,   586,   608,
     610,  1659,  1662,  1669,  1673,  1680,  1683,  1684,  1686,  1735,
    1736,  1657,  1668,   835,   565,   128,   220,   293,  1494,   406,
     658,    87,   427,  1615,   111,   235,   646,  1618,   243,  1715,
    1281,  1668,  1611,   486,   611,  1715,  1281,   128,   293,  1495,
    1518,   652,  1601,   521,   939,   943,   944,  1668,    13,   424,
    1735,  1770,  1668,    13,   140,   220,   526,   527,   529,   530,
     531,   548,  1310,  1311,  1312,  1782,    61,    62,   125,   209,
     282,   351,   403,   497,   584,   652,   653,   671,   707,   811,
    1138,  1659,  1671,  1679,  1680,  1682,  1683,  1685,  1688,  1698,
    1703,  1704,    35,    36,    61,    72,    97,    99,   109,   158,
     163,   166,   176,   198,   200,   209,   211,   282,   315,   380,
     407,   418,   419,   422,   423,   443,   497,   510,   546,   565,
     630,   753,   754,  1138,  1248,  1574,  1575,  1577,  1578,  1579,
    1699,   943,   204,   510,   584,  1248,   204,  1248,  1657,  1668,
     565,  1524,   406,   658,   243,  1720,  1668,   483,  1504,  1508,
     659,  1436,  1437,  1668,    32,    79,   154,   414,   436,   477,
     538,  1816,  1327,  1668,  1659,   400,  1055,   807,  1780,  1781,
     243,   282,  1323,  1298,  1299,  1301,  1435,     0,   156,   821,
     414,   104,   274,   611,  1213,  1662,  1668,  1672,  1674,  1675,
    1757,  1760,   126,   403,   611,  1242,  1243,  1244,  1245,  1246,
    1247,   194,   246,   285,  1313,  1314,  1466,   387,   602,  1448,
    1449,   276,   602,  1449,  1454,  1466,  1300,  1301,   130,   608,
      17,   195,  1588,  1589,  1657,   160,  1217,  1668,   160,   914,
     137,   152,   448,   479,  1724,   212,   914,  1672,  1668,  1657,
     563,   230,  1487,   212,   167,  1195,  1787,  1715,  1770,  1288,
    1289,  1657,   807,   921,   813,   185,   517,   582,  1485,  1657,
    1485,    19,  1771,   230,  1086,   235,   212,   455,  1672,   235,
     716,  1668,   563,  1086,  1086,   212,   235,   565,  1783,  1783,
    1787,  1792,   807,   807,   807,  1334,   807,   807,   807,  1323,
    1386,   807,   807,   807,   807,   807,   807,   807,   807,  1322,
    1322,   807,  1124,   807,   807,   807,   571,   807,   807,   807,
    1780,   807,   807,   807,   807,   807,   807,   807,   807,   807,
    1323,   807,   807,   807,  1384,  1385,  1654,  1668,   807,   807,
     807,   807,   807,   807,   807,   807,   807,  1323,  1124,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,  1124,   571,   807,   807,   807,
     571,   807,   807,   807,    37,   219,   571,   807,  1322,  1124,
    1124,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,  1334,  1334,  1334,   619,  1299,  1301,  1323,
     811,  1375,  1672,  1668,   812,    18,    19,    21,   386,   389,
     571,   647,  1321,  1328,  1329,  1667,  1668,   160,   161,   201,
     214,   254,   267,   294,   358,  1332,    33,   141,   249,   275,
     344,   365,   366,   441,   503,   504,   516,   721,   797,   798,
     799,   800,   801,   802,   803,   804,  1330,  1334,    71,   388,
     571,  1663,   259,   651,   807,   813,  1487,  1487,  1487,  1668,
     212,  1487,  1487,   716,  1668,  1487,   563,  1487,  1487,  1487,
     212,  1715,   830,  1592,   135,   418,  1734,   480,   480,   563,
     568,   611,   627,   653,   653,   384,   807,  1761,   562,   377,
    1761,    67,   510,  1761,   109,   627,  1761,   811,  1761,   377,
     582,   812,   380,    68,   432,   813,  1672,   197,   231,  1236,
    1668,  1662,  1822,  1323,   246,    85,   293,  1620,   194,  1714,
    1715,   197,   315,  1574,  1612,  1668,  1284,  1675,  1283,  1715,
     246,  1496,  1487,  1603,   315,   510,   753,  1602,  1604,   620,
     940,   500,   945,  1734,   377,   197,   377,   582,  1771,  1319,
    1312,   500,   653,   813,    35,   125,   160,   501,  1139,  1505,
    1672,   194,   582,  1505,   255,   432,  1705,  1706,  1708,  1710,
      13,   125,   364,  1673,  1676,  1743,   212,   811,  1672,    35,
     125,  1141,  1142,  1672,   813,   125,   584,  1694,  1702,  1704,
     812,  1695,  1505,   166,   275,   634,  1433,  1583,   807,   108,
     167,   200,   419,   565,   586,   611,   627,  1583,    13,  1573,
    1672,  1453,  1454,   197,   249,  1576,  1580,   198,    70,   542,
     194,   542,   562,    70,   542,    13,    43,    94,    98,   253,
     331,   395,   517,   559,  1525,  1526,  1527,   166,   222,   542,
    1453,  1583,   542,   287,   157,   421,   585,   234,   235,   261,
    1162,    73,   562,   542,   623,   945,   432,   636,  1254,  1255,
    1256,   446,   533,  1261,  1262,  1263,  1261,  1657,  1668,  1822,
    1715,   807,   812,  1436,   812,   807,  1438,    37,   219,  1639,
    1663,  1815,  1815,  1815,    96,  1814,  1815,  1815,   156,   813,
     807,    48,   156,  1301,   156,   197,   111,   156,   808,   808,
    1313,   808,   810,  1668,  1322,   807,   138,   228,   372,  1746,
    1750,  1751,  1758,   811,     7,   125,   138,   144,   228,   343,
    1745,  1746,  1750,  1751,  1752,  1753,  1754,  1755,   464,   812,
    1763,   160,   160,   160,   812,   502,   608,  1315,   146,   391,
     811,  1464,  1465,  1467,  1672,   249,  1314,  1466,  1313,    48,
      13,   140,  1778,  1453,   290,   372,   593,  1455,  1456,  1640,
    1668,  1778,  1453,  1448,  1449,  1454,   231,   293,   428,  1521,
    1522,  1518,   195,  1588,   160,   194,  1297,  1492,  1493,  1514,
    1519,  1586,  1590,  1639,  1668,   332,   569,   595,  1188,  1675,
    1192,  1668,  1668,   746,   784,  1672,  1668,  1190,   383,     7,
      26,    84,   144,   237,   322,   369,   450,   629,   748,  1022,
    1023,  1036,  1037,  1038,  1039,  1045,  1047,  1048,  1049,  1575,
       7,    12,    14,    17,    27,    28,    58,    63,    64,    69,
      77,    83,    84,    87,    96,   111,   125,   129,   137,   138,
     144,   152,   158,   169,   192,   233,   235,   242,   262,   285,
     321,   339,   343,   381,   387,   394,   403,   435,   450,   451,
     452,   482,   538,   539,   540,   541,   546,   563,   566,   589,
     602,   636,   639,   724,   725,   726,   748,   749,  1038,  1087,
    1090,  1092,  1093,  1145,  1218,  1219,  1221,  1222,  1224,  1226,
    1227,  1228,  1229,  1231,  1233,  1668,   171,  1668,   914,   532,
    1793,  1794,  1194,  1485,   249,   812,   235,   263,   400,  1160,
    1294,  1295,  1323,  1382,  1383,  1668,   839,   838,   176,   428,
     812,  1267,    59,   176,   180,   194,   330,   428,  1277,  1278,
    1279,    57,   368,   368,   447,  1772,  1330,  1668,  1668,  1668,
     518,   193,  1668,   708,     7,  1016,  1668,  1675,  1747,  1759,
    1743,  1668,  1668,  1086,    11,   167,   200,   419,   586,   901,
    1786,  1794,  1800,  1802,  1803,  1808,   200,   901,  1785,  1794,
    1800,  1803,  1808,  1783,  1323,  1323,    13,   140,  1380,  1431,
    1380,  1380,  1380,   633,  1388,  1323,  1323,  1383,  1383,  1323,
    1323,   140,  1380,  1431,   808,   372,   808,   808,  1323,  1323,
    1323,  1323,  1654,   116,   117,   118,   119,   120,   223,   224,
     225,   226,   334,   336,   337,   338,   345,   426,   489,   490,
     631,   648,   649,  1426,  1427,  1323,  1382,   112,   115,   575,
     578,  1428,   140,  1376,  1323,  1323,  1323,  1323,  1426,  1323,
    1383,  1385,    10,   812,   813,   140,  1380,  1323,  1323,   140,
    1380,  1323,  1323,  1383,  1383,  1383,  1323,  1383,  1327,  1323,
    1323,  1323,  1323,  1323,  1323,   808,  1323,  1380,  1380,  1323,
    1323,   140,  1380,  1323,  1427,  1427,  1323,    46,   268,   583,
    1323,  1323,   808,  1655,  1656,  1668,  1380,  1380,  1323,  1323,
    1323,  1380,  1380,  1383,   808,   808,  1323,  1323,  1323,  1323,
    1323,   811,  1352,  1353,  1640,  1647,  1668,   808,   808,   808,
    1334,   140,  1380,  1313,   808,   812,   209,   282,   497,  1700,
     501,  1323,  1320,  1667,  1668,  1323,  1323,  1323,   179,   371,
     588,   604,  1330,    13,    20,  1325,  1333,  1327,  1327,   807,
    1780,  1334,  1327,  1327,  1327,  1327,   275,   666,  1326,  1327,
    1327,   245,  1327,   245,  1327,  1327,  1327,  1327,  1327,    33,
     249,   275,   441,  1672,  1334,  1663,  1663,  1323,  1345,  1346,
    1347,   801,  1668,  1668,   914,  1668,   377,  1668,   914,  1672,
     708,  1045,  1047,  1489,  1490,  1491,   914,  1668,  1675,  1742,
    1485,  1743,  1668,  1487,   614,   831,    35,   158,   162,   202,
     222,   287,   382,   418,   442,   467,   511,   542,  1593,  1597,
    1598,  1715,    86,   811,   952,   953,   954,   955,  1668,  1732,
     562,  1668,  1762,  1675,  1672,   200,   419,   565,  1733,  1742,
    1736,    21,  1429,  1430,   186,   362,  1668,  1726,  1668,  1822,
    1496,   515,   812,    50,   282,  1619,    30,  1657,  1716,  1717,
    1485,   811,   828,  1662,   287,   812,   582,  1285,  1286,  1657,
    1485,  1657,  1668,  1607,  1605,  1606,   812,  1663,    56,    66,
      76,    90,    91,    92,   106,   333,   350,   488,   550,   567,
     946,   948,   812,  1730,  1675,  1742,  1733,   486,  1773,  1772,
     197,  1304,  1305,  1466,    13,   364,  1743,  1668,    71,  1144,
    1323,  1675,   732,   571,  1665,   273,   379,   642,   812,  1709,
     812,  1707,   657,  1690,   811,   812,  1668,   209,   282,   497,
     652,   671,  1701,  1505,  1668,  1705,  1695,  1505,  1696,  1697,
    1698,  1703,    13,    35,   125,   377,   483,   708,  1323,  1712,
     249,  1581,  1663,  1323,   801,  1086,   914,   914,   914,  1657,
     914,  1675,  1657,   287,   349,   542,  1583,  1668,   914,  1583,
    1675,  1576,   914,  1583,   252,   560,   181,   194,  1528,   812,
    1581,  1576,   194,   889,  1576,  1580,  1580,  1576,  1583,  1583,
     379,   642,    88,   812,  1251,   812,   889,   125,  1323,  1509,
    1510,  1511,  1508,  1437,  1439,  1668,    21,   812,   378,  1818,
     558,  1819,   645,   258,   470,  1817,  1668,  1323,   277,   280,
     429,  1056,  1057,  1675,   136,   808,   156,   822,   808,   728,
      48,   786,   455,  1203,  1203,   787,   788,   790,  1672,  1758,
     653,   728,  1758,   636,  1758,   455,   727,  1744,   455,  1744,
    1744,   455,  1744,  1744,    65,   256,   364,   534,   552,   643,
    1739,  1740,  1675,  1757,   636,  1210,  1660,  1662,  1660,  1660,
    1244,   666,   667,   669,  1316,  1317,  1318,   571,  1664,  1664,
    1672,   812,   502,  1323,  1450,  1652,  1301,  1302,   376,   812,
    1301,  1302,  1453,  1453,   197,  1486,  1658,  1668,  1521,  1236,
    1672,    87,   432,  1081,  1082,  1085,  1092,  1093,  1094,  1145,
     915,  1668,  1668,   194,   368,   315,     7,   915,   807,   110,
    1033,  1505,  1506,  1506,  1033,  1506,  1506,   582,  1506,   812,
    1089,   158,    74,    89,   199,   400,   518,  1102,  1104,  1160,
    1235,  1506,    64,    89,   235,  1235,   400,  1506,  1506,  1235,
    1506,   400,   400,  1506,  1506,  1506,  1506,   582,   136,  1506,
     261,   400,   563,    64,    89,   193,   400,   417,  1160,  1235,
     261,  1506,   400,   400,   563,   136,  1506,  1506,  1506,  1506,
    1506,  1235,   400,    48,  1506,  1506,   400,    21,    74,   160,
     582,  1160,  1239,   400,   400,  1506,   584,  1506,  1506,  1506,
     139,   331,  1506,  1506,   400,  1506,   618,   618,  1506,  1506,
    1506,  1090,    71,  1138,   449,  1055,  1220,   812,   812,   500,
     709,  1828,  1197,   491,   627,  1794,   144,   608,  1274,   125,
    1290,  1668,  1289,  1657,   807,   807,  1295,   808,   812,   457,
     458,   459,   460,   461,   462,   463,   840,   841,   232,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   316,
     317,   444,   445,   710,   711,   731,   733,   734,   735,   736,
     737,   740,   750,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   793,   853,   854,   855,   856,   857,   858,   859,   860,
     861,   862,   863,   864,   865,   866,   867,   868,   869,   870,
     871,   872,   873,   874,   875,   876,   877,   878,   879,   886,
     887,   888,  1657,   609,  1278,    57,   447,   171,   894,   377,
       7,   716,   111,   377,  1086,  1033,   613,  1017,     7,    19,
    1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,   125,   812,
     897,   591,   591,   614,  1175,  1176,  1657,   200,  1086,   914,
    1668,   914,   914,  1794,   812,   808,  1380,   808,  1323,   808,
     808,   808,  1323,   150,   633,  1387,    21,    25,   808,   614,
     808,   808,   808,   614,   812,  1383,   808,   801,   808,   812,
     812,   808,   808,   808,   197,   812,   808,   812,  1383,   808,
     812,   812,   812,   800,   812,   808,   808,   807,  1654,  1668,
    1380,   808,   808,   808,  1380,   808,   812,   808,   808,   808,
     808,   812,   808,   249,   808,   812,   812,   808,   812,   812,
     808,   808,   808,   812,   197,   812,  1380,   808,   808,   812,
     812,   812,   808,   197,  1323,   197,  1323,   197,  1323,   197,
     808,   812,   808,   808,   808,   808,   812,    21,   808,   812,
     808,   812,   808,   808,   689,  1358,  1358,   808,   812,  1351,
     808,  1351,   812,  1672,   808,  1358,  1358,  1358,   812,  1380,
     808,  1383,   813,   813,   813,  1672,  1323,   817,   179,   371,
     588,   604,  1780,    19,  1323,   165,  1327,   807,  1323,  1323,
    1327,   807,  1780,  1334,  1327,  1321,   808,   812,   807,   813,
     813,  1657,  1489,  1487,  1089,  1024,  1025,  1026,  1045,   812,
      52,   469,  1237,   192,  1834,  1485,   811,   832,   833,   287,
     287,   287,   287,   287,   287,   812,  1485,  1599,   115,   575,
     578,   947,   957,  1374,  1645,  1654,  1672,   812,   160,   377,
     808,   812,   582,   801,  1668,  1677,  1741,   636,  1737,  1668,
     160,   186,   201,   214,   266,   267,   294,   362,   416,  1727,
    1728,  1432,  1433,  1657,  1662,  1662,  1292,  1293,  1657,   236,
    1430,   812,  1672,    31,   582,  1613,  1675,  1675,   812,   582,
     176,   428,   612,  1269,  1270,  1271,   400,  1397,  1398,   582,
    1609,    13,  1608,  1608,  1604,   812,   160,   210,   377,   197,
    1741,  1668,   145,   699,   719,   807,   816,  1306,  1307,  1389,
    1391,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  1657,  1780,
    1432,  1304,   582,   582,   582,    35,  1143,  1672,   582,  1505,
    1203,  1203,   432,   453,   495,  1711,  1708,  1706,  1743,  1672,
    1676,   194,   813,   813,   813,   813,   813,  1704,  1323,  1712,
     812,  1702,  1662,   197,  1582,   808,  1668,   614,  1583,   427,
    1453,  1527,  1582,  1583,    60,  1583,  1657,  1657,  1583,   513,
    1256,   607,  1264,  1263,   808,   812,   808,   812,  1780,  1639,
     404,   194,   813,   808,    73,   807,    73,   807,   401,  1059,
     216,   263,   814,  1506,   403,   732,  1665,  1665,  1744,  1744,
     789,   789,  1749,  1752,    13,   364,  1743,   403,   144,  1672,
    1749,  1665,   103,  1665,  1665,   571,   571,   571,    19,  1738,
     319,   320,   324,   325,  1211,  1212,     5,   403,   738,   739,
    1207,  1208,  1209,  1486,   668,  1317,  1138,  1140,  1465,   341,
      22,   131,  1451,  1452,   812,  1456,  1456,  1486,  1657,  1668,
     197,   812,   813,  1520,  1307,   122,   188,   219,   290,   372,
     593,  1459,  1462,  1463,   379,  1082,    84,    77,    93,   265,
     342,   368,   430,   532,   917,   919,    60,   477,   263,   597,
    1035,   108,   221,   393,   403,   410,   514,   611,   899,   900,
    1662,  1021,  1022,   219,   290,   372,   593,  1050,  1461,  1462,
    1659,  1662,  1021,  1050,  1050,  1668,  1662,  1835,  1023,  1506,
    1183,  1668,  1160,  1161,  1281,  1161,    64,   193,   417,   603,
    1103,  1159,  1174,  1183,  1668,   807,  1668,   125,  1232,  1668,
    1668,  1668,  1668,  1668,  1281,   122,   188,   290,   372,   593,
    1460,  1460,  1668,   122,   188,   219,   290,   372,   593,  1458,
      13,  1225,  1425,  1668,  1281,  1662,  1662,  1662,  1662,  1138,
    1506,  1458,  1225,  1668,  1668,   263,  1425,   263,  1668,  1668,
    1672,  1668,  1225,  1506,   186,   266,   368,  1096,  1460,   125,
    1234,  1668,  1460,  1460,  1668,  1281,  1446,  1447,  1655,   125,
    1091,  1458,  1662,  1281,  1668,  1668,  1657,  1281,  1281,    80,
      82,   125,   148,   187,   439,  1095,  1091,  1091,   125,  1458,
    1668,  1458,  1225,   807,   371,  1672,  1835,  1835,  1506,  1506,
     402,     7,   144,  1087,  1228,  1229,  1222,  1226,  1229,   717,
     718,  1034,  1506,   706,  1832,   377,   909,  1214,   127,   248,
    1657,   672,   672,  1225,   417,  1421,  1422,  1423,  1668,   249,
    1323,   160,   160,   160,   160,   160,   160,   160,   812,   889,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     812,   889,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,  1083,
    1084,  1085,  1657,  1035,   708,   641,  1657,  1461,   286,    77,
     177,   184,   363,  1018,  1019,  1020,  1036,  1037,  1039,  1040,
    1043,  1044,  1045,  1046,  1047,  1048,  1049,  1033,  1749,  1748,
     791,  1756,   653,  1747,  1763,  1506,    47,   216,   485,  1178,
    1178,   377,    21,   231,   275,   455,   807,  1051,  1052,  1053,
    1054,  1055,  1088,  1090,  1299,  1301,  1501,  1622,  1668,   914,
     807,   472,  1809,     9,    31,  1014,   245,  1323,   808,  1357,
    1358,  1357,  1357,  1357,   574,  1323,  1323,   154,    35,    62,
     112,   115,   123,   142,   189,   205,   260,   279,   346,   347,
     348,   353,   356,   408,   409,   434,   508,   578,   606,   649,
    1113,  1117,  1381,   282,   578,  1139,  1139,  1381,   808,  1357,
     808,   245,   245,  1323,  1323,  1323,   387,  1378,  1323,  1323,
    1323,  1323,  1323,  1327,   808,  1357,   808,  1357,  1323,  1323,
    1323,  1323,  1323,  1323,  1383,  1357,  1357,   245,  1323,  1323,
    1323,   808,  1357,  1323,  1323,  1323,  1323,   197,  1323,   197,
    1323,   197,  1323,  1323,  1357,  1357,  1323,    35,    62,  1458,
    1380,  1357,   807,  1359,  1360,  1361,  1668,   231,   693,  1355,
    1352,   808,  1355,   808,  1334,  1358,   596,  1638,   808,  1357,
     808,   813,  1184,  1325,   808,   812,  1334,  1334,  1426,  1426,
      19,  1323,   165,  1347,  1382,   801,  1668,  1668,  1230,  1231,
    1233,  1461,  1491,  1089,  1675,  1237,  1672,   812,   889,  1598,
    1594,   955,   958,   959,   954,   373,   484,   956,  1733,  1668,
    1742,   813,   813,   582,   654,  1432,   807,  1453,  1397,   812,
    1294,  1295,  1664,   293,   432,   642,  1718,  1717,  1323,  1662,
     582,  1286,  1657,  1271,   807,   500,   619,   620,   807,  1497,
    1498,  1500,  1501,  1502,  1461,   889,   889,   948,   947,   384,
    1733,  1742,   197,   807,  1780,  1307,  1391,  1400,  1401,  1402,
    1403,   730,   812,   100,   238,   258,   271,   354,   476,   548,
    1392,  1393,  1394,  1397,  1430,   212,  1443,  1432,  1743,  1743,
    1743,   732,  1665,  1744,  1744,    78,   594,   432,  1459,  1692,
    1693,  1505,  1697,  1460,  1453,   163,   630,  1742,   372,  1453,
    1660,  1576,  1576,   523,   524,   525,   888,  1265,   611,  1257,
    1511,  1668,   812,   335,   156,   807,  1327,   807,  1327,  1459,
     554,  1060,   807,    12,  1058,  1458,  1664,   403,   500,     7,
    1758,    21,    48,   343,  1744,   403,  1744,  1744,  1739,  1458,
    1458,  1458,  1458,  1212,   285,   605,   174,   464,   703,   704,
     696,  1459,  1459,    77,   747,  1206,  1209,  1139,    73,  1623,
    1652,   614,  1430,   813,  1307,  1658,   801,  1668,   500,  1506,
    1506,  1662,   532,   532,   532,   532,   532,   491,  1668,   377,
    1662,  1030,  1031,  1032,  1036,  1045,  1047,  1662,  1662,  1662,
    1662,  1458,  1662,  1662,   808,   812,  1672,  1183,   401,   807,
    1183,   807,   263,   263,  1161,   366,  1105,  1106,  1107,  1174,
     807,   614,   591,  1098,  1099,  1100,  1102,  1668,    34,    35,
      40,    42,    44,    45,    62,   112,   115,   123,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   327,
     328,   329,   346,   347,   348,   353,   356,   374,   375,   408,
     409,   496,   500,   512,   572,   575,   578,   579,   580,   581,
     621,   622,   649,  1108,  1111,  1112,  1113,  1114,  1115,  1116,
    1117,  1119,  1107,  1107,   655,   656,  1177,   144,   500,  1225,
    1668,  1277,   812,  1459,   125,  1139,  1662,   563,  1668,  1237,
     636,   563,  1662,  1108,  1225,   812,  1451,  1225,   582,   582,
    1425,  1225,  1599,  1143,  1139,  1024,   372,  1829,  1830,  1506,
     137,   152,  1833,    81,   487,   450,  1215,  1438,   377,   377,
     808,   808,   812,  1290,   807,   842,   842,   807,   847,   847,
     807,   850,   850,   807,   845,   841,   807,  1660,  1458,  1660,
     371,   882,  1674,  1458,   377,   741,   742,   883,  1459,   282,
     571,   742,   884,  1459,   879,  1458,  1660,  1660,  1660,  1660,
    1458,  1458,  1458,  1458,  1458,  1660,  1660,  1660,  1660,  1660,
    1660,  1458,  1660,   371,   885,  1660,  1660,  1660,  1458,  1646,
    1662,  1458,  1660,  1460,  1085,   807,   438,   598,  1027,  1028,
    1029,  1036,  1041,  1042,  1043,  1044,  1045,  1047,  1461,  1672,
     807,   896,   212,  1506,  1506,  1506,  1506,  1089,  1024,    19,
     785,  1743,  1210,   611,   708,  1827,  1657,  1501,  1657,   275,
    1098,  1053,  1052,  1089,  1313,  1054,   472,   902,  1804,   123,
     247,   434,   549,  1097,   807,   130,   241,   608,  1015,  1323,
     808,  1357,  1323,   574,   807,  1128,  1129,  1129,   807,  1123,
     807,  1121,  1122,  1128,   413,  1118,  1120,  1128,    62,   247,
    1123,   247,  1129,   720,  1335,    21,   751,   808,   808,   808,
    1357,  1357,  1323,  1323,   808,   808,   812,   808,    48,   494,
    1377,   812,   812,   808,   812,   808,   249,  1342,  1343,  1357,
    1357,   808,   808,   808,   808,   812,   808,   808,  1323,   808,
     194,   808,   808,   812,  1357,   808,   812,   812,   808,  1323,
     808,  1323,   808,  1323,   808,   808,   808,   807,  1150,  1150,
     812,   808,  1360,  1362,  1363,   687,   687,  1358,   812,  1354,
    1355,  1358,  1355,   808,   743,  1338,  1357,  1668,  1383,   808,
    1325,   808,   812,  1334,   808,  1233,  1231,  1026,   833,   194,
     636,  1595,   160,   812,  1741,   636,  1765,   801,   801,  1668,
    1742,   384,  1453,  1510,   500,  1497,  1498,  1293,  1657,  1295,
     231,  1296,  1621,  1622,   642,   282,  1675,  1424,  1425,  1516,
    1517,  1655,   808,  1499,  1650,  1651,  1655,  1668,   807,  1503,
    1507,   160,   197,  1741,  1742,  1323,  1430,   812,   808,   808,
     808,   808,   808,  1389,  1390,  1391,  1399,  1389,   258,   258,
     390,  1396,   238,   271,   476,  1395,  1396,  1399,  1389,  1389,
    1430,  1438,    48,   217,  1434,  1443,  1203,  1203,  1089,  1712,
     889,  1432,  1583,   160,   160,   812,   160,   403,  1258,  1458,
    1062,  1668,   808,  1062,   808,    48,   807,  1064,  1327,   160,
     807,   228,   792,  1758,   219,  1662,  1666,   732,  1665,  1758,
     125,   245,   360,   103,   125,  1459,   245,  1663,  1663,   153,
     164,   385,   570,  1624,  1625,   278,  1626,  1307,  1397,  1668,
    1432,   813,  1520,  1516,  1091,  1662,   111,   111,   127,   248,
     368,   162,  1089,   900,   807,  1459,   400,  1065,  1066,   807,
    1323,  1183,   729,   807,   807,  1180,  1181,  1182,  1668,  1178,
    1178,   808,   812,  1108,  1128,  1128,  1129,    23,    35,    49,
     600,   625,  1128,  1138,  1146,  1147,  1148,  1123,   807,  1148,
      62,   621,  1114,  1148,  1148,    62,   622,   622,   625,   807,
    1129,  1123,  1123,  1148,  1128,  1129,   440,  1101,  1153,    27,
      71,    75,    77,   125,   366,   371,   377,   417,   496,   546,
     603,   705,   748,   749,  1104,  1107,  1131,  1132,  1133,  1144,
    1152,  1177,  1330,    35,  1128,  1149,  1128,  1128,  1129,   807,
    1122,  1130,  1121,   125,   125,  1177,  1108,  1668,  1144,  1144,
     565,     9,   186,  1238,  1447,  1668,  1668,   246,  1269,   808,
     799,  1089,   372,   799,  1831,  1834,   366,   415,    25,   168,
     903,   582,   137,   152,   905,  1795,  1425,  1425,  1422,   808,
     843,   844,  1668,   808,   848,   849,  1668,  1677,   808,   851,
     852,  1660,  1661,   807,   808,   846,   880,   881,  1458,  1181,
    1506,  1506,  1089,   896,   383,  1181,   352,   713,   714,   715,
    1668,  1662,  1050,  1050,  1459,  1020,  1749,   228,  1750,  1751,
    1753,  1207,  1828,   807,  1657,   808,  1090,  1097,   377,   922,
     923,   924,  1668,   515,  1810,   377,  1426,  1323,   122,   290,
     372,   593,  1148,   372,   372,   808,  1381,   245,  1649,  1426,
    1426,  1323,  1379,  1652,  1639,   808,  1323,  1323,  1383,    44,
     354,   808,   636,  1344,  1323,  1426,  1323,  1323,  1323,  1323,
     808,   808,   808,  1459,   808,   808,  1458,  1357,   808,   400,
    1364,  1323,  1358,  1358,   197,  1356,  1381,   125,   162,   371,
    1410,  1412,  1413,  1414,   808,  1383,  1596,   432,    56,    66,
      76,    90,    91,    92,   106,   333,   350,   471,   488,   550,
     567,   960,   959,   582,   210,   636,  1764,   808,  1516,    21,
    1512,   377,  1513,  1296,   269,   246,   808,   812,  1505,  1500,
    1501,   808,   812,   813,  1509,   812,   947,  1742,   197,   812,
    1438,  1389,   817,   258,  1396,  1396,   258,   258,   377,   614,
     377,   614,   192,   231,   613,  1416,  1417,  1418,  1419,  1420,
    1323,  1444,  1653,  1323,   697,  1440,  1434,  1744,  1744,  1459,
    1662,  1662,   888,  1662,   160,   126,  1259,   808,   812,   808,
    1057,  1065,   808,  1459,  1061,  1062,    48,    21,  1749,   403,
    1749,  1459,   125,   722,   125,  1459,    48,    48,   153,    48,
    1625,   536,   570,  1627,  1628,  1432,  1432,  1432,   477,  1032,
    1181,  1668,   808,   812,  1181,   808,   807,  1181,  1323,   808,
     812,   807,  1451,  1099,  1101,    35,    23,   600,  1138,    35,
    1148,  1139,  1185,  1639,  1148,   625,  1185,  1148,   508,   606,
     650,  1125,  1126,  1127,  1657,  1238,  1143,   125,   148,   187,
    1134,  1662,   115,   575,   578,   799,   800,   807,  1136,  1137,
    1641,  1642,  1643,  1644,   608,   125,   125,   139,   331,  1135,
     263,  1461,  1506,  1506,  1103,    71,  1133,   203,  1109,   263,
     371,   723,  1149,  1148,  1149,  1125,   372,  1125,  1125,   807,
    1642,  1238,  1657,  1668,   807,   372,  1830,   372,   415,  1323,
    1323,   377,   909,   914,   377,    77,   910,    21,   636,  1273,
     808,   812,   808,   812,   813,   808,   812,   844,   808,   812,
     808,   812,   808,  1050,  1050,  1029,   807,   808,  1660,  1660,
    1660,  1660,   636,  1206,  1832,  1181,   808,  1051,   515,   487,
     808,   812,  1111,  1662,   239,   249,   392,   925,   926,   927,
     928,  1657,   808,   808,   808,   808,   808,   808,   812,  1335,
    1663,   808,   808,   808,   812,  1357,   808,   812,   808,   341,
     265,   427,   808,   808,   808,   808,   808,   808,  1151,   812,
      48,   387,  1365,   186,   266,  1355,  1641,   808,  1413,  1414,
     377,   808,   175,   285,  1742,   384,   210,    21,  1767,  1432,
    1512,  1668,  1513,   147,   565,  1517,  1511,  1500,  1501,  1650,
    1668,   808,  1507,  1742,  1638,   808,   258,   258,  1323,   807,
    1323,   807,  1160,  1160,  1417,   638,   812,  1445,  1360,  1441,
    1442,  1440,  1662,   160,   405,  1260,  1668,   216,   263,   808,
     808,  1662,  1666,   120,   120,  1639,  1639,    48,  1639,    48,
      48,  1628,  1448,  1448,   377,   808,   619,  1067,  1066,   808,
    1179,  1180,   808,   808,    77,   262,   748,   749,  1170,  1171,
    1172,  1173,  1176,  1177,  1182,   372,  1139,  1149,   808,   812,
     808,  1127,   807,  1154,  1646,  1646,  1323,  1136,   620,  1835,
    1835,  1143,    15,    21,  1323,  1223,  1224,  1065,  1426,   510,
    1662,   143,  1216,  1501,  1796,   372,   844,   849,  1668,   852,
     812,   807,   881,   636,  1164,  1165,  1166,  1173,   899,  1167,
    1168,  1169,  1173,   228,  1672,  1833,   808,  1662,   903,  1805,
     924,  1144,   808,   812,  1668,   194,   372,   808,    21,  1652,
    1323,   341,   173,   808,  1458,  1444,    48,   429,   481,   681,
    1366,  1372,  1358,   377,   162,   698,  1764,   384,  1675,  1453,
    1513,  1438,   263,  1657,    73,  1406,  1424,  1424,   194,  1415,
    1415,  1653,    21,   812,  1662,   160,  1252,   807,  1058,   111,
     464,  1825,  1826,  1639,  1639,  1639,   276,  1457,  1457,   162,
    1164,   249,   272,    77,   111,   235,   321,   339,   363,   563,
    1078,  1079,  1080,  1575,  1167,   808,   812,  1170,  1451,  1662,
    1506,  1506,  1506,  1172,   808,  1148,  1639,  1148,  1155,  1668,
     318,  1156,   808,   807,   808,   808,   904,   911,   912,   636,
    1797,   673,   844,   844,   397,  1230,  1166,   808,  1230,  1169,
      48,  1170,   908,   909,   472,  1811,   927,  1111,   149,   808,
     112,   808,   808,  1450,    33,   103,   245,   696,  1367,  1368,
    1369,  1640,  1646,  1767,   636,  1766,   608,  1397,   807,   808,
     808,   808,   212,   258,   387,   807,   807,  1361,  1442,  1662,
     889,  1327,   807,   136,   368,   534,  1456,   807,  1069,  1071,
     573,  1506,   136,   136,  1506,  1506,  1506,  1506,   807,  1075,
    1080,   158,  1153,  1180,  1458,  1835,  1835,  1451,   808,   812,
     198,   399,   509,   377,  1157,  1323,   537,   906,    54,    68,
     182,   230,   257,   270,   380,   473,   913,   964,   966,   967,
     968,   970,   971,   972,   973,   974,   975,   977,   985,   986,
     989,  1000,  1003,  1005,  1006,  1659,  1670,  1681,  1682,  1683,
    1686,    53,    64,   282,   808,   812,  1659,  1461,  1230,   905,
    1111,   916,  1144,   483,  1123,   245,   696,  1368,  1370,  1640,
    1646,   483,  1323,   691,   678,  1371,   691,   691,   653,  1516,
    1140,   700,  1407,  1408,  1668,  1430,    48,    48,  1421,  1423,
     808,  1062,  1506,   534,   807,  1070,  1071,  1072,   326,  1068,
    1071,  1662,  1506,  1506,  1461,  1461,  1459,  1668,   554,  1076,
    1077,  1506,  1668,   130,   608,   808,  1323,   155,   907,   987,
     990,  1668,   197,   362,   978,   965,  1670,  1670,  1668,   969,
     824,   292,   454,   635,  1009,    32,  1007,   814,    64,   384,
      64,   844,   910,  1144,   134,   917,   918,  1330,  1812,   191,
     412,  1798,  1799,   808,  1323,   680,    19,   680,   680,  1426,
     103,   212,   368,   695,    13,   125,   364,  1743,   481,  1629,
     702,   808,   812,   194,  1111,   808,   808,   553,  1063,   808,
    1664,   808,   812,   326,  1073,  1074,  1327,  1662,  1662,  1672,
     808,   812,  1672,    52,   368,   469,   500,  1158,  1158,   547,
     628,  1110,  1323,  1323,   633,   992,   996,   197,  1668,   980,
     981,  1323,   930,   963,   964,   966,   968,   970,   972,   973,
     974,   975,   977,   985,  1000,  1003,  1005,   930,  1010,  1008,
    1001,  1004,   384,   384,   808,   143,  1806,   134,   963,  1672,
    1801,  1426,  1370,   691,   483,   688,  1690,   228,  1623,  1638,
    1408,   701,  1144,  1459,  1063,  1826,  1071,   808,   812,  1078,
    1077,     6,   125,   371,   377,   377,  1131,   988,   997,   150,
     996,   999,   246,   154,  1323,   154,   963,   810,   607,  1323,
     931,  1009,  1007,   911,   916,   963,   680,    48,  1626,  1406,
     171,  1409,  1074,   608,   130,   633,   991,   993,  1323,   930,
     154,   976,   230,   982,   292,   810,  1012,  1011,   124,   929,
     932,  1002,  1670,  1002,  1807,  1639,   231,  1630,   702,  1158,
    1158,   994,   993,   999,   998,    54,   979,  1668,   574,  1323,
     143,    95,   172,   935,   961,  1668,   154,   963,   810,   963,
     372,   807,  1632,  1638,  1323,   154,   574,   812,   930,  1013,
     930,   215,   812,  1111,    86,   105,   810,   278,   481,  1631,
     808,   811,  1633,  1634,  1655,   500,  1635,  1410,  1411,  1413,
     995,    54,   930,  1668,   983,   154,   154,   194,  1668,  1144,
     194,   194,  1672,   808,   812,  1636,  1637,  1655,  1412,  1414,
     574,   150,   151,   984,   454,   635,   933,   125,   962,   938,
     939,  1458,   934,  1634,   812,  1505,   377,   930,   930,   980,
     520,   522,   936,   937,   938,   941,  1330,  1668,  1323,  1297,
    1637,  1511,   812,   963,   196,   937
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   818,   819,   819,   819,   819,   819,   819,   820,   821,
     820,   820,   822,   822,   823,   823,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   825,   826,   826,   827,   828,   828,   830,   829,   831,
     831,   832,   832,   833,   835,   834,   836,   836,   838,   837,
     839,   837,   840,   840,   841,   841,   841,   841,   841,   841,
     841,   842,   842,   843,   843,   844,   845,   845,   846,   846,
     847,   847,   848,   848,   849,   850,   850,   851,   851,   852,
     853,   853,   854,   854,   855,   855,   856,   856,   857,   857,
     858,   858,   859,   859,   860,   860,   861,   861,   862,   862,
     863,   863,   864,   864,   865,   865,   866,   866,   867,   867,
     868,   868,   869,   869,   870,   870,   871,   871,   872,   872,
     873,   873,   874,   874,   875,   875,   876,   876,   877,   877,
     878,   878,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   880,   880,   880,   881,
     882,   882,   883,   883,   883,   884,   884,   884,   885,   885,
     886,   886,   887,   887,   888,   888,   888,   888,   889,   889,
     890,   890,   890,   890,   891,   892,   894,   893,   893,   893,
     893,   893,   893,   893,   895,   895,   896,   896,   896,   896,
     896,   897,   897,   898,   898,   898,   899,   899,   900,   900,
     900,   900,   900,   900,   900,   902,   901,   904,   903,   903,
     905,   905,   905,   905,   906,   906,   907,   907,   908,   908,
     909,   909,   910,   910,   912,   911,   913,   913,   913,   913,
     913,   913,   913,   913,   913,   913,   913,   913,   913,   914,
     914,   915,   915,   916,   916,   917,   917,   917,   917,   917,
     917,   917,   918,   918,   918,   919,   919,   920,   921,   921,
     922,   922,   923,   923,   924,   925,   925,   926,   926,   927,
     928,   928,   928,   928,   929,   929,   930,   930,   931,   931,
     932,   932,   933,   932,   934,   932,   935,   935,   936,   936,
     937,   938,   938,   939,   940,   940,   941,   941,   941,   941,
     941,   942,   943,   943,   944,   944,   945,   945,   946,   946,
     947,   947,   947,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   948,   948,   948,   949,   950,   951,   951,   951,
     952,   952,   953,   953,   954,   955,   955,   956,   956,   957,
     958,   958,   959,   960,   960,   960,   960,   960,   960,   960,
     960,   960,   960,   960,   960,   960,   961,   961,   962,   962,
     963,   963,   963,   963,   963,   963,   963,   963,   963,   963,
     963,   963,   963,   965,   964,   967,   966,   969,   968,   971,
     970,   972,   973,   974,   976,   975,   977,   978,   978,   978,
     979,   979,   981,   982,   983,   980,   984,   984,   984,   985,
     985,   987,   988,   986,   990,   989,   991,   991,   992,   992,
     994,   995,   993,   997,   998,   996,   999,   999,  1001,  1000,
    1002,  1002,  1004,  1003,  1006,  1005,  1008,  1007,  1009,  1010,
    1011,  1009,  1012,  1013,  1009,  1014,  1014,  1015,  1015,  1015,
    1016,  1016,  1017,  1017,  1018,  1018,  1019,  1019,  1020,  1020,
    1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1021,
    1021,  1022,  1022,  1023,  1023,  1023,  1023,  1023,  1023,  1023,
    1024,  1024,  1025,  1025,  1026,  1027,  1027,  1028,  1028,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1030,  1030,  1031,  1031,
    1032,  1032,  1032,  1033,  1034,  1034,  1035,  1036,  1037,  1038,
    1039,  1040,  1041,  1042,  1043,  1044,  1045,  1046,  1047,  1047,
    1048,  1049,  1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,
    1053,  1054,  1054,  1055,  1056,  1056,  1056,  1056,  1056,  1056,
    1057,  1057,  1058,  1058,  1059,  1059,  1060,  1060,  1060,  1061,
    1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,  1066,
    1067,  1067,  1067,  1068,  1068,  1069,  1069,  1070,  1070,  1072,
    1071,  1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,
    1078,  1078,  1079,  1079,  1080,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1081,  1081,  1082,  1082,  1083,  1083,  1084,  1084,
    1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,  1089,
    1089,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1091,  1091,  1092,  1093,
    1094,  1095,  1095,  1095,  1095,  1095,  1095,  1096,  1096,  1096,
    1097,  1097,  1097,  1097,  1098,  1098,  1099,  1099,  1100,  1101,
    1101,  1102,  1102,  1102,  1102,  1102,  1102,  1103,  1104,  1104,
    1105,  1105,  1106,  1106,  1107,  1108,  1108,  1109,  1109,  1110,
    1110,  1110,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1113,  1113,  1114,
    1114,  1115,  1115,  1115,  1115,  1115,  1116,  1116,  1116,  1116,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1119,  1119,  1120,
    1120,  1121,  1121,  1121,  1122,  1123,  1123,  1124,  1124,  1124,
    1125,  1125,  1126,  1126,  1127,  1127,  1127,  1128,  1128,  1128,
    1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,  1132,  1133,
    1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1134,  1134,  1134,  1135,  1135,  1135,  1136,  1137,  1137,  1138,
    1138,  1139,  1139,  1140,  1140,  1141,  1141,  1142,  1142,  1143,
    1143,  1144,  1144,  1145,  1145,  1146,  1146,  1146,  1147,  1147,
    1147,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1149,  1149,
    1151,  1150,  1152,  1152,  1153,  1154,  1154,  1155,  1155,  1156,
    1156,  1156,  1156,  1157,  1157,  1157,  1157,  1157,  1158,  1158,
    1158,  1158,  1158,  1159,  1159,  1160,  1160,  1161,  1161,  1162,
    1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,
    1167,  1167,  1168,  1168,  1169,  1170,  1170,  1171,  1171,  1172,
    1172,  1173,  1173,  1173,  1173,  1173,  1174,  1174,  1174,  1175,
    1175,  1176,  1176,  1177,  1177,  1178,  1178,  1178,  1179,  1179,
    1180,  1180,  1181,  1181,  1182,  1182,  1183,  1183,  1184,  1184,
    1185,  1185,  1186,  1186,  1188,  1187,  1190,  1189,  1192,  1191,
    1194,  1193,  1195,  1193,  1197,  1196,  1198,  1199,  1199,  1199,
    1199,  1200,  1201,  1202,  1202,  1202,  1202,  1202,  1202,  1202,
    1202,  1202,  1203,  1203,  1204,  1205,  1206,  1206,  1206,  1207,
    1207,  1208,  1208,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1210,
    1210,  1211,  1211,  1212,  1212,  1212,  1212,  1213,  1214,  1214,
    1214,  1214,  1215,  1215,  1216,  1216,  1217,  1217,  1218,  1218,
    1219,  1219,  1220,  1220,  1221,  1221,  1221,  1221,  1222,  1222,
    1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,
    1222,  1222,  1222,  1222,  1222,  1222,  1222,  1222,  1223,  1223,
    1224,  1224,  1225,  1225,  1226,  1226,  1226,  1226,  1226,  1227,
    1227,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1229,  1229,
    1229,  1230,  1230,  1230,  1230,  1230,  1231,  1232,  1232,  1233,
    1234,  1234,  1235,  1235,  1236,  1236,  1237,  1237,  1237,  1238,
    1238,  1238,  1239,  1239,  1239,  1239,  1240,  1240,  1241,  1242,
    1242,  1243,  1243,  1244,  1244,  1244,  1245,  1246,  1247,  1248,
    1248,  1249,  1251,  1252,  1250,  1253,  1254,  1254,  1255,  1255,
    1256,  1256,  1256,  1257,  1257,  1258,  1258,  1259,  1259,  1260,
    1260,  1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,  1265,
    1265,  1265,  1265,  1265,  1266,  1267,  1267,  1267,  1268,  1269,
    1269,  1270,  1270,  1271,  1271,  1271,  1272,  1273,  1273,  1274,
    1274,  1274,  1275,  1276,  1277,  1277,  1278,  1278,  1279,  1279,
    1279,  1279,  1279,  1279,  1280,  1281,  1281,  1281,  1283,  1282,
    1282,  1284,  1284,  1285,  1285,  1286,  1287,  1287,  1288,  1288,
    1289,  1290,  1290,  1291,  1291,  1292,  1292,  1293,  1294,  1295,
    1295,  1296,  1296,  1297,  1297,  1297,  1297,  1298,  1298,  1298,
    1298,  1298,  1299,  1299,  1299,  1299,  1299,  1299,  1299,  1300,
    1300,  1300,  1300,  1300,  1301,  1301,  1301,  1302,  1302,  1302,
    1303,  1303,  1304,  1304,  1305,  1306,  1306,  1307,  1307,  1308,
    1309,  1310,  1310,  1311,  1311,  1312,  1312,  1313,  1313,  1314,
    1314,  1314,  1315,  1315,  1316,  1317,  1317,  1318,  1318,  1319,
    1319,  1319,  1320,  1320,  1321,  1321,  1321,  1321,  1321,  1322,
    1322,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,  1323,
    1323,  1323,  1324,  1324,  1324,  1324,  1324,  1325,  1325,  1325,
    1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,
    1325,  1325,  1325,  1325,  1326,  1326,  1327,  1327,  1327,  1327,
    1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,
    1327,  1328,  1328,  1329,  1329,  1330,  1330,  1331,  1331,  1332,
    1332,  1332,  1332,  1332,  1332,  1332,  1333,  1333,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1335,  1335,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1338,  1338,  1339,  1339,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,  1339,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1341,  1341,  1342,
    1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,  1346,  1347,
    1348,  1348,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1350,  1350,  1350,  1350,  1350,
    1350,  1350,  1350,  1350,  1350,  1350,  1351,  1351,  1352,  1352,
    1353,  1353,  1353,  1354,  1354,  1355,  1355,  1355,  1356,  1356,
    1356,  1357,  1357,  1358,  1359,  1359,  1360,  1361,  1362,  1363,
    1363,  1364,  1364,  1365,  1365,  1366,  1366,  1367,  1367,  1368,
    1368,  1368,  1368,  1368,  1369,  1370,  1370,  1370,  1370,  1370,
    1371,  1371,  1371,  1371,  1371,  1372,  1372,  1372,  1373,  1374,
    1375,  1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,
    1379,  1380,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,
    1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,  1381,
    1381,  1381,  1381,  1381,  1382,  1382,  1383,  1383,  1384,  1384,
    1385,  1385,  1386,  1386,  1387,  1387,  1388,  1388,  1389,  1389,
    1389,  1390,  1390,  1391,  1391,  1391,  1391,  1391,  1391,  1392,
    1392,  1392,  1393,  1393,  1393,  1393,  1394,  1394,  1395,  1395,
    1396,  1396,  1397,  1397,  1398,  1399,  1399,  1399,  1399,  1399,
    1399,  1400,  1400,  1401,  1401,  1402,  1403,  1403,  1404,  1404,
    1405,  1406,  1407,  1407,  1408,  1408,  1408,  1409,  1409,  1410,
    1410,  1410,  1410,  1411,  1411,  1412,  1413,  1414,  1414,  1414,
    1415,  1415,  1415,  1415,  1416,  1416,  1417,  1417,  1418,  1418,
    1419,  1419,  1420,  1421,  1421,  1422,  1422,  1423,  1423,  1424,
    1425,  1425,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1427,  1427,  1427,  1427,  1427,  1427,
    1427,  1427,  1427,  1428,  1428,  1428,  1428,  1429,  1429,  1430,
    1430,  1431,  1431,  1432,  1432,  1433,  1434,  1434,  1435,  1435,
    1436,  1436,  1437,  1438,  1438,  1439,  1439,  1440,  1440,  1441,
    1441,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1446,  1446,
    1447,  1448,  1448,  1449,  1450,  1450,  1451,  1451,  1452,  1452,
    1453,  1453,  1454,  1455,  1455,  1455,  1456,  1456,  1456,  1456,
    1456,  1457,  1457,  1458,  1458,  1458,  1458,  1458,  1458,  1459,
    1459,  1459,  1459,  1459,  1460,  1460,  1460,  1460,  1460,  1461,
    1461,  1461,  1461,  1461,  1462,  1463,  1463,  1464,  1464,  1465,
    1465,  1466,  1467,  1467,  1467,  1468,  1469,  1470,  1471,  1472,
    1472,  1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,
    1482,  1483,  1484,  1485,  1485,  1486,  1486,  1487,  1487,  1488,
    1488,  1489,  1489,  1490,  1490,  1491,  1491,  1492,  1492,  1492,
    1493,  1493,  1493,  1494,  1494,  1494,  1494,  1495,  1495,  1496,
    1496,  1497,  1497,  1497,  1498,  1498,  1498,  1499,  1499,  1500,
    1501,  1501,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,
    1505,  1506,  1506,  1507,  1508,  1509,  1509,  1510,  1510,  1511,
    1511,  1512,  1512,  1513,  1513,  1514,  1515,  1515,  1516,  1516,
    1517,  1518,  1518,  1519,  1519,  1519,  1520,  1520,  1521,  1521,
    1522,  1522,  1522,  1523,  1524,  1524,  1525,  1525,  1526,  1526,
    1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1528,
    1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,
    1538,  1539,  1540,  1541,  1541,  1542,  1543,  1544,  1545,  1546,
    1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,
    1557,  1558,  1558,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1573,
    1574,  1574,  1575,  1575,  1576,  1576,  1577,  1577,  1578,  1578,
    1579,  1579,  1579,  1579,  1580,  1580,  1581,  1581,  1582,  1582,
    1583,  1583,  1583,  1584,  1585,  1586,  1586,  1586,  1586,  1586,
    1586,  1587,  1587,  1588,  1588,  1589,  1589,  1590,  1590,  1590,
    1592,  1591,  1594,  1593,  1593,  1595,  1595,  1596,  1595,  1597,
    1597,  1598,  1598,  1598,  1598,  1598,  1598,  1598,  1598,  1598,
    1598,  1598,  1598,  1599,  1599,  1601,  1600,  1600,  1602,  1602,
    1603,  1603,  1605,  1604,  1606,  1604,  1607,  1604,  1608,  1608,
    1609,  1609,  1611,  1610,  1612,  1613,  1613,  1614,  1615,  1615,
    1615,  1616,  1617,  1618,  1618,  1619,  1619,  1620,  1620,  1620,
    1621,  1621,  1622,  1622,  1623,  1623,  1624,  1624,  1625,  1625,
    1625,  1625,  1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1630,  1630,  1631,  1631,  1632,  1632,  1632,  1633,  1633,  1634,
    1634,  1635,  1635,  1636,  1636,  1637,  1638,  1638,  1638,  1638,
    1639,  1639,  1639,  1640,  1641,  1641,  1641,  1642,  1642,  1643,
    1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,  1645,
    1645,  1646,  1646,  1646,  1647,  1647,  1647,  1648,  1648,  1648,
    1649,  1649,  1650,  1650,  1651,  1651,  1652,  1653,  1654,  1654,
    1655,  1655,  1656,  1656,  1657,  1657,  1658,  1658,  1659,  1659,
    1660,  1661,  1662,  1663,  1664,  1665,  1666,  1666,  1667,  1668,
    1668,  1669,  1669,  1670,  1670,  1671,  1671,  1672,  1672,  1672,
    1673,  1673,  1673,  1674,  1674,  1675,  1675,  1676,  1676,  1677,
    1678,  1678,  1678,  1678,  1678,  1679,  1679,  1679,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,
    1680,  1680,  1680,  1681,  1681,  1681,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1684,
    1684,  1684,  1685,  1685,  1685,  1685,  1686,  1686,  1686,  1686,
    1686,  1687,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1689,
    1689,  1689,  1689,  1689,  1689,  1689,  1690,  1690,  1691,  1691,
    1692,  1692,  1693,  1694,  1694,  1695,  1695,  1696,  1696,  1697,
    1697,  1698,  1698,  1698,  1698,  1698,  1699,  1699,  1699,  1699,
    1700,  1700,  1700,  1700,  1701,  1701,  1701,  1701,  1701,  1701,
    1702,  1703,  1703,  1703,  1703,  1703,  1703,  1703,  1704,  1704,
    1704,  1705,  1705,  1706,  1707,  1707,  1708,  1709,  1709,  1710,
    1710,  1711,  1711,  1711,  1711,  1712,  1712,  1712,  1712,  1712,
    1712,  1712,  1714,  1713,  1713,  1715,  1715,  1716,  1716,  1717,
    1718,  1718,  1718,  1718,  1720,  1719,  1719,  1721,  1722,  1723,
    1724,  1724,  1724,  1724,  1724,  1724,  1724,  1724,  1725,  1725,
    1725,  1725,  1725,  1726,  1726,  1727,  1727,  1727,  1727,  1728,
    1728,  1728,  1728,  1728,  1729,  1729,  1730,  1729,  1729,  1729,
    1731,  1731,  1732,  1731,  1731,  1733,  1733,  1733,  1733,  1734,
    1734,  1735,  1735,  1736,  1736,  1736,  1736,  1736,  1736,  1736,
    1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,
    1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,  1736,
    1736,  1736,  1736,  1736,  1736,  1736,  1736,  1737,  1737,  1738,
    1738,  1739,  1739,  1740,  1740,  1740,  1741,  1741,  1741,  1741,
    1741,  1742,  1742,  1743,  1743,  1744,  1744,  1745,  1745,  1746,
    1746,  1746,  1747,  1747,  1747,  1748,  1748,  1748,  1749,  1749,
    1749,  1749,  1749,  1749,  1750,  1751,  1752,  1753,  1754,  1755,
    1756,  1756,  1756,  1757,  1757,  1757,  1757,  1757,  1757,  1757,
    1757,  1757,  1757,  1757,  1757,  1757,  1757,  1757,  1757,  1758,
    1759,  1759,  1760,  1760,  1761,  1761,  1762,  1762,  1763,  1763,
    1763,  1763,  1763,  1764,  1764,  1765,  1765,  1766,  1766,  1766,
    1766,  1766,  1767,  1767,  1769,  1768,  1770,  1770,  1771,  1771,
    1771,  1772,  1772,  1772,  1773,  1773,  1774,  1775,  1775,  1776,
    1777,  1778,  1778,  1778,  1779,  1780,  1781,  1782,  1782,  1782,
    1782,  1782,  1782,  1782,  1782,  1783,  1784,  1784,  1784,  1785,
    1785,  1785,  1785,  1785,  1786,  1786,  1786,  1786,  1786,  1786,
    1787,  1787,  1788,  1789,  1790,  1790,  1790,  1791,  1792,  1792,
    1792,  1793,  1793,  1793,  1795,  1794,  1796,  1797,  1797,  1797,
    1797,  1798,  1798,  1799,  1799,  1801,  1800,  1802,  1802,  1804,
    1805,  1806,  1807,  1803,  1809,  1810,  1811,  1812,  1808,  1813,
    1813,  1813,  1813,  1813,  1813,  1814,  1814,  1815,  1815,  1815,
    1816,  1816,  1817,  1817,  1817,  1818,  1818,  1819,  1819,  1819,
    1820,  1820,  1821,  1821,  1822,  1822,  1823,  1824,  1824,  1825,
    1825,  1826,  1826,  1826,  1827,  1827,  1828,  1828,  1829,  1829,
    1830,  1830,  1831,  1831,  1832,  1832,  1833,  1833,  1833,  1834,
    1834,  1835
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     4,     1,     2,     0,     4,     0,
       2,     3,     1,     2,     0,     3,     1,     2,     0,     6,
       0,     6,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     3,     1,     3,     1,     2,     3,     5,     7,
       2,     3,     1,     3,     3,     2,     3,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     5,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     3,
       9,     6,     7,     9,     4,    10,     0,     6,     2,     9,
       7,     6,     7,    11,     8,     7,     0,     3,     3,     6,
       3,     0,     3,    12,    11,    11,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       3,     4,     0,     2,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     0,     2,     0,     2,     2,     2,     2,     2,     3,
       3,     1,     1,     1,     2,     3,     3,     3,     0,     3,
       0,     1,     3,     1,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       5,     5,     0,     7,     0,     6,     1,     1,     1,     3,
       1,     1,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       1,     3,     1,     3,     3,     1,     2,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     5,     0,     2,     0,     3,     0,
       2,     2,     2,     2,     0,     6,     2,     0,     2,     1,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     1,
       1,     0,     0,     8,     0,     6,     1,     2,     1,     2,
       0,     0,     6,     0,     0,     6,     0,     2,     0,     5,
       0,     1,     0,     5,     0,     2,     0,     5,     4,     0,
       0,     8,     0,     0,     8,     1,     1,     1,     1,     1,
       0,     2,     0,     4,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     1,     1,     2,     1,     1,     2,     3,     1,     3,
       3,     3,     3,     3,     3,     3,     4,     3,     1,     1,
       3,     3,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     1,     2,     1,     4,     0,     1,     1,     2,
       1,     1,     1,     0,     3,     1,     2,     1,     3,     0,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     5,     1,     1,     3,     4,     4,     3,     2,     2,
       3,     3,     2,     3,     3,     1,     1,     1,     4,     4,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     0,
       1,     6,     7,     7,     7,     8,     3,     4,     0,     2,
       0,     1,     0,     1,     2,     2,     9,     0,     2,     0,
       1,     1,     3,     3,     3,     1,     2,     1,     1,     3,
       2,     3,     2,     2,     1,     3,     3,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     5,     5,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     1,     1,     1,     0,
       1,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     2,     4,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     0,     2,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     0,     2,
       1,     3,     4,     4,     0,     5,     0,     5,     0,     5,
       0,     5,     0,     4,     0,    10,     7,     6,     6,     6,
       4,     7,     7,     6,     5,     5,     5,     5,     5,     5,
       3,     3,     0,     2,     8,     3,     0,     2,     2,     0,
       1,     1,     2,     2,     2,     2,     5,     3,     3,     3,
       3,     5,     4,     3,     4,     4,     2,     2,     2,     0,
       2,     2,     1,     2,     2,     2,     2,     3,     0,     3,
       1,     4,     0,     3,     0,     2,     0,     1,     1,     2,
       1,     3,     1,     2,     0,     1,     1,     3,     2,     2,
       3,     6,     5,     3,     4,     4,     4,     4,     5,     4,
       3,     3,     8,     7,     4,     4,     1,     1,     0,     1,
       2,     2,     1,     1,     1,     3,     3,     1,     3,     1,
       3,     6,     5,     2,     6,     5,     4,     4,     3,     3,
       3,     3,     2,     2,     6,     8,     5,     5,     4,     4,
       4,     3,     5,     5,     5,     5,     1,     3,     1,     1,
       1,     0,     1,     1,     2,     2,     3,     1,     1,     3,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     2,     2,     2,     0,
       1,     1,     3,     1,     1,     1,     3,     3,     3,     1,
       1,     4,     0,     0,    11,     3,     0,     1,     1,     3,
       3,     2,     2,     0,     3,     0,     3,     0,     3,     0,
       3,     0,     1,     1,     3,     1,     1,     0,     2,     1,
       3,     3,     3,     1,     4,     0,     1,     1,     5,     0,
       1,     1,     2,     1,     1,     1,     5,     0,     3,     0,
       5,     4,     2,     4,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     4,     0,     1,     1,     0,     4,
       3,     3,     5,     1,     3,     3,     5,     7,     1,     3,
       2,     1,     1,     8,     5,     1,     3,     3,     4,     0,
       4,     0,     2,     1,     2,     1,     1,     3,     2,     3,
       3,     2,     3,     4,     3,     4,     2,     3,     2,     1,
       4,     4,     4,     4,     3,     3,     4,     1,     1,     1,
       9,     8,     0,     1,     2,     1,     1,     1,     3,     2,
       2,     0,     1,     2,     1,     1,     1,     2,     1,     3,
       4,     4,     1,     1,     2,     0,     1,     2,     1,     3,
       1,     1,     1,     2,     0,     2,     2,     1,     1,     0,
       2,     3,     3,     3,     2,     3,     4,     3,     4,     3,
       4,     1,     3,     4,     3,     4,     1,     3,     4,     5,
       7,     6,     8,     6,     5,     6,     4,     3,     5,     4,
       6,     3,     4,     1,     1,     0,     3,     3,     3,     3,
       3,     3,     5,     5,     3,     3,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     3,
       2,     2,     2,     2,     1,     3,     5,     6,     2,     4,
       7,     2,     7,     9,    12,     5,     6,     6,     4,     4,
       5,     3,     3,     0,     1,     4,     6,     2,     4,     4,
       4,    10,     6,     8,     8,     6,     4,     4,     6,     4,
       4,     4,     6,     4,     7,     7,     7,     6,     6,     6,
       6,     3,     4,     6,     8,     2,     2,     8,     8,     6,
       6,     1,     6,     6,     8,     8,     6,     8,     6,     2,
       8,     8,     2,     2,     2,     0,     2,     4,     4,     4,
       4,     3,     8,     6,     8,     4,     6,     4,     6,     8,
       4,     3,     6,     4,     6,     4,     7,     7,    10,     1,
       4,     4,     4,     4,     4,     6,     4,     4,     6,     2,
       3,     0,     4,     0,     3,     0,     1,     1,     3,     2,
       1,     1,     5,     6,     5,     5,     5,     7,     5,     6,
       5,     6,     5,     6,     5,     6,     5,     6,     5,     5,
       5,     5,     5,     6,     8,     4,     4,     4,     4,     4,
       5,     7,     7,     6,     6,     9,     0,     3,     1,     1,
       1,     1,     2,     0,     2,     0,     2,     2,     0,     2,
       2,     0,     1,     2,     1,     1,     1,     3,     4,     0,
       1,     0,     3,     0,     3,     0,     3,     1,     1,     2,
       2,     2,     4,     2,     4,     1,     2,     2,     2,     4,
       0,     3,     2,     2,     3,     1,     1,     1,     4,     2,
       3,     1,     4,     0,     1,     0,     2,     0,     3,     3,
       1,     2,     2,     3,     2,     1,     2,     1,     2,     1,
       1,     2,     2,     2,     1,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     1,     3,
       1,     3,     0,     1,     0,     2,     4,     5,     1,     1,
       4,     1,     1,     5,     7,     5,     7,     3,     3,     3,
       4,     4,     1,     2,     2,     1,     3,     3,     0,     1,
       0,     1,     0,     1,     4,     1,     1,     1,     1,     1,
       1,     3,     5,     3,     3,     4,     3,     3,     3,     4,
       8,     4,     1,     3,     3,     7,     4,     0,     1,     0,
       1,     1,     2,     1,     2,     3,     3,     1,     1,     2,
       0,     2,     3,     3,     1,     1,     6,     6,     1,     2,
       0,     1,     1,     0,     1,     1,     1,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       2,     0,     1,     0,     1,     2,     0,     2,     2,     3,
       3,     1,     4,     0,     3,     1,     3,     0,     2,     1,
       3,     3,     0,     4,     3,     1,     0,     1,     3,     1,
       2,     0,     1,     3,     3,     1,     0,     1,     1,     1,
       0,     1,     2,     1,     3,     3,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     2,     5,     2,     1,     2,     6,     6,     4,     6,
       4,     5,     4,     4,     5,     4,     4,     4,     5,     5,
       4,     6,     4,     1,     3,     1,     3,     0,     2,     0,
       1,     0,     1,     1,     3,     1,     1,     9,    10,     8,
       6,     7,     6,     0,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     4,     1,     3,     4,     3,     1,     2,
       1,     2,     1,     1,     1,     3,     1,     3,     1,     1,
       1,     0,     1,     3,     4,     0,     1,     3,     1,     1,
       1,     0,     3,     0,     5,    10,     0,     1,     3,     1,
       3,     0,     1,    10,     7,     8,     0,     2,     0,     2,
       1,     1,     1,     3,     0,     1,     0,     1,     1,     3,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     0,
       3,     3,     5,     5,     4,     5,     5,     2,     4,     4,
       4,     7,     3,     3,     2,     6,     7,     7,     3,     6,
       6,     3,     3,     2,     5,     4,     3,     4,     3,     3,
       2,     2,     4,     6,     5,     4,     4,     3,     4,     4,
       4,     4,     4,     4,     4,     4,     4,     4,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     2,     0,     2,
       0,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     3,     2,     1,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     3,     3,     3,     1,
       0,     2,     0,     4,     0,     4,     0,     3,     0,     1,
       0,     2,     0,     3,     3,     2,     2,     3,     0,     1,
       1,     2,    18,     1,     1,     0,     1,     0,     1,     1,
       0,     1,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     3,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       0,     1,     1,     1,     3,     5,     2,     1,     1,     1,
       1,     1,     3,     5,     1,     3,     2,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     2,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     5,     5,     7,     7,     3,
       3,     3,     6,     6,     6,     4,     0,     2,     4,     6,
       1,     3,     1,     2,     2,     0,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     4,     6,     2,     3,     3,     2,     1,     3,
       3,     2,     2,     1,     0,     2,     3,     0,     2,     2,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     4,     4,     1,     1,     1,     3,     3,
       1,     1,     2,     2,     0,     3,     2,     1,     1,     3,
       4,     2,     6,     5,     9,     3,     3,     2,     4,     3,
       6,     7,    10,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     7,     0,     9,     8,     6,
       5,     9,     0,    11,     7,     0,     1,     1,     1,     0,
       1,     1,     3,     2,     3,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     2,     0,     3,     0,
       1,     3,     1,     2,     2,     2,     1,     3,     3,     1,
       3,     1,     3,     1,     3,     0,     3,     0,     3,     3,
       2,     7,     3,     3,     2,     0,     2,     4,     1,     1,
       1,     1,     1,     1,     3,     4,     3,     5,     5,     6,
       3,     3,     3,     5,     5,     3,     3,     5,     2,     3,
       3,     3,     2,     4,     7,     4,     7,     3,     5,     2,
       1,     3,     1,     3,     0,     3,     1,     3,     0,     2,
       2,     2,     2,     0,     3,     0,     3,     0,     3,     4,
       3,     3,     0,     3,     0,     3,     0,     1,     0,     3,
       2,     0,     1,     2,     0,     1,     4,     4,     5,     2,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     3,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     1,     2,     1,     2,     3,     3,
       3,     0,     3,     3,     0,     7,     2,     0,     3,     4,
       4,     1,     1,     0,     2,     0,    12,     7,     6,     0,
       0,     0,     0,    14,     0,     0,     0,     0,    11,     4,
       4,     3,     4,     3,     3,     0,     2,     1,     3,     5,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     3,
       5,     3,     3,     3,     1,     3,     4,     6,    10,     1,
       5,     0,     2,     3,     1,     1,     0,     3,     1,     3,
       1,     3,     1,     2,     0,     3,     0,     1,     1,     0,
       1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24800 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24814 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24836 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24844 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2216 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24853 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24869 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24896 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24905 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2273 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 24911 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24917 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24923 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24929 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24935 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24941 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24947 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24953 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24959 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24965 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24971 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24977 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24983 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24989 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24995 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25001 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25007 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25013 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25019 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25025 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25031 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25037 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25043 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25049 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25055 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25061 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25067 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25073 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25079 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25085 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25091 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25097 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25103 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25109 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25115 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25121 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25127 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25133 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25139 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25145 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25151 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25157 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25163 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25169 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25175 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25181 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25187 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25193 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25199 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25205 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25211 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25217 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25223 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25229 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25235 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25241 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25247 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25253 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25264 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25285 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25296 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25307 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25318 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2477 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25324 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25335 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25347 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25357 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25366 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25381 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25390 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25404 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25413 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25424 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25435 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25446 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25457 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25468 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25480 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25491 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25501 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25509 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25520 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25529 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25540 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25550 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25558 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25570 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25580 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25590 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25598 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25609 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25618 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25631 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25641 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25649 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25669 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 25680 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 25690 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 25699 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 25709 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 25718 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 25727 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 25736 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 25745 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 25754 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 25763 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 25772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 25781 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 25790 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 25799 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 25808 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 25817 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 25826 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 25835 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2925 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 25844 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 25853 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 25862 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 25871 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 25880 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 25889 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 25898 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 25907 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 2997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 25915 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 25923 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 25931 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 25939 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 25953 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3023 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 25961 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 25969 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 25978 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 25993 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26002 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26010 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26018 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26026 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26034 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26042 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26050 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26059 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26067 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26075 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26083 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26093 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26131 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26139 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26147 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26155 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26165 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 26185 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26205 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 26226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26234 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26244 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26254 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26262 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26270 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26278 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26286 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26294 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26308 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26317 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26326 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26335 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26344 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26352 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26372 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26380 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26391 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26397 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26403 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26416 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26429 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26437 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26445 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26453 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26463 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26475 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26486 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3411 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26492 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26506 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26529 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26551 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26574 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26591 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26599 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26607 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26617 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26633 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26649 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 26666 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26682 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 26690 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 26698 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26709 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26720 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26731 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 26739 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 26747 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 26755 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 26763 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 26772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 26780 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 26788 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26808 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26820 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26831 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26841 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3699 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26847 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26857 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26867 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26877 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26888 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26898 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26908 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26914 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26924 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 26934 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26940 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 26949 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 26999 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27013 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27031 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27051 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3883 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27057 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3884 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27063 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3888 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27069 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3889 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27075 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3895 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27081 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3897 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27087 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3899 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27093 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3901 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27099 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27105 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3905 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27111 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3907 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27117 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3912 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3913 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3914 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27135 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27143 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27151 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27159 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27165 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3938 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27173 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27225 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27276 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27282 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27288 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27294 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27300 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4074 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27306 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4079 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27312 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27320 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27345 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4117 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27444 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27465 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27510 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27548 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4307 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27561 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4316 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27627 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27633 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27639 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27645 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27651 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 27675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4417 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27690 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4432 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27713 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4453 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4454 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27725 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27733 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27750 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27760 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27770 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27780 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27794 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 27824 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27830 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27836 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27842 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 27848 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4550 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 27854 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27864 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27874 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4574 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27880 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 27904 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4596 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27910 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 27916 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 27922 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 27928 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 27934 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 27940 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 27946 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 27952 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 27958 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 27964 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 27970 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 27976 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 27982 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27997 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28014 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28020 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28026 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28032 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28042 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28052 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28062 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28072 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28082 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28114 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4742 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28135 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4753 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28141 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28151 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28161 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28171 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28177 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28183 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28189 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28195 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28207 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4793 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28213 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4795 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28219 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28225 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28231 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28237 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28243 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28249 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28273 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28297 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28306 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28315 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4882 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28321 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28331 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28344 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28401 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4957 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28413 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4965 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28463 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5013 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28478 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28491 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28549 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28597 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28621 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28645 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5183 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28651 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28697 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5255 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28731 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5263 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5301 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 28794 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5319 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28807 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5342 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 28821 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5352 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28867 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5397 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 28875 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 28883 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 28891 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5428 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28903 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5436 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28948 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5478 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 28957 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5486 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28969 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5494 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29010 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5532 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29019 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29037 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29059 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29080 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29086 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29092 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29112 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29131 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5634 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29146 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29155 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5653 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29172 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29206 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29223 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5715 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29235 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5723 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29277 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5764 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29296 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5781 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29308 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5789 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29350 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5832 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29356 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29362 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29368 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29374 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29380 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29386 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5859 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29394 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29400 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29408 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5873 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29414 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29424 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29434 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29440 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29450 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29460 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29466 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29476 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29486 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29492 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29502 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29512 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5991 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29518 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29528 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29538 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29544 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29550 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29556 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29562 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29570 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29578 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6044 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29584 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29592 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29600 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29608 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29616 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29624 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29632 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29640 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 29648 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 29656 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 29664 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 29672 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29680 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29686 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 29736 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 29745 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 29754 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 29765 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29776 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29787 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29793 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29799 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 29807 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 29815 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 29823 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29831 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 29839 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29847 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 29855 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29861 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29867 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6305 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 29873 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 29891 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29897 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29910 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 29916 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 29924 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 29932 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 29938 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29948 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29958 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29964 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29977 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 29983 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 29989 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 29999 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30009 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30018 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30026 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30035 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30044 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30050 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30058 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30066 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30077 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30087 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30102 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30110 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30120 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30130 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30136 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30142 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30148 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30154 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30164 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30174 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30182 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30188 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30198 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30208 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30214 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30220 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6557 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30232 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30238 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30244 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30250 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30256 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30278 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6600 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30284 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6601 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30290 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6605 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30296 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6606 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30302 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30311 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30320 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30336 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30342 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30348 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30358 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30368 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30378 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30388 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30396 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30404 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30412 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30420 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30428 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulonglong_number));
          }
#line 30445 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30453 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30461 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30469 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
          }
#line 30477 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30485 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30493 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30501 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30509 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30531 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30539 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30547 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30555 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30563 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30571 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30579 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30587 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30595 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30603 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30611 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30619 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30627 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 30635 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 30643 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 30651 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 30669 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 30677 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30685 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30693 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 30701 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 30719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 30725 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30731 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6873 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 30737 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 30743 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6881 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30749 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6882 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30755 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30761 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30767 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30773 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30779 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6890 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30785 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6891 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30791 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30797 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30803 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6897 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30809 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6898 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30815 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6899 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30821 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30831 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30841 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 30847 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 30853 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 30861 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 30867 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 30876 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30885 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30894 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30902 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30915 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 30927 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 30936 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 30942 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30948 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30954 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6991 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30960 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30966 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30972 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 30978 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 7001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 30984 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 7006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 30992 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31013 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31019 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7037 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31025 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31031 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31039 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31047 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31055 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31063 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31071 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31079 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31087 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31096 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31105 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31118 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31131 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31139 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31147 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31156 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31169 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31177 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31204 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31212 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31220 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31228 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31236 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31244 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31252 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31260 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31268 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31276 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31285 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31294 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31303 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31312 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31321 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31329 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31337 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31346 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31354 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31362 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31368 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31374 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31380 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31386 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31392 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31398 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31404 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31410 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7252 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31416 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7253 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31422 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7257 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31428 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7258 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31434 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7262 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31440 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7263 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31446 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31452 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7265 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31458 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7266 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31464 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31470 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31476 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31482 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31488 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31494 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31503 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31509 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31515 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31521 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31527 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7296 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31533 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31542 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31551 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31560 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31569 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31578 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31584 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31590 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31596 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31602 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 31611 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31617 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 31625 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31631 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 31637 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 31648 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31654 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31666 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31672 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 31678 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 31687 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7395 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 31693 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31716 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 31736 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 31744 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 31752 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 31760 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 31768 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 31776 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31784 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 31792 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 31800 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 31808 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31816 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31824 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31832 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 31840 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 31848 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 31856 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 31869 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 31877 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 31885 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31893 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31901 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 31909 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 31915 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 31921 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 31927 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 31933 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 31939 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 31945 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 31953 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31961 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 31974 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 31980 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 31986 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 31992 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32005 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32011 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32017 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32023 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32033 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32039 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32045 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32051 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7622 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32057 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7623 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32063 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 32069 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32078 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32087 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32099 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32109 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32119 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32128 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32137 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32146 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32155 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32166 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32176 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32188 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32194 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32203 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7716 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32215 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32221 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32233 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7748 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32239 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32245 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32256 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32267 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32273 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32279 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32285 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7773 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32291 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32300 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32309 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32318 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32327 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32336 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7807 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32342 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32348 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32354 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7810 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32360 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32366 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32372 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32378 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7820 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32384 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7821 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32390 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7825 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32396 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7830 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32402 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7831 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32408 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7832 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32414 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32420 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32426 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32432 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32442 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32452 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32467 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32473 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32483 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32493 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32499 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32509 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32519 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32525 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7921 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32531 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 32537 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32545 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 32553 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32561 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32569 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 32575 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32581 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32587 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 32593 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32599 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32605 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 32611 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 32617 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32623 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32629 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32635 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32645 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 32656 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32666 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32682 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32692 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32703 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32713 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 32719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 32725 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32731 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 32741 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 32750 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 32764 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 32778 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 32790 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 32803 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32818 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32829 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32844 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32855 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32870 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8178 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32876 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32892 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8197 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32898 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32918 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32935 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32958 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32980 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33003 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33015 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33038 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33062 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33074 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33089 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33104 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 33113 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33145 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33160 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 33171 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 33180 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33186 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33192 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33211 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33221 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33232 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33243 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8491 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33249 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33259 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33269 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33281 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33300 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33312 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33324 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33335 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33346 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33357 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33368 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33378 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33388 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33398 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33414 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33430 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33440 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8631 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33446 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8636 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33452 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8637 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33458 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33468 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33478 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33488 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33498 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 33512 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33518 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33524 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8683 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33530 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8684 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33536 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33542 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 33555 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33561 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33567 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 33573 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33579 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33595 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33604 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33613 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 33621 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 33629 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 33638 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 33647 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 33657 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 33665 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 33673 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 33681 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 33689 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 33697 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 33705 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33713 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33721 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33729 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33738 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33747 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 33755 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 33763 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 33771 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 33779 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 33787 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33795 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33803 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 33811 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 33819 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8872 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 33825 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 33833 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 33841 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 33847 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33858 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33867 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33875 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 33884 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 33896 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33905 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 33913 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 33921 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 33929 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33937 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33945 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 33954 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33962 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 33970 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 33978 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33986 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 33994 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 34002 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34010 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34018 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34026 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34034 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34042 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34050 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34058 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34066 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34074 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34082 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34090 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34098 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34108 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34116 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34124 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34133 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34142 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34151 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34157 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34166 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34175 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34185 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34195 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34209 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34227 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34233 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34241 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34259 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34265 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34271 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34277 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34283 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34289 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34295 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34301 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34307 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9169 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34313 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34319 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9171 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34325 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9172 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34331 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34340 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34350 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34363 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34377 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34385 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9242 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34391 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34406 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34423 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34444 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34453 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34470 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34478 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34486 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34494 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34502 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34510 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34518 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34526 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34534 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 34542 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34550 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 34559 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34567 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34575 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34583 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 34591 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34599 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34607 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34615 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34623 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 34631 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 34639 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 34648 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 34674 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 34683 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 34692 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 34700 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 34715 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34721 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 34727 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 34733 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34742 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34748 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34757 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 34763 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 34769 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9521 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 34775 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 34785 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 34791 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 34810 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 34820 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 34831 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 34842 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 34851 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34860 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34866 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34875 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 34881 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 34887 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 34893 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 34899 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 34905 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 34911 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 34919 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34925 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34931 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34937 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 34945 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9640 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34951 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 34959 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34968 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 34977 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 34991 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 34999 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35008 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35018 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35028 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35036 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35042 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35048 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35056 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 35064 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35074 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35084 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35092 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35100 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35106 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35117 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35137 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35146 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 35154 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35162 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35170 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35178 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35186 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 35194 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35202 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35210 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35218 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35234 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35242 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 35250 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 35258 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35266 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35274 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35282 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35290 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 35296 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 35302 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 35310 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35319 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35327 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35340 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35358 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 10009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35376 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 10025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35382 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 10030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35388 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10034 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35394 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35404 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35414 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35422 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35434 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35442 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35451 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35459 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35469 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10103 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35479 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35489 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 35497 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 35505 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 35513 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 35519 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 35525 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 35531 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 35537 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 35543 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 35549 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35559 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35569 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 35580 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35586 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35594 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 35600 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10183 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35606 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35612 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35618 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35624 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10190 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35630 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10191 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35636 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35646 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35655 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35665 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35673 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 35681 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 35689 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 35697 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 35705 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35713 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35721 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35729 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35737 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 35745 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 35762 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 35770 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35779 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 35787 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 35798 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 35806 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 35819 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 35827 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 35835 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 35843 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 35855 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35863 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35871 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35880 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35889 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 35901 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35913 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35921 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35929 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35937 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35945 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35953 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35961 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 35969 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 35977 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35985 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 35993 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36001 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36009 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36017 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36025 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10437 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 36033 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10448 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 36039 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36045 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36051 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36057 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10456 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36063 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36069 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36075 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36081 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36087 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36093 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36101 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36107 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36115 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36131 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36139 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36147 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36155 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10506 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36161 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36169 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36177 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36185 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36193 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36210 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36218 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36237 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36245 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36253 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36261 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36269 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36277 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36285 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36296 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36308 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36314 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36320 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36328 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36336 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36344 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36352 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36360 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36368 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36376 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36384 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36392 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36402 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36410 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36418 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36426 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36434 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36442 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36450 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36458 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36466 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36475 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36484 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 36493 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 36501 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 36509 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 36517 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 36525 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36534 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 36542 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 36550 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 36558 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36566 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 36574 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36582 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36590 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36598 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 36606 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 36614 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36623 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 36631 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 36639 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36647 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36655 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36663 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36671 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36679 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36688 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 36696 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 36704 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 36712 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36720 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36728 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 36736 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 36744 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 36752 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 36760 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 36768 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 36776 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 36784 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36792 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36800 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36808 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 36816 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36824 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 36832 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36840 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36848 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 36856 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 36864 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 36872 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 36880 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36888 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 36896 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 36904 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 36912 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 36920 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 36930 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 36940 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 36950 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 36960 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 36970 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36978 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 36988 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 36996 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37004 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37010 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 37024 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37030 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37036 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37042 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37048 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37054 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37060 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37070 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37080 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37088 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37096 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37104 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37112 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37120 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37134 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37148 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 37156 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 37164 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37172 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37180 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37188 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37196 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37204 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37212 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37220 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37228 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37236 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37244 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37252 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37260 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37268 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37276 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37284 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37292 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37300 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37308 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37316 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37324 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37332 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37347 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37362 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37370 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37378 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37391 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37400 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37409 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37415 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37421 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37427 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37433 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37441 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37449 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37457 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37465 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37473 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37481 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37489 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 37497 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 37505 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37513 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37521 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 37529 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37537 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 37545 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 37553 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11359 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 37571 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 37579 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 37587 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37595 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37603 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37611 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37619 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 37627 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 37635 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 37644 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 37652 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 37660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 37668 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 37676 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37684 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 37692 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 37700 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 37708 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 37716 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 37724 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 37732 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37740 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 37748 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 37756 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 37764 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 37772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 37779 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 37785 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 37791 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 37797 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 37805 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11521 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 37811 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 37822 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37830 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 37838 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37844 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37850 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 37860 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 37866 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 37872 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 37878 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37887 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37898 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 37906 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 37917 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 37940 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 37952 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37963 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37974 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37985 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37996 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38007 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38018 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38029 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38040 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 38051 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38062 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38074 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38085 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38096 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38107 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38118 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38140 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38151 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38162 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38168 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38178 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38188 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38194 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38200 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38210 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38220 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38232 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38238 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38244 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38256 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38266 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38272 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11824 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38278 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38292 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38298 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38304 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38312 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38320 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38328 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38336 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38349 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38357 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38363 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11955 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38369 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38375 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38381 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38387 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38393 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38399 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38405 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38411 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38417 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38425 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38431 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38437 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38443 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38449 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38455 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38465 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38471 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38477 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38485 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38491 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38497 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38514 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38526 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 38542 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 38550 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38560 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38570 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 38578 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 38591 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 38599 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 38607 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 38615 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38624 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38633 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38642 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 38651 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 38657 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 38669 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38681 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 38689 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 38697 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 38705 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 38713 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38725 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38731 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38737 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38743 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38752 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38761 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 38770 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 38776 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 38787 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38797 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38807 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38817 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38826 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 38839 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38852 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12323 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38858 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 38864 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 38870 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 38876 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 38882 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 38888 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 38894 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 38900 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 38906 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 38912 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 38918 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 38924 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 38930 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 38936 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 38942 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 38948 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 38954 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 38960 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 38966 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 38972 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 38978 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12350 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 38984 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12351 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 38990 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12352 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 38996 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12353 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39002 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 39008 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39014 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 39020 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 39026 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39032 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 39040 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 39048 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39056 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39065 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39075 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39092 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39105 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39113 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39133 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39141 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39149 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39159 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39169 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39180 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39186 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39194 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39203 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39214 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39220 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39235 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39246 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39254 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39260 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39268 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39277 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39288 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39294 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39300 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39306 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39312 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39320 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39330 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39340 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39350 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39358 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39366 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39374 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39382 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39390 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39396 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39402 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12661 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39408 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12662 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39414 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12663 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39420 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12664 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39426 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12665 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39432 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12666 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39438 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12670 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39444 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39450 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12672 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39456 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12673 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39462 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12674 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39468 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12678 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39474 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12679 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39480 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12680 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39486 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12681 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39492 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12682 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39498 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12686 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39504 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39510 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12688 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39516 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12689 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39522 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12690 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39528 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12695 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39534 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39544 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39554 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 39562 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 39570 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 39578 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 39586 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39594 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 39600 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 39610 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39627 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 39637 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39648 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39711 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 39719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 39735 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12884 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 39746 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39762 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 39772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 39784 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39806 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39829 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39852 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 39861 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 39869 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 39877 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39887 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39897 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39907 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39917 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39923 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 39929 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39935 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39941 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 39947 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 39957 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 39967 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 39983 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 39998 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13131 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40010 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40022 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40037 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40049 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40055 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40061 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13190 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40074 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13198 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40080 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13202 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40086 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13204 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40099 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40108 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40117 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40126 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40135 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40144 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40153 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40163 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40173 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40181 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 40187 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40195 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 40201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40210 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40220 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40229 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40239 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40245 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40251 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40261 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40271 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40281 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40289 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40298 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40312 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40321 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40329 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40338 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40344 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13422 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40350 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40361 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40374 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40383 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40389 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40395 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40403 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40411 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40419 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40425 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40431 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13507 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40437 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40443 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40449 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40457 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40463 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 40469 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 40475 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 40481 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 40487 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 40493 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 40499 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 40505 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 40511 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 40517 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 40523 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 40529 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 40540 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13561 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 40548 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40556 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40564 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40572 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40580 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13595 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40588 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 40596 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40604 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40612 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40620 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40632 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 40640 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40651 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40659 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 40667 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 40675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 40687 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13700 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 40695 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 40703 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 40711 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 40719 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 40727 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 40739 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 40747 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13753 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40755 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 40763 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40771 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40779 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40787 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 40795 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
#line 40803 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr);
          }
#line 40811 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list));
          }
#line 40819 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 40827 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 40835 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 40843 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 40851 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 40861 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 40869 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 40877 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13861 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 40885 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40893 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40901 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 40909 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 40917 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 40925 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 40933 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40939 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 40945 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 40951 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40957 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40963 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 40969 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 40975 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 40981 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 40987 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 40993 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13942 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 40999 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41005 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 41011 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13956 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41017 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13957 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41023 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 41029 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 41035 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 41041 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41049 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41057 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41065 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41073 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41091 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41113 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41124 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41130 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41139 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41150 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14068 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41156 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41173 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14085 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41179 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14090 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41185 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41213 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41229 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14128 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41235 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14133 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41241 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14135 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41247 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14137 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41253 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14139 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41259 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14141 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41265 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41275 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14149 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41281 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14151 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41287 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14153 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41293 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14155 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41299 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14157 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41305 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14159 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41311 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41317 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41326 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14174 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41332 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41343 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41353 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41363 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14206 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 41373 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41382 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14217 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 41388 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14219 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 41397 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 41417 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14243 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 41423 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14244 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 41429 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14248 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41435 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 41450 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 41460 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14270 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41466 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 41474 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 41487 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 41500 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14308 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41506 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14309 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41512 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14310 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 41518 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 41528 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 41551 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 41557 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 41563 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41569 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41575 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41581 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 41587 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41593 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 41599 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 41605 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 41611 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 41617 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 41623 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 41632 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 41641 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 41651 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 41660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 41669 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 41675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 41681 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 41690 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 41699 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 41708 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 41714 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 41720 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41726 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 41732 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41738 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41744 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41750 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41760 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41770 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41778 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 41784 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 41790 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41802 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41823 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41843 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 41852 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 41862 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41871 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 41880 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41891 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41902 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41913 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 41933 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41939 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 41950 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 41966 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 41972 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41978 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 41986 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 41994 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42002 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42010 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42018 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42026 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 42034 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 42042 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14705 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42048 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42054 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42060 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42068 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42076 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42084 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42090 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14728 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42096 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42104 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42115 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42131 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42139 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42147 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42155 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42165 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42175 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42187 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42197 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42209 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42215 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42246 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42260 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42274 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42291 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42308 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42326 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42334 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 42351 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 42357 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42369 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42380 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 42386 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42398 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 15004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42409 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 15013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42415 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 15014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42421 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 15015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42427 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 15026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42436 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 15031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42445 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 15039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 42453 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 15043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 42467 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 15056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42476 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 15061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42485 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 15069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 42495 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 42503 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 42511 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 42519 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 42527 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 42538 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 42550 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 42562 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 42575 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 42583 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42592 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42601 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 42610 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 42619 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 42628 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42637 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 42643 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 42649 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 42657 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 42665 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42685 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 42691 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 42702 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 42712 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 42718 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 42724 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42732 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42740 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 42748 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 42754 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42760 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 15835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42766 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 15836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 15837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42778 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 15838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42784 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 15842 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42790 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 15843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42796 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 15844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42802 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42808 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42814 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15850 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42820 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42826 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42832 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42838 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 15857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42844 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 15858 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42850 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42856 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 15860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42862 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42868 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 42876 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 42884 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 42892 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 42900 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 42908 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 42919 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 42927 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 42935 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42943 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42951 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 42959 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 42967 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 42975 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 42983 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15944 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 42989 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 42995 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 43003 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 43009 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43015 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 15961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43021 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43027 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43033 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43039 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 15968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43045 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 15969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43051 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 15974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43057 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 15976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43065 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 15980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43073 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 15984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43081 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 15988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43089 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 15992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43097 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43112 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16012 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43118 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43158 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43164 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43170 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43179 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43185 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43200 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16084 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43206 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43217 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43226 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43234 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43243 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43263 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 43271 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 43279 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43287 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 43295 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43314 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43333 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR);
          }
#line 43341 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 43349 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 43357 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43365 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43374 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43384 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43390 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43396 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43402 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43408 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16239 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 43414 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 43420 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 43426 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 43432 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 43438 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 43444 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 43450 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 43459 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43478 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43487 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43505 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 43514 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43526 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 43535 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43554 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43563 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43579 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43593 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43599 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43605 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 43611 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 43617 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43627 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43637 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 43648 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16395 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 43654 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16399 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43666 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43672 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43678 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 43684 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 43690 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 43696 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 43702 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 43708 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 43714 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 43720 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 43726 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16421 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 43732 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16423 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 43738 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 43744 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 43753 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 43759 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 43777 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 43783 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 43789 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 43795 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 43801 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16456 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 43807 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 43813 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 43819 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 43825 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 43831 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 43837 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 43843 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 43849 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 16472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 43855 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 43861 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43867 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43873 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 43887 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 43901 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 43915 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43933 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43949 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43965 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 43981 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 43999 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44009 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44019 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44029 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44039 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44045 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44051 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44057 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44063 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 44077 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 44090 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 44105 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44116 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 44134 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44144 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_mfas) = {}; }
#line 44150 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 44159 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 44169 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44183 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 44198 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44213 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44228 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44244 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44260 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44270 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44280 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44290 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44303 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44316 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44327 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44338 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 44351 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44362 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44373 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44384 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 44395 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44405 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 16909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44417 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 16917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44438 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 16934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44450 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 16942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44468 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 16956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 44483 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 44507 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 44522 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 17004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44531 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 17009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44540 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 17017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 44549 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 17022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44558 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 17029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 44564 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 17030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 44570 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 17035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44580 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 17041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44590 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 44598 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 17055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 44606 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 44614 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 17063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 44622 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 17069 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44628 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 17071 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 44634 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17075 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44640 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44646 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17080 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44652 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17082 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44669 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17091 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44675 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17093 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 44681 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17097 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 44687 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 44696 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 44706 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17111 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44712 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17115 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44718 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 17116 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44724 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44730 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44736 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44742 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44748 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44754 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44760 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17134 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44766 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17135 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44772 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44785 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44798 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 17162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44808 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 17171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44818 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44828 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44834 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44840 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 44846 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 17208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 44854 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 17214 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 44860 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17215 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 44866 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17216 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 44872 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 17217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 44878 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 17218 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 44884 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17219 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 44890 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 17220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 44901 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 17226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 44907 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 17237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 44918 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 17247 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44924 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 17249 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44930 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 17251 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44936 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 17284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 44951 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 17298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 44959 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 17311 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44965 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 17313 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44971 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 17315 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44977 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 17320 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 44983 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 17325 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 44989 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 17327 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 44995 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17329 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 45001 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17334 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45007 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17336 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45013 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17338 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45019 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45059 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45111 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 17433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45117 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45123 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45129 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17436 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45135 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45141 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45147 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17454 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45156 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17460 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45165 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17477 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45201 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17509 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45232 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45253 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45274 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17586 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45301 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17610 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 45309 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17616 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45354 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17657 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45366 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 45425 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17724 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 45449 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17744 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45457 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17749 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45469 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17757 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45481 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17765 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 45494 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45503 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45512 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 45521 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45530 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 45539 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 45548 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45554 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45560 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 45573 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 45587 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 45606 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17852 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45612 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17853 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45618 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 17857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45624 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 17858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 45630 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 17859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 45636 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45642 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 45648 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45654 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 45660 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17873 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 45666 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 45676 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 45686 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45696 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 45706 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45716 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45726 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 45739 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45750 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45771 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 45779 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 45787 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 45795 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 45803 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 45811 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 45817 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 45823 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 18002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 45834 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 18008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 45840 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 18013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45851 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 18020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45862 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 18030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 45873 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 18037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 45887 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 18049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 45893 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 18050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 45899 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 18054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 45905 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 18056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 45914 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 18063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 45920 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 18065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 45929 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 18070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 45938 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 18077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 45944 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 18078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 45950 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 18084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 45967 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 45971 "/var/lib/pb2/sb_1-4617039-1632834178.1/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
